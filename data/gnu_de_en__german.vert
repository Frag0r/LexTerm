<align>
<s>
https://www.gnu.org/gnu/about-gnu.html	N.Name	[url]-n
Informationen	N.Reg.Acc.Pl.Fem	Information-n
zum	APPRART.Dat.Sg.Neut	zu-i
GNU-Betriebssystem	N.Reg.Dat.Sg.Neut	GNU-Betriebssystem-n
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
rekursives	ADJA.Pos.Nom.Sg.Neut	rekursiv-j
Akronym	N.Reg.Nom.Sg.Neut	Akronym-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Not	N.Reg.Dat.Sg.Fem	Not-n
Unix	FM	Unix-x
(	SYM.Paren.Left	(-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
<g/>
'	SYM.Quot.Right	'-x
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
[	SYM.Paren.Left	[-x
<g/>
ˈgnuː	N.Name.Nom.Sg.*	ˈgnuː-n
<g/>
]	SYM.Paren.Right	]-x
ausgesprochen	VPP.Full.Psp	aussprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
[	SYM.Paren.Left	[-x
<g/>
Weitere	ADJA.Comp.Nom.Pl.Masc	weit-j
historische	ADJA.Pos.Nom.Pl.Masc	historisch-j
und	CONJ.Coord	und-c
allgemeine	ADJA.Pos.Nom.Pl.Masc	allgemein-j
Artikel	N.Reg.Nom.Pl.Masc	Artikel-n
über	APPR	über-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
<g/>
]	SYM.Paren.Right	]-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
(	SYM.Paren.Left	(-x
<g/>
RMS	N.Name.Nom.Sg.Neut	RMS-n
<g/>
)	SYM.Paren.Right	)-x
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1983	CARD	[number]-m
als	APPR	als-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
angekündigt	VPP.Full.Psp	ankündigen-v
<g/>
,	SYM.Pun.Comma	,-x
welches	PRO.Rel.Subst.Nom.Sg.Neut	welche-p
von	APPR	von-i
engagierten	ADJA.Pos.Dat.Pl.Masc	engagiert-j
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
zusammengestellt	VPP.Full.Psp	zusammenstellen-v
werden	VINF.Aux	werden-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
aller	PRO.Indef.Attr.Gen.Pl.Masc	alle-p
Softwarenutzer	N.Reg.Gen.Pl.Masc	Softwarenutzer-n
zusammenarbeiten	VINF.Full	zusammenarbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Datenverarbeitung	N.Reg.Acc.Sg.Fem	Datenverarbeitung-n
kontrollieren	VINF.Full	kontrollieren-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
RMS	N.Name.Nom.Sg.*	RMS-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
auch	ADV	auch-a
heute	ADV	heute-a
noch	ADV	noch-a
der	ART.Def.Nom.Sg.Masc	die-x
Chief	FM	Chief-x
GNUisance	FM	GNUisance-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
primäre	ADJA.Pos.Nom.Sg.Neut	primär-j
und	CONJ.Coord	und-c
anhaltende	ADJA.Pos.Nom.Sg.Neut	anhaltend-j
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
unixoides	ADJA.Pos.Nom.Sg.Neut	unixoid-j
System	N.Reg.Nom.Sg.Neut	System-n
anzubieten	VINF.Full.zu	anbieten-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
100	CARD	[number]-m
%	N.Reg.*.*.Neut	%-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nicht	PART.Neg	nicht-x
95	CARD	95-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
99,5	CARD	[number]-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
100	CARD	[number]-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
frei	PART.Verb	frei-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
rekursives	ADJA.Pos.Nom.Sg.Neut	rekursiv-j
Akronym	N.Reg.Nom.Sg.Neut	Akronym-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Not	N.Reg.Dat.Sg.Fem	Not-n
Unix	FM	Unix-x
(	SYM.Paren.Left	(-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
<g/>
'	SYM.Quot.Right	'-x
<g/>
)	SYM.Paren.Right	)-x
-	SYM.Pun.Hyph	--x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Art	N.Reg.Acc.Sg.Fem	Art-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
technischen	ADJA.Pos.Nom.Pl.Fem	technisch-j
Ideen	N.Reg.Nom.Pl.Fem	Idee-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
Tribut	N.Reg.Acc.Sg.Masc	Tribut-n
zu	PART.Zu	zu-x
zollen	VINF.Full	zollen-v
und	CONJ.Coord	und-c
gleichzeitig	ADJD.Pos	gleichzeitig-j
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GNU	N.Name.Nom.Sg.Neut	GNU-n
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
anderes	PRO.Indef.Subst.Nom.Sg.Neut	andere-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Technisch	ADJD.Pos	technisch-j
gesehen	VPP.Full.Psp	sehen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNU	N.Name.Nom.Sg.*	GNU-n
wie	CONJ.Coord	wie-c
Unix	N.Name.Nom.Sg.*	Unix-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
im	APPRART.Dat.Sg.Masc	in-i
Gegensatz	N.Reg.Dat.Sg.Masc	Gegensatz-n
zu	APPR	zu-i
Unix	N.Name.Dat.Sg.*	Unix-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
GNU	N.Name.Nom.Sg.*	GNU-n
seinen	PRO.Poss.Attr.Dat.Pl.Masc	seine-p
Benutzern	N.Reg.Dat.Pl.Masc	Benutzer-n
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Vollständig	ADJD.Pos	vollständig-j
freie	ADJA.Pos.Nom.Pl.Fem	frei-j
Distributionen	N.Reg.Nom.Pl.Fem	Distribution-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Ziel	N.Reg.Dat.Sg.Neut	Ziel-n
entsprechen	VFIN.Full.3.Pl.Pres.Ind	entsprechen-v
<g/>
,	SYM.Pun.Comma	,-x
stehen	VFIN.Full.3.Pl.Pres.Ind	stehen-v
heute	ADV	heute-a
zur	APPRART.Dat.Sg.Fem	zu-i
Verfügung	N.Reg.Dat.Sg.Fem	Verfügung-n
<g/>
,	SYM.Pun.Comma	,-x
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU	N.Name.Dat.Sg.Masc	GNU-n
Linux-libre-Betriebssystemkern	N.Reg.Dat.Pl.Masc	Linux-libre-Betriebssystemkern-n
(	SYM.Paren.Left	(-x
<g/>
die	ART.Def.Acc.Sg.Fem	die-x
Beziehung	N.Reg.Acc.Sg.Fem	Beziehung-n
zwischen	APPR	zwischen-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
und	CONJ.Coord	und-c
dem	ART.Def.Dat.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
an	APPR	an-i
anderer	ADJA.Pos.Dat.Sg.Fem	ander-j
Stelle	N.Reg.Dat.Sg.Fem	Stelle-n
umfassend	ADJD.Pos	umfassend-j
beschrieben	VPP.Full.Psp	beschreiben-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
GNU-Pakete	N.Reg.Nom.Pl.Neut	GNU-Paket-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
so	ADV	so-a
aufeinander	ADV	aufeinander-a
abgestimmt	VPP.Full.Psp	abstimmen-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
funktionierendes	ADJA.Pos.Acc.Sg.Neut	funktionierend-j
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
haben	VINF.Aux	haben-v
konnten	VFIN.Mod.1.Pl.Past.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
gezeigt	VPP.Full.Psp	zeigen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
auch	ADV	auch-a
als	APPR	als-i
gemeinsamer	ADJA.Pos.Nom.Sg.Masc	gemeinsam-j
Upstream	N.Reg.Nom.Sg.Masc	Upstream-n
für	APPR	für-i
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
Distributionen	N.Reg.Acc.Pl.Fem	Distribution-n
dienen	VFIN.Full.3.Pl.Pres.Ind	dienen-v
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
Beiträge	N.Reg.Nom.Pl.Masc	Beitrag-n
zu	APPR	zu-i
GNU-Paketen	N.Reg.Dat.Pl.Neut	GNU-Paket-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Gemeinschaft	N.Reg.Gen.Sg.Fem	Freie-Software-Gemeinschaft-n
als	APPR	als-i
Ganzes	N.Reg.Acc.Sg.Neut	Ganze-n
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Natürlich	ADV	natürlich-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
an	APPR	an-i
GNU	N.Name.Dat.Sg.*	GNU-n
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
Ziel	N.Reg.Dat.Sg.Neut	Ziel-n
abgeschlossen	VPP.Full.Psp	abschließen-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
System	N.Reg.Acc.Sg.Neut	System-n
zu	PART.Zu	zu-x
erstellen	VINF.Full	erstellen-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
Rechnernutzern	N.Reg.Dat.Pl.Masc	Rechnernutzer-n
die	ART.Def.Acc.Sg.Fem	die-x
größtmögliche	ADJA.Pos.Acc.Sg.Fem	größtmöglich-j
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU-Pakete	N.Reg.Nom.Pl.Neut	GNU-Paket-n
beinhalten	VFIN.Full.3.Pl.Pres.Ind	beinhalten-v
benutzerorientierte	ADJA.Pos.Acc.Pl.Fem	benutzerorientiert-j
Anwendungen	N.Reg.Acc.Pl.Fem	Anwendung-n
<g/>
,	SYM.Pun.Comma	,-x
Dienstprogramme	N.Reg.Acc.Pl.Neut	Dienstprogramm-n
<g/>
,	SYM.Pun.Comma	,-x
Hilfsprogramme	N.Reg.Acc.Pl.Neut	Hilfsprogramm-n
<g/>
,	SYM.Pun.Comma	,-x
Bibliotheken	N.Reg.Acc.Pl.Fem	Bibliothek-n
<g/>
,	SYM.Pun.Comma	,-x
sogar	ADV	sogar-a
Spiele	N.Reg.Nom.Pl.Neut	Spiel-n
-	SYM.Pun.Hyph	--x
alle	PRO.Indef.Attr.Nom.Pl.Neut	alle-p
Programme	N.Reg.Nom.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
seinen	PRO.Poss.Attr.Dat.Pl.Masc	seine-p
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
zweckmäßigerweise	ADV	zweckmäßigerweise-a
anbieten	VINF.Full	anbieten-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Neue	ADJA.Pos.Nom.Pl.Neut	neu-j
Pakete	N.Reg.Nom.Pl.Neut	Paket-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
willkommen	ADJD.Pos	willkommen-j
...	SYM.Pun.Cont	...-x
</s>
</align>
<align>
<s>
Tausende	N.Reg.Nom.Pl.Neut	Tausend-n
von	APPR	von-i
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
angeschlossen	VPP.Full.Psp	anschließen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
GNU	N.Name.Dat.Sg.*	GNU-n
so	ADV	so-a
erfolgreich	ADJD.Pos	erfolgreich-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
wie	CONJ.Comp	wie-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
heute	ADV	heute-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
um	ADV	um-a
mitzuwirken	VINF.Full.zu	mitwirken-v
<g/>
,	SYM.Pun.Comma	,-x
sowohl	CONJ.Coord	sowohl-c
technisch	ADJD.Pos	technisch-j
als	CONJ.Coord	als-c
auch	ADV	auch-a
nichttechnisch	ADJD.Pos	nichttechnisch-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU-Entwickler	N.Reg.Nom.Pl.Masc	GNU-Entwickler-n
treffen	VFIN.Full.3.Pl.Pres.Ind	treffen-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
von	APPR	von-i
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
zu	APPR	zu-i
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
auf	APPR	auf-i
GNU	N.Name.Nom.Sg.Masc	GNU-n
Hacker	N.Name.Nom.Sg.Masc	Hacker-n
Meetings	N.Reg.Acc.Pl.Neut	Meeting-n
<g/>
,	SYM.Pun.Comma	,-x
manchmal	ADV	manchmal-a
als	APPR	als-i
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
größeren	ADJA.Comp.Gen.Sg.Fem	groß-j
Freie-Software-Gemeinschaft	N.Reg.Gen.Sg.Fem	Freie-Software-Gemeinschaft-n
LibrePlanet-Konferenzen	N.Name.Nom.Sg.*	LibrePlanet-Konferenzen-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
auf	APPR	auf-i
verschiedene	ADJA.Pos.Acc.Sg.Fem	verschieden-j
Weise	N.Reg.Acc.Sg.Fem	Weise-n
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Dat.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
(	SYM.Paren.Left	(-x
<g/>
FSF	N.Name.Nom.Sg.*	FSF-n
<g/>
)	SYM.Paren.Right	)-x
unterstützt	VPP.Full.Psp	unterstützen-v
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
ebenfalls	ADV	ebenfalls-a
von	APPR	von-i
RMS	N.Name.Dat.Sg.*	RMS-n
gegründete	ADJA.Pos.Acc.Sg.Fem	gegründet-j
gemeinnützige	ADJA.Pos.Acc.Sg.Fem	gemeinnützig-j
Organisation	N.Reg.Acc.Sg.Fem	Organisation-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
für	APPR	für-i
Freie-Software-Ideale	N.Reg.Acc.Sg.Fem	Freie-Software-Ideale-n
einzutreten	VINF.Full.zu	eintreten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unter	APPR	unter-i
anderem	PRO.Indef.Subst.Dat.Sg.Neut	andere-p
akzeptiert	VFIN.Full.3.Sg.Pres.Ind	akzeptieren-v
die	ART.Def.Nom.Sg.Fem	die-x
FSF	N.Name.Nom.Sg.Fem	FSF-n
Copyright-Übertragungen	N.Reg.Acc.Pl.Fem	Copyright-Übertragung-n
und	CONJ.Coord	und-c
Verzichtserklärungen	N.Reg.Acc.Pl.Fem	Verzichtserklärung-n
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
vor	APPR	vor-i
Gericht	N.Reg.Dat.Sg.Neut	Gericht-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
der	ART.Def.Gen.Pl.Neut	die-x
GNU-Programme	N.Reg.Gen.Pl.Neut	GNU-Programm-n
fungieren	VINF.Full	fungieren-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
(	SYM.Paren.Left	(-x
<g/>
zur	APPRART.Dat.Sg.Fem	zu-i
Klarstellung	N.Reg.Dat.Sg.Fem	Klarstellung-n
<g/>
:	SYM.Pun.Colon	:-x
ein	ART.Indef.Nom.Sg.Neut	eine-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
zu	APPR	zu-i
GNU	N.Name.Dat.Sg.*	GNU-n
beizutragen	VINF.Full.zu	beitragen-v
<g/>
,	SYM.Pun.Comma	,-x
erfordert	VFIN.Full.3.Sg.Pres.Ind	erfordern-v
nicht	PART.Neg	nicht-x
das	ART.Def.Acc.Sg.Neut	die-x
Copyright	N.Reg.Acc.Sg.Neut	Copyright-n
an	APPR	an-i
die	ART.Def.Acc.Sg.Fem	die-x
FSF	N.Name.Acc.Sg.Fem	FSF-n
zu	PART.Zu	zu-x
übertragen	VINF.Full	übertragen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
Copyright	N.Reg.Acc.Sg.Neut	Copyright-n
zuweist	VFIN.Full.3.Sg.Pres.Ind	zuweisen-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
FSF	N.Name.Nom.Sg.Fem	FSF-n
die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.Fem	GPL-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
durchsetzen	VINF.Full	durchsetzen-v
<g/>
,	SYM.Pun.Comma	,-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
jemand	PRO.Indef.Subst.Nom.Sg.Masc	jemand-p
dagegen	PROADV.Dem	dagegen-x
zuwider	ADJD.Pos	zuwider-j
handeln	VINF.Full	handeln-v
<g/>
;	SYM.Pun.Sent	;-x
behält	VFIN.Full.3.Sg.Pres.Ind	behalten-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
Copyright	N.Reg.Acc.Sg.Neut	Copyright-n
<g/>
,	SYM.Pun.Comma	,-x
liegt	VFIN.Full.3.Sg.Pres.Ind	liegen-v
die	ART.Def.Acc.Sg.Fem	die-x
Durchsetzung	N.Reg.Acc.Sg.Fem	Durchsetzung-n
bei	APPR	bei-i
Ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
<g/>
.	SYM.Pun.Sent	.-x
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
endgültige	ADJA.Pos.Nom.Sg.Neut	endgültig-j
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
bereitzustellen	VINF.Full.zu	bereitstellen-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
Rechnernutzer	N.Reg.Nom.Pl.Masc	Rechnernutzer-n
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
erledigen	VINF.Full	erledigen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Fem	die-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
so	ADV	so-a
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
zu	APPR	zu-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Sache	N.Reg.Dat.Sg.Fem	Sache-n
der	ART.Def.Gen.Sg.Fem	die-x
Vergangenheit	N.Reg.Gen.Sg.Fem	Vergangenheit-n
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/gnu-history.html	N.Name	[url]-n
Geschichte	N.Reg.Nom.Sg.Fem	Geschichte-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
vollständig	ADJD.Pos	vollständig-j
freies	ADJA.Pos.Nom.Sg.Neut	frei-j
Softwaresystem	N.Reg.Nom.Sg.Neut	Softwaresystem-n
und	CONJ.Coord	und-c
aufwärtskompatibel	ADJD.Pos	aufwärtskompatibel-j
mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
für	APPR	für-i
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Not	N.Reg.Nom.Sg.Fem	Not-n
Unix	FM	Unix-x
(	SYM.Paren.Left	(-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
<g/>
'	SYM.Quot.Right	'-x
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
[	SYM.Paren.Left	[-x
<g/>
ˈgnuː	N.Name.Nom.Sg.*	ˈgnuː-n
<g/>
]	SYM.Paren.Right	]-x
ausgesprochen	VPP.Full.Psp	aussprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Nom.Sg.Masc	Stallman-n
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
im	APPRART.Dat.Sg.Masc	in-i
September	N.Reg.Dat.Sg.Masc	September-n
1983	CARD	[number]-m
die	ART.Def.Acc.Sg.Fem	die-x
Ursprüngliche	ADJA.Pos.Acc.Sg.Fem	ursprünglich-j
Ankündigung	N.Reg.Acc.Sg.Fem	Ankündigung-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
März	N.Reg.Dat.Sg.Masc	März-n
1985	CARD	[number]-m
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
längere	ADJA.Comp.Nom.Sg.Fem	lang-j
Fassung	N.Reg.Nom.Sg.Fem	Fassung-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Manifest	N.Reg.Nom.Sg.Neut	GNU-Manifest-n
<g/>
,	SYM.Pun.Comma	,-x
veröffentlicht	VPP.Full.Psp	veröffentlichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
mehrsprachig	ADJD.Pos	mehrsprachig-j
übersetzt	VPP.Full.Psp	übersetzen-v
worden	VPP.Aux.Psp	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
gewählt	VPP.Full.Psp	wählen-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
einiger	PRO.Indef.Attr.Gen.Pl.Masc	einige-p
Belange	N.Reg.Gen.Pl.Masc	Belang-n
erfüllte	VFIN.Full.3.Sg.Past.Ind	erfüllen-v
<g/>
:	SYM.Pun.Colon	:-x
erstens	ADV	erstens-a
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
rekursives	ADJA.Pos.Nom.Sg.Neut	rekursiv-j
Akronym	N.Reg.Nom.Sg.Neut	Akronym-n
für	APPR	für-i
GNU	ADJD.Pos	GNU-j
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Not	N.Reg.Nom.Sg.Fem	Not-n
Unix	FM	Unix-x
<g/>
,	SYM.Pun.Comma	,-x
zweitens	ADV	zweitens-a
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
tatsächlich	ADJD.Pos	tatsächlich-j
vorkommendes	ADJA.Pos.Nom.Sg.Neut	vorkommend-j
Wort	N.Reg.Nom.Sg.Neut	Wort-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
drittens	ADV	drittens-a
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
Spaß	N.Reg.Acc.Sg.Masc	Spaß-n
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
auszusprechen	VINF.Full.zu	aussprechen-v
(	SYM.Paren.Left	(-x
<g/>
oder	CONJ.Coord	oder-c
zu	ADV	zu-a
singen	VINF.Full	singen-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Wort	N.Reg.Nom.Sg.Neut	Wort-n
Freie	N.Reg.Nom.Sg.Masc	Freie-n
in	APPR	in-i
Freie	N.Reg.Acc.Sg.Fem	Freie-n
Software	N.Reg.Nom.Sg.Fem	Software-n
bezieht	VFIN.Full.3.Sg.Pres.Ind	beziehen-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auf	APPR	auf-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
den	ART.Def.Acc.Sg.Masc	die-x
Preis	N.Reg.Acc.Sg.Masc	Preis-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
Preis	N.Reg.Acc.Sg.Masc	Preis-n
dafür	PROADV.Dem	dafür-x
bezahlen	VINF.Full	bezahlen-v
(	SYM.Paren.Left	(-x
<g/>
oder	CONJ.Coord	oder-c
auch	ADV	auch-a
nicht	PART.Neg	nicht-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
GNU-Software	N.Reg.Acc.Pl.Masc	GNU-Software-n
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
So	ADV	so-a
oder	CONJ.Coord	oder-c
so	ADV	so-a
<g/>
,	SYM.Pun.Comma	,-x
sobald	CONJ.SubFin	sobald-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
die	ART.Def.Acc.Sg.Fem	die-x
Software	N.Reg.Acc.Sg.Fem	Software-n
besitzt	VFIN.Full.3.Sg.Pres.Ind	besitzen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
vier	CARD	vier-m
konkrete	ADJA.Pos.Acc.Pl.Fem	konkret-j
Freiheiten	N.Reg.Acc.Pl.Fem	Freiheit-n
zur	APPRART.Dat.Sg.Fem	zu-i
Nutzung	N.Reg.Dat.Sg.Fem	Nutzung-n
gewährt	VPP.Full.Psp	gewähren|währen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
auszuführen	VINF.Full.zu	ausführen-v
wie	CONJ.Comp	wie-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
möchte	VFIN.Mod.3.Sg.Past.Subj	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
zu	PART.Zu	zu-x
vervielfältigen	VINF.Full	vervielfältigen-v
und	CONJ.Coord	und-c
an	APPR	an-i
Freunde	N.Reg.Acc.Pl.Masc	Freund-n
und	CONJ.Coord	und-c
Kollegen	N.Reg.Acc.Pl.Masc	Kollege-n
weiter	ADV	weiter-a
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
nach	APPR	nach-i
eigenen	ADJA.Pos.Dat.Pl.Masc	eigen-j
Wünschen	N.Reg.Dat.Pl.Masc	Wunsch-n
zu	PART.Zu	zu-x
ändern	VINF.Full	ändern-v
<g/>
,	SYM.Pun.Comma	,-x
durch	APPR	durch-i
uneingeschränkten	ADJA.Pos.Acc.Sg.Masc	uneingeschränkt-j
Zugang	N.Reg.Acc.Sg.Masc	Zugang-n
zum	APPRART.Dat.Sg.Masc	zu-i
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
verbesserte	ADJA.Pos.Acc.Sg.Fem	verbessert-j
Version	N.Reg.Acc.Sg.Fem	Version-n
zu	PART.Zu	zu-x
verbreiten	VINF.Full	verbreiten-v
und	CONJ.Coord	und-c
damit	PROADV.Dem	damit-x
beim	APPRART.Dat.Sg.Masc	bei-i
Aufbau	N.Reg.Dat.Sg.Masc	Aufbau-n
der	ART.Def.Gen.Sg.Fem	die-x
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
(	SYM.Paren.Left	(-x
<g/>
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
GNU-Software	N.Reg.Acc.Pl.Neut	GNU-Software-n
weiterverbreitet	VFIN.Full.3.Sg.Pres.Ind	weiterverbreiten-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Entgelt	N.Reg.Acc.Sg.Neut	Entgelt-n
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
physischen	ADJA.Pos.Acc.Sg.Masc	physisch-j
Akt	N.Reg.Acc.Sg.Masc	Akt-n
der	ART.Def.Gen.Sg.Fem	die-x
Weitergabe	N.Reg.Gen.Sg.Fem	Weitergabe-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Kopie	N.Reg.Gen.Sg.Fem	Kopie-n
berechnen	VFIN.Full.3.Pl.Pres.Ind	berechnen-v
oder	CONJ.Coord	oder-c
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
verschenken	VFIN.Full.3.Pl.Pres.Ind	verschenken-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
zur	APPRART.Dat.Sg.Fem	zu-i
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
als	APPR	als-i
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
bezeichnet	VPP.Full.Psp	bezeichnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
entstand	VFIN.Full.3.Sg.Past.Ind	entstehen-v
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1983	CARD	[number]-m
als	APPR	als-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
zusammenarbeitenden	ADJA.Pos.Acc.Sg.Masc	zusammenarbeitend-j
Geist	N.Reg.Acc.Sg.Masc	Geist-n
zurückzubringen	VINF.Full.zu	zurückbringen-v
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
in	APPR	in-i
früheren	ADJA.Comp.Dat.Pl.Masc	früh-j
Tagen	N.Reg.Dat.Pl.Masc	Tag-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Rechnerwelt	N.Reg.Dat.Sg.Fem	Rechnerwelt-n
vorherrschte	VFIN.Full.3.Sg.Past.Ind	vorherrschen-v
-	SYM.Pun.Hyph	--x
um	CONJ.SubInf	um-c
von	APPR	von-i
Eigentümern	N.Reg.Dat.Pl.Masc	Eigentümer-n
proprietärer	ADJA.Pos.Gen.Pl.Fem	proprietär-j
Software	N.Reg.Gen.Pl.Fem	Software-n
auferlegte	ADJA.Pos.Acc.Pl.Neut	auferlegt-j
Hindernisse	N.Reg.Acc.Pl.Neut	Hindernis-n
zu	PART.Zu	zu-x
beseitigen	VINF.Full	beseitigen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Zusammenarbeit	N.Reg.Acc.Sg.Fem	Zusammenarbeit-n
verhinderten	VFIN.Full.3.Pl.Past.Ind	verhindern-v
und	CONJ.Coord	und-c
dadurch	PROADV.Dem	dadurch-x
die	ART.Def.Acc.Sg.Fem	die-x
Zusammenarbeit	N.Reg.Acc.Sg.Fem	Zusammenarbeit-n
wieder	ADV	wieder-a
möglich	ADJD.Pos	möglich-j
werden	VINF.Aux	werden-v
zu	PART.Zu	zu-x
lassen	VINF.Full	lassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1971	CARD	[number]-m
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Nom.Sg.Masc	Stallman-n
seine	PRO.Poss.Attr.Acc.Sg.Fem	seine-p
Karriere	N.Reg.Acc.Sg.Fem	Karriere-n
am	APPRART.Dat.Sg.Neut	an-i
Massachusetts	N.Name.*.*.Neut	Massachusetts-n
Institute	N.Name.*.*.*	Institut-n
of	N.Name.*.*.*	of-n
Technology	N.Name.*.*.*	Technology-n
(	SYM.Paren.Left	(-x
<g/>
MIT	N.Name.Nom.Sg.Neut	MIT-n
<g/>
)	SYM.Paren.Right	)-x
begann	VFIN.Full.3.Sg.Past.Ind	beginnen-v
<g/>
,	SYM.Pun.Comma	,-x
arbeitete	VFIN.Full.3.Sg.Past.Ind	arbeiten-v
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Gruppe	N.Reg.Dat.Sg.Fem	Gruppe-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
ausschließlich	ADV	ausschließlich-a
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
nutzte	VFIN.Full.3.Sg.Past.Ind	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Selbst	ADV	selbst-a
Rechnerfirmen	N.Reg.Nom.Pl.Fem	Rechnerfirma-n
verbreiteten	VFIN.Full.3.Pl.Past.Ind	verbreiten-v
oft	ADV	oft-a
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
konnten	VFIN.Mod.3.Pl.Past.Ind	können-v
jederzeit	ADV	jederzeit-a
miteinander	ADV	miteinander-a
zusammenarbeiten	VINF.Full	zusammenarbeiten-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
taten	VFIN.Full.3.Pl.Past.Ind	tun-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
häufig	ADJD.Pos	häufig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bis	APPR	bis-i
zu	APPR	zu-i
den	ART.Def.Dat.Pl.Masc	die-x
1980ern	N.Reg.Dat.Pl.Masc	1980ern-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
fast	ADV	fast-a
die	ART.Def.Nom.Sg.Fem	die-x
gesamte	ADJA.Pos.Nom.Sg.Fem	gesamt-j
Software	N.Reg.Nom.Sg.Fem	Software-n
proprietär	ADJD.Pos	proprietär-j
<g/>
,	SYM.Pun.Comma	,-x
d.	PRO.Dem.Subst.Nom.Sg.Neut	d.-p
h.	VFIN.Full.3.Sg.Pres.Ind	h.-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
Eigentümer	N.Reg.Acc.Pl.Masc	Eigentümer-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Zusammenarbeit	N.Reg.Acc.Sg.Fem	Zusammenarbeit-n
von	APPR	von-i
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
verbieten	VINF.Full	verbieten-v
und	CONJ.Coord	und-c
verhindern	VINF.Full	verhindern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
notwendig	ADJD.Pos	notwendig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Jeder	PRO.Indef.Attr.Nom.Sg.Masc	jede-p
Rechnernutzer	N.Reg.Nom.Sg.Masc	Rechnernutzer-n
braucht	VFIN.Full.3.Sg.Pres.Ind	brauchen-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
<g/>
;	SYM.Pun.Sent	;-x
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
dann	ADV	dann-a
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
Rechner	N.Reg.Nom.Pl.Masc	Rechner-n
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
einmal	ADV	einmal-a
ohne	APPR	ohne-i
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Software	N.Reg.Acc.Sg.Fem	Software-n
gestartet	VPP.Full.Psp	starten-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Also	ADV	also-a
musste	VFIN.Mod.3.Sg.Past.Ind	müssen-v
der	ART.Def.Nom.Sg.Masc	die-x
erste	PRO.Indef.Subst.Nom.Sg.Masc	erste-p
auf	APPR	auf-i
der	ART.Def.Dat.Sg.Fem	die-x
Freie-Software-Agenda	N.Name.Dat.Sg.Fem	Freie-Software-Agenda-n
stehende	ADJA.Pos.Nom.Sg.Masc	stehend-j
Punkt	N.Reg.Nom.Sg.Masc	Punkt-n
offensichtlich	ADJD.Pos	offensichtlich-j
der	PRO.Dem.Subst.Nom.Sg.Masc	die-p
eines	ART.Indef.Gen.Sg.Neut	eine-x
freien	ADJA.Pos.Gen.Sg.Neut	frei-j
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
beschlossen	VPP.Full.Psp	beschließen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
kompatibel	ADJD.Pos	kompatibel-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
das	ART.Def.Nom.Sg.Neut	die-x
Gesamtkonzept	N.Reg.Nom.Sg.Neut	Gesamtkonzept-n
bereits	ADV	bereits-a
bewährt	ADJD.Pos	bewährt-j
und	CONJ.Coord	und-c
portierbar	ADJD.Pos	portierbar-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
und	CONJ.Coord	und-c
weil	CONJ.SubFin	weil-c
Kompatibilität	N.Reg.Nom.Sg.Fem	Kompatibilität-n
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
für	APPR	für-i
Unix-Benutzer	N.Reg.Acc.Pl.Masc	Unix-Benutzer-n
leichter	ADJD.Comp	leicht-j
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
<g/>
,	SYM.Pun.Comma	,-x
von	APPR	von-i
Unix	N.Reg.Dat.Sg.Masc	Unix-n
auf	APPR	auf-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
umzusteigen	VINF.Full.zu	umsteigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
unixoides	ADJA.Pos.Nom.Sg.Neut	unixoid-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
Compiler	N.Reg.Acc.Pl.Masc	Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
Editoren	N.Reg.Acc.Pl.Masc	Editor-n
<g/>
,	SYM.Pun.Comma	,-x
Textverarbeitungen	N.Reg.Acc.Pl.Fem	Textverarbeitung-n
<g/>
,	SYM.Pun.Comma	,-x
E-Mail-Software	N.Reg.Acc.Pl.Masc	E-Mail-Software-n
<g/>
,	SYM.Pun.Comma	,-x
grafische	ADJA.Pos.Acc.Pl.Fem	grafisch-j
Oberflächen	N.Reg.Acc.Pl.Fem	Oberfläche-n
<g/>
,	SYM.Pun.Comma	,-x
Bibliotheken	N.Reg.Acc.Pl.Fem	Bibliothek-n
<g/>
,	SYM.Pun.Comma	,-x
Spiele	N.Reg.Acc.Pl.Neut	Spiel-n
und	CONJ.Coord	und-c
vieles	PRO.Indef.Subst.Nom.Pl.Neut	viele-p
andere	PRO.Indef.Subst.Nom.Sg.Neut	andere-p
mehr	ADV	mehr-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Folglich	ADV	folglich-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Schreiben	N.Reg.Nom.Sg.Neut	Schreiben-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
ganzen	ADJA.Pos.Gen.Sg.Neut	ganz-j
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
sehr	ADV	sehr-a
große	ADJA.Pos.Acc.Sg.Fem	groß-j
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
begannen	VFIN.Full.1.Pl.Past.Ind	beginnen-v
im	APPRART.Dat.Sg.Masc	in-i
Januar	N.Reg.Dat.Sg.Masc	Januar-n
1984.	CARD	[number]-m
Im	APPRART.Dat.Sg.Masc	in-i
Oktober	N.Reg.Dat.Sg.Masc	Oktober-n
1985	CARD	[number]-m
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Nom.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
(	SYM.Paren.Left	(-x
<g/>
FSF	N.Name.Nom.Sg.*	FSF-n
<g/>
)	SYM.Paren.Right	)-x
gegründet	VPP.Full.Psp	gründen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
anfangs	ADV	anfangs-a
Gelder	N.Reg.Acc.Pl.Neut	Geld-n
zur	APPRART.Dat.Sg.Fem	zu-i
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
zu	PART.Zu	zu-x
beschaffen	VINF.Full	beschaffen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bis	APPR	bis-i
1990	CARD	[number]-m
hatten	VFIN.Aux.1.Pl.Past.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
entweder	ADV	entweder-a
die	ART.Def.Acc.Pl.Fem	die-x
wichtigsten	ADJA.Sup.Acc.Pl.Fem	wichtig-j
Komponenten	N.Reg.Acc.Pl.Fem	Komponente-n
gefunden	VPP.Full.Psp	finden-v
oder	CONJ.Coord	oder-c
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Ausnahme	N.Reg.Dat.Sg.Fem	Ausnahme-n
-	SYM.Pun.Hyph	--x
dem	ART.Def.Dat.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
von	APPR	von-i
Linus	N.Name.Dat.Sg.Fem	Linus-n
Torvalds	N.Name.Dat.Sg.*	Torvalds-n
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1991	CARD	[number]-m
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Nom.Sg.Masc	eine-x
unixoider	ADJA.Pos.Nom.Sg.Masc	unixoid-j
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
1992	CARD	[number]-m
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Kombination	N.Reg.Nom.Sg.Fem	Kombination-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
beinahe	ADV	beinahe-a
kompletten	ADJA.Pos.Dat.Sg.Neut	komplett-j
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
führte	VFIN.Full.3.Sg.Past.Ind	führen-v
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
vollständigen	ADJA.Pos.Dat.Sg.Neut	vollständig-j
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
<g/>
:	SYM.Pun.Colon	:-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Schätzungen	N.Reg.Dat.Pl.Fem	Schätzung-n
zufolge	APPO.Dat	zufolge-x
nutzen	VFIN.Full.3.Pl.Pres.Ind	nutzen-v
heute	ADV	heute-a
zig	ADJA.Pos.*.*.*	zig-j
Millionen	N.Reg.Nom.Pl.Fem	Million-n
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systeme	N.Reg.Nom.Pl.Neut	Linux-System-n
<g/>
,	SYM.Pun.Comma	,-x
typischerweise	ADV	typischerweise-a
über	APPR	über-i
GNU	N.Reg.Acc.Pl.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Reg.Nom.Pl.Fem	Linux-Distribution-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heute	ADV	heute-a
umfasst	VFIN.Full.3.Sg.Pres.Ind	umfassen-v
die	ART.Def.Nom.Sg.Fem	die-x
Hauptversion	N.Reg.Nom.Sg.Fem	Hauptversion-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
unfreie	ADJA.Pos.Acc.Pl.Neut	unfrei-j
Firmware-BLOBs	N.Reg.Acc.Pl.Neut	Firmware-BLOBs-n
<g/>
;	SYM.Pun.Sent	;-x
Freie-Software-Aktivisten	N.Reg.Nom.Pl.Masc	Freie-Software-Aktivist-n
pflegen	VFIN.Full.3.Pl.Pres.Ind	pflegen-v
inzwischen	ADV	inzwischen-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
modifizierte	ADJA.Pos.Acc.Sg.Fem	modifiziert-j
Variante	N.Reg.Acc.Sg.Fem	Variante-n
namens	APPR	namens-i
GNU	N.Name.Nom.Sg.Fem	GNU-n
Linux-libre	N.Name.Dat.Sg.Fem	Linux-libre-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Allerdings	ADV	allerdings-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
Kern-Betriebssystem	N.Reg.Acc.Sg.Neut	Kern-Betriebssystem-n
beschränkt	VPP.Full.Psp	beschränken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
breite	ADJA.Pos.Nom.Sg.Fem	breit-j
Softwareauswahl	N.Reg.Nom.Sg.Fem	Softwareauswahl-n
-	SYM.Pun.Hyph	--x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
auch	ADV	auch-a
immer	ADV	immer-a
von	APPR	von-i
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
gewünscht	VPP.Full.Psp	wünschen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
-	SYM.Pun.Hyph	--x
bereitzustellen	VINF.Full.zu	bereitstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
das	ART.Def.Nom.Sg.Neut	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Nom.Sg.Fem	Software-n
Directory	N.Name.*.*.*	Directory-n
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Verzeichnis	N.Reg.Acc.Sg.Neut	Verzeichnis-n
von	APPR	von-i
freien	ADJA.Pos.Dat.Pl.Fem	frei-j
Softwareanwendungsprogrammen	N.Reg.Dat.Pl.Fem	Softwareanwendungsprogramme-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
möchten	VFIN.Mod.1.Pl.Past.Subj	mögen-v
auch	ADV	auch-a
Software	N.Reg.Acc.Sg.Fem	Software-n
für	APPR	für-i
Nutzer	N.Reg.Acc.Pl.Masc	Nutzer-n
bereitstellen	VINF.Full	bereitstellen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
Rechnerexperten	N.Reg.Acc.Pl.Fem	Rechnerexperten-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Deshalb	PROADV.Dem	deshalb-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
grafische	ADJA.Pos.Nom.Sg.Fem	grafisch-j
Arbeitsumgebung	N.Reg.Nom.Sg.Fem	Arbeitsumgebung-n
entwickelt	VPP.Full.Psp	entwickeln-v
(	SYM.Paren.Left	(-x
<g/>
namens	APPR	namens-i
GNOME	N.Reg.Acc.Pl.Masc	Gnom-n
<g/>
[	SYM.Paren.Left	[-x
<g/>
1	CARD	1-m
<g/>
]	SYM.Paren.Right	]-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Einsteigern	N.Reg.Dat.Pl.Masc	Einsteiger-n
die	ART.Def.Acc.Sg.Fem	die-x
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
zu	PART.Zu	zu-x
erleichtern	VINF.Full	erleichtern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ebenso	ADV	ebenso-a
möchten	VFIN.Mod.1.Pl.Past.Subj	mögen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Spiele	N.Reg.Acc.Pl.Neut	Spiel-n
und	CONJ.Coord	und-c
anderes	ADJA.Pos.Acc.Sg.Neut	ander-j
Vergnügliches	N.Reg.Acc.Sg.Neut	Vergnügliche-n
anbieten	VINF.Full	anbieten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
Menge	N.Reg.Nom.Sg.Fem	Menge-n
freie	ADJA.Pos.Nom.Pl.Neut	frei-j
Spiele	N.Reg.Nom.Pl.Neut	Spiel-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
bereits	ADV	bereits-a
verfügbar	ADJD.Pos	verfügbar-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
weit	ADJD.Pos	weit-j
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
gehen	VINF.Full	gehen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
Grenzen	N.Reg.Acc.Pl.Fem	Grenze-n
-	SYM.Pun.Hyph	--x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
denn	ADV	denn-a
Gesetze	N.Reg.Nom.Pl.Neut	Gesetz-n
wie	CONJ.Comp	wie-c
das	ART.Def.Acc.Sg.Neut	die-x
Patentsystem	N.Reg.Acc.Sg.Neut	Patentsystem-n
verbieten	VFIN.Full.3.Pl.Pres.Ind	verbieten-v
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
ultimative	ADJA.Pos.Nom.Sg.Neut	ultimativ-j
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
für	APPR	für-i
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
bereitzustellen	VINF.Full.zu	bereitstellen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Masc	die-x
Rechnernutzer	N.Reg.Acc.Pl.Masc	Rechnernutzer-n
erledigen	VINF.Full	erledigen-v
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
damit	PROADV.Dem	damit-x
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Software	N.Reg.Acc.Sg.Fem	Software-n
überflüssig	ADJD.Pos	überflüssig-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/thegnuproject.html	N.Name	[url]-n
Über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
Projekt	N.Reg.Acc.Sg.Neut	Projekt-n
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
'	SYM.Quot.Right	'-x
</s>
</align>
<align>
<s>
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
englische	ADJA.Pos.Nom.Sg.Fem	englisch-j
Originalausgabe	N.Reg.Nom.Sg.Fem	Originalausgabe-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
in	APPR	in-i
dem	ART.Def.Dat.Sg.Neut	die-x
Buch	N.Reg.Dat.Sg.Neut	Buch-n
Open	FM	Open-x
Sources	FM	Sources-x
veröffentlicht	VPP.Full.Psp	veröffentlichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Nom.Sg.Masc	Stallman-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
nie	ADV	nie-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Anhänger	N.Reg.Nom.Sg.Masc	Anhänger-n
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Open	FM	Open-x
Source	FM	Source-x
<g/>
"	SYM.Quot.Left	"-x
<g/>
;	SYM.Pun.Sent	;-x
<g/>
,	SYM.Pun.Comma	,-x
trug	VFIN.Full.3.Sg.Past.Ind	tragen-v
aber	ADV	aber-a
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Artikel	N.Reg.Acc.Sg.Masc	Artikel-n
bei	PART.Verb	bei-x
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
die	ART.Def.Nom.Pl.Fem	die-x
Anschauungen	N.Reg.Nom.Pl.Fem	Anschauung-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Gen.Sg.Fem	Freie-Software-Bewegung-n
nicht	PART.Neg	nicht-x
völlig	ADJD.Pos	völlig-j
fehlen	VINF.Full	fehlen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bitte	ADV	bitte-a
beachten	VFIN.Full.3.Pl.Pres.Ind	beachten-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
auch	ADV	auch-a
den	ART.Def.Acc.Sg.Masc	die-x
Aufsatz	N.Reg.Acc.Sg.Masc	Aufsatz-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
jetzt	ADV	jetzt-a
sogar	ADV	sogar-a
noch	ADV	noch-a
wichtiger	ADJD.Comp	wichtig-j
denn	CONJ.Comp	denn-c
je	ADV	je-a
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
auf	APPR	auf-i
Software	N.Reg.Acc.Sg.Fem	Software-n
-	SYM.Pun.Hyph	--x
Software	N.Reg.Nom.Sg.Fem	Software-n
die	PRO.Dem.Subst.Nom.Pl.*	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nutzen	VINF.Full	nutzen-v
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
-	SYM.Pun.Hyph	--x
bestehen	VINF.Full	bestehen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
frei	ADJD.Pos	frei-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
erste	ADJA.Pos.Nom.Sg.Fem	erst-j
Software-teilende	ADJA.Pos.Nom.Sg.Fem	Software-teilend-j
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
</s>
</align>
<align>
<s>
Als	CONJ.SubFin	als-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
1971	CARD	[number]-m
am	APPRART.Dat.Sg.Masc	an-i
Artificial	N.Name.*.*.*	Artificial-n
Intelligence	N.Name.*.*.*	Intelligence-n
Laboratory	N.Name.Dat.Sg.*	Laboratory-n
(	SYM.Paren.Left	(-x
<g/>
AI	N.Reg.Nom.Sg.Neut	Ai-n
Lab	VIMP.Full.2.Sg	laben-v
<g/>
)	SYM.Paren.Right	)-x
des	ART.Def.Gen.Sg.Neut	die-x
Massachusetts	N.Name.*.*.Neut	Massachusetts-n
Institute	N.Name.*.*.*	Institut-n
of	N.Name.*.*.*	of-n
Technology	N.Name.*.*.*	Technology-n
anfing	VFIN.Full.3.Sg.Past.Ind	anfangen-v
zu	PART.Zu	zu-x
arbeiten	VINF.Full	arbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
Teil	N.Reg.Nom.Sg.Masc	Teil-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Software-teilenden	ADJA.Pos.Gen.Sg.Fem	Software-teilend-j
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
schon	ADV	schon-a
seit	APPR	seit-i
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
existierte	VFIN.Full.3.Sg.Past.Ind	existieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
gemeinsame	ADJA.Pos.Nom.Sg.Fem	gemeinsam-j
Nutzung	N.Reg.Nom.Sg.Fem	Nutzung-n
von	APPR	von-i
Software	N.Reg.Dat.Sg.Fem	Software-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
auf	APPR	auf-i
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
besondere	ADJA.Pos.Acc.Sg.Fem	besonder-j
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
beschränkt	VPP.Full.Psp	beschränken-v
<g/>
;	SYM.Pun.Sent	;-x
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
so	ADV	so-a
alt	ADJD.Pos	alt-j
wie	CONJ.Comp	wie-c
Rechner	N.Reg.Nom.Pl.Masc	Rechner-n
selbst	ADV	selbst-a
<g/>
,	SYM.Pun.Comma	,-x
genauso	ADV	genauso-a
wie	CONJ.Comp	wie-c
der	ART.Def.Nom.Sg.Masc	die-x
Austausch	N.Reg.Nom.Sg.Masc	Austausch-n
von	APPR	von-i
Kochrezepten	N.Reg.Dat.Pl.Neut	Kochrezept-n
so	ADV	so-a
alt	ADJD.Pos	alt-j
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
Kochen	N.Reg.Nom.Sg.Neut	Kochen-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
praktizierten	VFIN.Full.1.Pl.Past.Ind	praktizieren-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mehr	PRO.Indef.Subst.*.*.*	mehr-p
als	CONJ.Comp	als-c
die	ART.Def.Nom.Pl.*	die-x
meisten	PRO.Indef.Subst.Nom.Pl.*	meiste-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
AI	N.Reg.Nom.Sg.Neut	Ai-n
Lab	VIMP.Full.2.Sg	laben-v
verwendete	VFIN.Full.3.Sg.Past.Ind	verwenden-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
Mehrbenutzer-Betriebssystem	N.Reg.Acc.Sg.Neut	Mehrbenutzer-Betriebssystem-n
namens	APPR	namens-i
Incompatible	FM	Incompatible-x
Timesharing	FM	Timesharing-x
System	FM	System-x
(	SYM.Paren.Left	(-x
<g/>
ITS	N.Name.Nom.Sg.Fem	ITS-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
welches	PRO.Rel.Subst.Nom.Sg.Neut	welche-p
die	ART.Def.Acc.Pl.Masc	die-x
Hacker	N.Reg.Acc.Pl.Masc	Hacker-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
1	CARD	1-m
<g/>
)	SYM.Paren.Right	)-x
des	ART.Def.Gen.Sg.Neut	die-x
Laborpersonals	N.Reg.Gen.Sg.Neut	Laborpersonal-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Programmiersprache	N.Reg.Dat.Sg.Fem	Programmiersprache-n
Assembler	N.Reg.Nom.Sg.Masc	Assembler-n
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
Digital	N.Name.*.*.*	Digital-n
PDP-10	N.Name.Gen.Sg.Masc	PDP-10-n
<g/>
,	SYM.Pun.Comma	,-x
einen	PRO.Indef.Subst.Acc.Sg.Masc	eine-p
der	ART.Def.Gen.Pl.Masc	die-x
großen	ADJA.Pos.Gen.Pl.Masc	groß-j
Rechner	N.Reg.Gen.Pl.Masc	Rechner-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Ära	N.Reg.Gen.Sg.Fem	Ära-n
<g/>
,	SYM.Pun.Comma	,-x
entworfen	VPP.Full.Psp	entwerfen-v
und	CONJ.Coord	und-c
geschrieben	VPP.Full.Psp	schreiben-v
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	APPR	als-i
Mitglied	N.Reg.Nom.Sg.Neut	Mitglied-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Nom.Sg.Masc	eine-x
angestellter	ADJA.Pos.Nom.Sg.Masc	angestellt-j
Systemhacker	N.Reg.Nom.Sg.Masc	Systemhacker-n
des	ART.Def.Gen.Sg.Neut	die-x
AI	N.Reg.Nom.Sg.Neut	Ai-n
Labs	N.Reg.Gen.Sg.Masc	Labs-n
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
meine	PRO.Poss.Attr.Nom.Sg.Fem	meine-p
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
System	N.Reg.Acc.Sg.Neut	System-n
zu	PART.Zu	zu-x
verbessern	VINF.Full	verbessern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nannten	VFIN.Full.1.Pl.Past.Ind	nennen-v
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Software	N.Reg.Acc.Sg.Fem	Software-n
nicht	PART.Neg	nicht-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Ausdruck	N.Reg.Nom.Sg.Masc	Ausdruck-n
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
geprägt	VPP.Full.Psp	prägen-v
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wann	PROADV.Inter	wann-x
immer	ADV	immer-a
jemand	PRO.Indef.Subst.Nom.Sg.Masc	jemand-p
von	APPR	von-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
anderen	ADJA.Pos.Dat.Sg.Fem	ander-j
Universität	N.Reg.Dat.Sg.Fem	Universität-n
oder	CONJ.Coord	oder-c
einer	ART.Indef.Dat.Sg.Fem	eine-x
Firma	N.Reg.Dat.Sg.Fem	Firma-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
portieren	VINF.Full	portieren-v
und	CONJ.Coord	und-c
benutzen	VINF.Full	benutzen-v
wollte	VFIN.Mod.3.Sg.Past.Ind	wollen-v
<g/>
,	SYM.Pun.Comma	,-x
freute	VFIN.Full.3.Sg.Past.Ind	freuen-v
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ließen	VFIN.Full.3.Pl.Past.Ind	lassen-v
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
gewähren	VINF.Full	gewähren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
jemanden	PRO.Indef.Subst.Acc.Sg.Masc	jemand-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
unbekanntes	ADJA.Pos.Acc.Sg.Neut	unbekannt-j
interessantes	ADJA.Pos.Acc.Sg.Neut	interessant-j
Programm	N.Reg.Acc.Sg.Neut	Programm-n
benutzen	VINF.Full	benutzen-v
sah	VFIN.Full.3.Sg.Past.Ind	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
immer	ADV	immer-a
den	ART.Def.Acc.Sg.Masc	die-x
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
bekommen	VINF.Full	bekommen-v
<g/>
,	SYM.Pun.Comma	,-x
sodass	CONJ.SubFin	sodass-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
diesen	PRO.Dem.Subst.Acc.Sg.Masc	diese-p
lesen	VFIN.Full.3.Pl.Pres.Ind	lesen-v
<g/>
,	SYM.Pun.Comma	,-x
verändern	VFIN.Full.3.Pl.Pres.Ind	verändern-v
oder	CONJ.Coord	oder-c
sogar	ADV	sogar-a
Teile	N.Reg.Nom.Pl.Masc	Teil-n
davon	PROADV.Dem	davon-x
für	APPR	für-i
neue	ADJA.Pos.Acc.Pl.Neut	neu-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
ausschlachten	VINF.Full	ausschlachten-v
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Zusammenbruch	N.Reg.Nom.Sg.Masc	Zusammenbruch-n
der	ART.Def.Gen.Sg.Fem	die-x
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Situation	N.Reg.Nom.Sg.Fem	Situation-n
änderte	VFIN.Full.3.Sg.Past.Ind	ändern-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
Anfang	N.Reg.*.Sg.Masc	Anfang-n
der	ART.Def.Gen.Pl.Neut	die-x
80er	ADJA.Pos.*.*.*	80er-j
Jahre	N.Reg.Gen.Pl.Neut	Jahr-n
drastisch	ADJD.Pos	drastisch-j
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
Digital	N.Name.*.*.*	Digital-n
die	ART.Def.Nom.Sg.Fem	die-x
PDP-10-Serie	N.Reg.Nom.Sg.Fem	PDP-10-Serie-n
einstellte	VFIN.Full.3.Sg.Past.Ind	einstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ihre	PRO.Poss.Attr.Nom.Sg.Fem	ihre-p
Architektur	N.Reg.Nom.Sg.Fem	Architektur-n
<g/>
,	SYM.Pun.Comma	,-x
elegant	ADJD.Pos	elegant-j
und	CONJ.Coord	und-c
leistungsfähig	ADJD.Pos	leistungsfähig-j
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
60ern	N.Reg.Dat.Pl.Masc	60ern-n
<g/>
,	SYM.Pun.Comma	,-x
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
natürlich	ADV	natürlich-a
nicht	PART.Neg	nicht-x
auf	APPR	auf-i
größere	ADJA.Comp.Acc.Pl.Masc	groß-j
Adressräume	N.Reg.Acc.Pl.Masc	Adressraum-n
erweitert	VPP.Full.Psp	erweitern-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Rel.Subst.Nom.Pl.Masc	welche-p
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
80ern	N.Reg.Dat.Pl.Masc	80ern-n
möglich	ADJD.Pos	möglich-j
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bedeutete	VFIN.Full.3.Sg.Past.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
nahezu	ADV	nahezu-a
alle	PRO.Indef.Subst.Nom.Pl.*	alle-p
im	APPRART.Dat.Sg.Neut	in-i
ITS	N.Name.Nom.Sg.Fem	ITS-n
zusammengesetzten	ADJA.Pos.Acc.Pl.Neut	zusammengesetzt-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
veraltet	VPP.Full.Psp	veralten-v
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Hacker-Gemeinschaft	N.Reg.Nom.Sg.Fem	Hacker-Gemeinschaft-n
des	ART.Def.Gen.Sg.Neut	die-x
AI	N.Reg.Dat.Sg.Neut	Ai-n
Labs	N.Reg.Gen.Sg.Masc	Labs-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
bereits	ADV	bereits-a
kurz	ADJD.Pos	kurz-j
vorher	ADV	vorher-a
zusammengebrochen	VPP.Full.Psp	zusammenbrechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1981	CARD	[number]-m
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
das	ART.Def.Nom.Sg.Neut	die-x
ausgegliederte	ADJA.Pos.Nom.Sg.Neut	ausgegliedert-j
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
Symbolics	N.Name.Gen.Sg.*	Symbolics-n
fast	ADV	fast-a
alle	PRO.Indef.Attr.Acc.Pl.Masc	alle-p
Hacker	N.Reg.Acc.Pl.Masc	Hacker-n
aus	APPR	aus-i
dem	ART.Def.Dat.Sg.Neut	die-x
AI	N.Reg.Dat.Sg.Neut	Ai-n
Lab	VIMP.Full.2.Sg	laben-v
abgeworben	VPP.Full.Psp	abwerben-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
die	ART.Def.Nom.Sg.Fem	die-x
entvölkerte	ADJA.Pos.Nom.Sg.Fem	entvölkert-j
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
außerstande	ADJD.Pos	außerstande-j
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
zu	PART.Zu	zu-x
behaupten	VINF.Full	behaupten-v
(	SYM.Paren.Left	(-x
<g/>
das	ART.Def.Acc.Sg.Neut	die-x
Buch	N.Reg.Acc.Sg.Neut	Buch-n
Hackers	N.Reg.Gen.Sg.Masc	Hacker-n
von	APPR	von-i
Steve	N.Name.Nom.Sg.Masc	Steve-n
Levy	N.Name.Dat.Sg.Masc	Levy-n
beschreibt	VFIN.Full.3.Sg.Pres.Ind	beschreiben-v
diese	PRO.Dem.Attr.Acc.Pl.Neut	diese-p
Ereignisse	N.Reg.Acc.Pl.Neut	Ereignis-n
sowie	CONJ.Coord	sowie-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
klares	ADJA.Pos.Acc.Sg.Neut	klar-j
Bild	N.Reg.Acc.Sg.Neut	Bild-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
in	APPR	in-i
ihrer	PRO.Poss.Attr.Dat.Sg.Fem	ihre-p
Blütezeit	N.Reg.Dat.Sg.Fem	Blütezeit-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	CONJ.SubFin	als-c
das	ART.Def.Nom.Sg.Neut	die-x
AI	N.Reg.Nom.Sg.Neut	Ai-n
Lab	VIMP.Full.2.Sg	laben-v
1982	CARD	[number]-m
einen	ART.Indef.Acc.Sg.Masc	eine-x
neuen	ADJA.Pos.Acc.Sg.Masc	neu-j
PDP-10	N.Reg.Acc.Sg.Masc	PDP-10-n
kaufte	VFIN.Full.3.Sg.Past.Ind	kaufen-v
<g/>
,	SYM.Pun.Comma	,-x
entschieden	VFIN.Full.3.Pl.Past.Ind	entscheiden-v
dessen	PRO.Dem.Subst.Gen.Sg.*	die-p
Administratoren	N.Reg.Nom.Pl.Masc	Administrator-n
<g/>
,	SYM.Pun.Comma	,-x
Digitals	N.Name.Gen.Sg.Neut	Digitals-n
unfreies	ADJA.Pos.Nom.Sg.Neut	unfrei-j
Mehrbenutzer-Betriebssystem	N.Reg.Nom.Sg.Neut	Mehrbenutzer-Betriebssystem-n
anstatt	APPR	anstatt-i
ITS	N.Name.Nom.Sg.Fem	ITS-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
modernen	ADJA.Pos.Nom.Pl.Masc	modern-j
Rechner	N.Reg.Nom.Pl.Masc	Rechner-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Ära	N.Reg.Gen.Sg.Fem	Ära-n
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
der	ART.Def.Gen.Sg.Fem	die-x
VAX	N.Name.Gen.Sg.Fem	VAX-n
oder	CONJ.Coord	oder-c
der	ART.Def.Gen.Pl.Neut	die-x
68020	CARD	[number]-m
<g/>
,	SYM.Pun.Comma	,-x
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
eigene	ADJA.Pos.Nom.Pl.Neut	eigen-j
Betriebssysteme	N.Reg.Nom.Pl.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
keines	PRO.Indef.Subst.Nom.Sg.Neut	keine-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
:	SYM.Pun.Colon	:-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
musste	VFIN.Mod.3.Sg.Past.Ind	müssen-v
sogar	ADV	sogar-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Vertraulichkeitsvereinbarung	N.Reg.Acc.Sg.Fem	Vertraulichkeitsvereinbarung-n
unterzeichnen	VINF.Full	unterzeichnen-v
<g/>
,	SYM.Pun.Comma	,-x
nur	ADV	nur-a
um	CONJ.SubInf	um-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
ausführbare	ADJA.Pos.Acc.Sg.Fem	ausführbar-j
Kopie	N.Reg.Acc.Sg.Fem	Kopie-n
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bedeutete	VFIN.Full.3.Sg.Past.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
der	ART.Def.Nom.Sg.Masc	die-x
erste	ADJA.Pos.Nom.Sg.Masc	erst-j
Schritt	N.Reg.Nom.Sg.Masc	Schritt-n
zur	APPRART.Dat.Sg.Fem	zu-i
Benutzung	N.Reg.Dat.Sg.Fem	Benutzung-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
Rechners	N.Reg.Gen.Sg.Masc	Rechner-n
darin	PROADV.Dem	darin-x
bestand	VFIN.Full.3.Sg.Past.Ind	bestehen-v
zu	PART.Zu	zu-x
versprechen	VINF.Full	versprechen-v
<g/>
,	SYM.Pun.Comma	,-x
seinen	PRO.Poss.Attr.Acc.Sg.Masc	seine-p
Nächsten	N.Reg.Acc.Sg.Masc	Nächste-n
nicht	PART.Neg	nicht-x
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
zusammenarbeitende	ADJA.Pos.Nom.Sg.Fem	zusammenarbeitend-j
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
verboten	VPP.Full.Psp	verbieten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Vorschrift	N.Reg.Nom.Sg.Fem	Vorschrift-n
von	APPR	von-i
Eigentümern	N.Reg.Dat.Pl.Masc	Eigentümer-n
proprietärer	ADJA.Pos.Gen.Pl.Fem	proprietär-j
Software	N.Reg.Gen.Pl.Fem	Software-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
:	SYM.Pun.Colon	:-x
"	SYM.Quot.Left	"-x
<g/>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
mit	APPR	mit-i
ihrem	PRO.Poss.Attr.Dat.Sg.Neut	ihre-p
Nächsten	N.Reg.Dat.Sg.Neut	Nächste-n
teilen	VFIN.Full.3.Pl.Pres.Ind	teilen-v
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
Softwarepirat	N.Reg.Nom.Sg.Masc	Softwarepirat-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
irgendwelche	PRO.Indef.Attr.Acc.Pl.Fem	irgendwelche-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
<g/>
,	SYM.Pun.Comma	,-x
bitten	VFIN.Full.3.Pl.Pres.Ind	bitten-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Subst.Acc.Pl.*	diese-p
vorzunehmen	VINF.Full.zu	vornehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Idee	N.Reg.Nom.Sg.Fem	Idee-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
proprietäre	ADJA.Pos.Nom.Sg.Neut	proprietär-j
Software-Sozialsystem	N.Reg.Nom.Sg.Neut	Software-Sozialsystem-n
-	SYM.Pun.Hyph	--x
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
besagt	VFIN.Full.3.Sg.Pres.Ind	besagen-v
<g/>
,	SYM.Pun.Comma	,-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
nicht	PART.Neg	nicht-x
berechtigt	ADJD.Pos	berechtigt-j
Software	N.Reg.Acc.Sg.Fem	Software-n
zu	PART.Zu	zu-x
teilen	VINF.Full	teilen-v
oder	CONJ.Coord	oder-c
zu	PART.Zu	zu-x
verändern	VINF.Full	verändern-v
-	SYM.Pun.Hyph	--x
unsozial	ADJD.Pos	unsozial-j
<g/>
,	SYM.Pun.Comma	,-x
unethisch	ADJD.Pos	unethisch-j
und	CONJ.Coord	und-c
einfach	ADJD.Pos	einfach-j
falsch	ADJD.Pos	falsch-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
mag	VFIN.Mod.3.Sg.Pres.Ind	mögen-v
einige	PRO.Indef.Subst.Acc.Pl.*	einige-p
überraschen	VINF.Full	überraschen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
könnten	VFIN.Mod.1.Pl.Past.Subj	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sonst	ADV	sonst-a
über	APPR	über-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
System	N.Reg.Acc.Sg.Neut	System-n
sagen	VFIN.Full.1.Pl.Pres.Ind	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
darauf	PROADV.Dem	darauf-x
basiert	ADJD.Pos	basiert-j
die	ART.Def.Acc.Sg.Fem	die-x
Allgemeinheit	N.Reg.Acc.Sg.Fem	Allgemeinheit-n
zu	PART.Zu	zu-x
spalten	VINF.Full	spalten-v
und	CONJ.Coord	und-c
Nutzer	N.Reg.Acc.Sg.Masc	Nutzer-n
hilflos	ADJD.Pos	hilflos-j
zu	PART.Zu	zu-x
halten	VINF.Full	halten-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Leserinnen	N.Reg.Nom.Pl.Fem	Leserin-n
und	CONJ.Coord	und-c
Leser	N.Reg.Nom.Pl.Masc	Leser-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Gedanken	N.Reg.Acc.Sg.Masc	Gedanke-n
überraschend	ADJD.Pos	überraschend-j
finden	VFIN.Full.3.Pl.Pres.Ind	finden-v
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
das	ART.Def.Acc.Sg.Neut	die-x
proprietäre	ADJA.Pos.Acc.Sg.Neut	proprietär-j
Software-Sozialsystem	N.Reg.Acc.Sg.Neut	Software-Sozialsystem-n
möglicherweise	ADV	möglicherweise-a
als	CONJ.Comp	als-c
gegeben	VPP.Full.Psp	geben-v
angesehen	VPP.Full.Psp	ansehen-v
oder	CONJ.Coord	oder-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
unter	APPR	unter-i
den	ART.Def.Dat.Pl.Masc	die-x
von	APPR	von-i
den	ART.Def.Dat.Pl.Neut	die-x
proprietären	ADJA.Pos.Dat.Pl.Neut	proprietär-j
Softwareunternehmen	N.Reg.Dat.Pl.Neut	Softwareunternehmen-n
vorgeschlagenen	ADJA.Pos.Dat.Pl.Masc	vorgeschlagen-j
Begriffen	N.Reg.Dat.Pl.Masc	Begriff-n
beurteilt	VPP.Full.Psp	beurteilen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Softwarehersteller	N.Reg.Nom.Pl.Masc	Softwarehersteller-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
lange	ADJD.Pos	lange-j
und	CONJ.Coord	und-c
hart	ADJD.Pos	hart-j
daran	PROADV.Dem	daran-x
gearbeitet	VPP.Full.Psp	arbeiten-v
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
davon	PROADV.Dem	davon-x
zu	PART.Zu	zu-x
überzeugen	VINF.Full	überzeugen-v
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gäbe	VFIN.Full.3.Sg.Past.Subj	geben-v
nur	ADV	nur-a
einen	ART.Indef.Acc.Sg.Masc	eine-x
Blickwinkel	N.Reg.Acc.Sg.Masc	Blickwinkel-n
auf	APPR	auf-i
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Problem	N.Reg.Acc.Sg.Neut	Problem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Softwarehersteller	N.Reg.Nom.Pl.Masc	Softwarehersteller-n
über	APPR	über-i
"	SYM.Quot.Left	"-x
<g/>
Durchsetzung	N.Reg.Acc.Sg.Fem	Durchsetzung-n
<g/>
"	SYM.Quot.Left	"-x
ihrer	PRO.Poss.Attr.Gen.Pl.Neut	ihre-p
"	SYM.Quot.Left	"-x
<g/>
Rechte	N.Reg.Gen.Pl.Neut	Recht-n
<g/>
"	SYM.Quot.Left	"-x
oder	CONJ.Coord	oder-c
Verhinderung	N.Reg.Dat.Sg.Fem	Verhinderung-n
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Softwarepiraterie	N.Reg.Dat.Sg.Fem	Softwarepiraterie-n
<g/>
"	SYM.Quot.Left	"-x
sprechen	VFIN.Full.3.Pl.Pres.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
wirklich	ADJD.Pos	wirklich-j
meinen	VFIN.Full.3.Pl.Pres.Ind	meinen-v
<g/>
,	SYM.Pun.Comma	,-x
zweitrangig	ADJD.Pos	zweitrangig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
eigentliche	ADJA.Pos.Nom.Sg.Fem	eigentlich-j
Botschaft	N.Reg.Nom.Sg.Fem	Botschaft-n
dieser	PRO.Dem.Attr.Gen.Pl.Fem	diese-p
Aussagen	N.Reg.Gen.Pl.Fem	Aussage-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
unausgesprochene	ADJA.Pos.Nom.Sg.Fem	unausgesprochen-j
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
selbstverständlich	ADJD.Pos	selbstverständlich-j
gehaltene	ADJA.Pos.Acc.Sg.Fem	gehalten-j
Annahme	N.Reg.Acc.Sg.Fem	Annahme-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Acc.Sg.Fem	Öffentlichkeit-n
aufzufordern	VINF.Full.zu	auffordern-v
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Subst.Acc.Pl.*	diese-p
ungeprüft	ADJD.Pos	ungeprüft-j
zu	PART.Zu	zu-x
akzeptieren	VINF.Full	akzeptieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Betrachten	VFIN.Full.1.Pl.Pres.Ind	betrachten-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
deshalb	PROADV.Dem	deshalb-x
etwas	ADV	etwas-a
näher	ADJD.Comp	nah-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
Annahme	N.Reg.Nom.Sg.Fem	Annahme-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Softwareunternehmen	N.Reg.Nom.Pl.Neut	Softwareunternehmen-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
unbestreitbares	ADJA.Pos.Acc.Sg.Neut	unbestreitbar-j
natürliches	ADJA.Pos.Acc.Sg.Neut	natürlich-j
Recht	N.Reg.Acc.Sg.Neut	Recht-n
auf	APPR	auf-i
eigene	ADJA.Pos.Acc.Sg.Fem	eigen-j
Software	N.Reg.Acc.Sg.Fem	Software-n
und	CONJ.Coord	und-c
damit	PROADV.Dem	damit-x
Macht	N.Reg.Acc.Sg.Fem	Macht-n
über	APPR	über-i
alle	PRO.Indef.Attr.Acc.Pl.Masc	alle-p
ihre	PRO.Poss.Attr.Acc.Pl.Masc	ihre-p
Benutzer	N.Reg.Acc.Pl.Masc	Benutzer-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
(	SYM.Paren.Left	(-x
<g/>
wenn	CONJ.SubFin	wenn-c
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
natürliches	ADJA.Pos.Nom.Sg.Neut	natürlich-j
Recht	N.Reg.Nom.Sg.Neut	Recht-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ganz	ADV	ganz-a
gleich	ADJD.Pos	gleich-j
wie	CONJ.Comp	wie-c
viel	PRO.Indef.Attr.*.*.*	viel-p
Schaden	N.Reg.Acc.Sg.Masc	Schaden-n
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Acc.Sg.Fem	Öffentlichkeit-n
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
könnten	VFIN.Mod.1.Pl.Past.Subj	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
dagegen	PROADV.Dem	dagegen-x
machen	VINF.Full	machen-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Interessanterweise	N.Reg.Nom.Pl.Masc	Interessanterweis-n
lehnen	VFIN.Full.3.Pl.Pres.Ind	lehnen-v
die	ART.Def.Acc.Sg.Fem	die-x
US-Verfassung	N.Reg.Acc.Sg.Fem	US-Verfassung-n
und	CONJ.Coord	und-c
rechtliche	ADJA.Pos.Acc.Pl.Fem	rechtlich-j
Traditionen	N.Reg.Acc.Pl.Fem	Tradition-n
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Auffassung	N.Reg.Acc.Sg.Fem	Auffassung-n
ab	PART.Verb	ab-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Urheberrecht	ADJD.Pos	urheberrecht-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
natürliches	ADJA.Pos.Nom.Sg.Neut	natürlich-j
Recht	N.Reg.Nom.Sg.Neut	Recht-n
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
vom	APPRART.Dat.Sg.Masc	von-i
Staat	N.Reg.Dat.Sg.Masc	Staat-n
künstlich	ADJD.Pos	künstlich-j
auferlegtes	ADJA.Pos.Nom.Sg.Neut	auferlegt-j
Monopol	N.Reg.Nom.Sg.Neut	Monopol-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
Benutzern	N.Reg.Dat.Pl.Masc	Benutzer-n
das	ART.Def.Acc.Sg.Neut	die-x
natürliche	ADJA.Pos.Acc.Sg.Neut	natürlich-j
Recht	N.Reg.Acc.Sg.Neut	Recht-n
zu	PART.Zu	zu-x
kopieren	VINF.Full	kopieren-v
eingrenzt	VFIN.Full.3.Sg.Pres.Ind	eingrenzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
weitere	ADJA.Comp.Nom.Sg.Fem	weit-j
unausgesprochene	ADJA.Pos.Nom.Sg.Fem	unausgesprochen-j
Annahme	N.Reg.Nom.Sg.Fem	Annahme-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
bei	APPR	bei-i
Software	N.Reg.Dat.Sg.Fem	Software-n
nur	ADV	nur-a
wichtig	ADJD.Pos	wichtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Inter.Attr.Acc.Pl.Fem	welche-p
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
einem	PRO.Indef.Subst.Dat.Sg.Masc	eine-p
erlaubt	ADJD.Pos	erlaubt-j
auszuführen	VINF.Full.zu	ausführen-v
-	SYM.Pun.Hyph	--x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Rechnernutzer	N.Reg.Nom.Pl.Masc	Rechnernutzer-n
uns	PRO.Refl.Subst.1.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
darum	PROADV.Dem	darum-x
kümmern	VINF.Full	kümmern-v
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
für	APPR	für-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gesellschaft	N.Reg.Acc.Sg.Fem	Gesellschaft-n
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VINF.Aux	haben-v
dürfen	VFIN.Mod.1.Pl.Pres.Ind	dürfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
dritte	ADJA.Pos.Nom.Sg.Fem	dritt-j
Annahme	N.Reg.Nom.Sg.Fem	Annahme-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
brauchbare	ADJA.Pos.Acc.Sg.Fem	brauchbar-j
Software	N.Reg.Acc.Sg.Fem	Software-n
haben	VINF.Aux	haben-v
würden	VFIN.Aux.1.Pl.Past.Subj	werden-v
(	SYM.Paren.Left	(-x
<g/>
oder	CONJ.Coord	oder-c
niemals	ADV	niemals-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
haben	VINF.Aux	haben-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
oder	CONJ.Coord	oder-c
andere	ADJA.Pos.Acc.Sg.Fem	ander-j
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
zu	PART.Zu	zu-x
erledigen	VINF.Full	erledigen-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
einem	ART.Indef.Dat.Sg.Neut	eine-x
Unternehmen	N.Reg.Dat.Sg.Neut	Unternehmen-n
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Sg.Fem	die-x
Macht	N.Reg.Acc.Sg.Fem	Macht-n
über	APPR	über-i
die	ART.Def.Acc.Pl.Masc	die-x
Benutzer	N.Reg.Acc.Pl.Masc	Benutzer-n
des	ART.Def.Gen.Sg.Neut	die-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
geben	VINF.Full	geben-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Annahme	N.Reg.Nom.Sg.Fem	Annahme-n
mag	VFIN.Mod.3.Sg.Pres.Ind	mögen-v
ganz	ADV	ganz-a
plausibel	ADJD.Pos	plausibel-j
gewesen	VPP.Aux.Psp	sein-v
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
bevor	CONJ.SubFin	bevor-c
die	ART.Def.Nom.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Nom.Sg.Fem	Freie-Software-Bewegung-n
gezeigt	VPP.Full.Psp	zeigen-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Menge	N.Reg.Acc.Sg.Fem	Menge-n
nützlicher	ADJA.Pos.Gen.Pl.Fem	nützlich-j
Software	N.Reg.Gen.Pl.Fem	Software-n
entwickeln	VINF.Full	entwickeln-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
an	APPR	an-i
Ketten	N.Reg.Acc.Pl.Fem	Kette-n
zu	PART.Zu	zu-x
legen	VINF.Full	legen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
diese	PRO.Dem.Attr.Acc.Pl.Fem	diese-p
Annahmen	N.Reg.Acc.Pl.Fem	Annahme-n
ablehnen	VINF.Full	ablehnen-v
zu	PART.Zu	zu-x
akzeptieren	VINF.Full	akzeptieren-v
und	CONJ.Coord	und-c
diese	PRO.Dem.Attr.Acc.Pl.Neut	diese-p
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
auf	APPR	auf-i
Grundlage	N.Reg.Acc.Sg.Fem	Grundlage-n
des	ART.Def.Gen.Sg.Masc	die-x
gesunden	ADJA.Pos.Gen.Sg.Masc	gesund-j
Menschenverstandes	N.Reg.Gen.Sg.Masc	Menschenverstand-n
moralisch	ADJD.Pos	moralisch-j
-	SYM.Pun.Hyph	--x
Benutzerinnen	N.Reg.Nom.Pl.Fem	Benutzerin-n
und	CONJ.Coord	und-c
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
an	APPR	an-i
erster	ADJA.Pos.Dat.Sg.Fem	erst-j
Stelle	N.Reg.Dat.Sg.Fem	Stelle-n
-	SYM.Pun.Hyph	--x
beurteilen	VFIN.Full.3.Pl.Pres.Ind	beurteilen-v
<g/>
,	SYM.Pun.Comma	,-x
kommen	VFIN.Full.1.Pl.Pres.Ind	kommen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
zu	APPR	zu-i
ganz	ADV	ganz-a
anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
Schlussfolgerungen	N.Reg.Dat.Pl.Fem	Schlussfolgerung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Rechnernutzer	N.Reg.Nom.Pl.Masc	Rechnernutzer-n
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
Programme	N.Reg.Acc.Pl.Neut	Programm-n
entsprechend	APPR	entsprechend-i
ihren	PRO.Poss.Attr.Dat.Pl.Neut	ihre-p
Bedürfnissen	N.Reg.Dat.Pl.Neut	Bedürfnis-n
anpassen	VINF.Full	anpassen-v
und	CONJ.Coord	und-c
mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
teilen	VINF.Full	teilen-v
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Grundlage	N.Reg.Nom.Sg.Fem	Grundlage-n
der	ART.Def.Gen.Sg.Fem	die-x
Gesellschaft	N.Reg.Gen.Sg.Fem	Gesellschaft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
den	ART.Def.Acc.Sg.Masc	die-x
Rahmen	N.Reg.Acc.Sg.Masc	Rahmen-n
dieses	PRO.Dem.Attr.Gen.Sg.Neut	diese-p
Dokuments	N.Reg.Gen.Sg.Neut	Dokument-n
sprengen	VINF.Full	sprengen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Masc	die-x
Gründe	N.Reg.Acc.Pl.Masc	Grund-n
für	APPR	für-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Schlussfolgerung	N.Reg.Acc.Sg.Fem	Schlussfolgerung-n
ausführlich	ADJD.Pos	ausführlich-j
darzulegen	VINF.Full.zu	darlegen-v
<g/>
,	SYM.Pun.Comma	,-x
möchte	VFIN.Mod.3.Sg.Past.Subj	mögen-v
aber	ADV	aber-a
auf	APPR	auf-i
die	ART.Def.Acc.Pl.Masc	die-x
Artikel	N.Reg.Acc.Pl.Masc	Artikel-n
Warum	PROADV.Inter	warum-x
Software	N.Reg.Nom.Sg.Fem	Software-n
keine	PRO.Indef.Attr.Acc.Pl.Masc	keine-p
Eigentümer	N.Reg.Acc.Pl.Masc	Eigentümer-n
haben	VINF.Aux	haben-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
und	CONJ.Coord	und-c
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
jetzt	ADV	jetzt-a
sogar	ADV	sogar-a
noch	ADV	noch-a
wichtiger	ADJD.Comp	wichtig-j
verweisen	VINF.Full	verweisen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
gänzlich	ADJD.Pos	gänzlich-j
moralische	ADJA.Pos.Nom.Sg.Fem	moralisch-j
Entscheidung	N.Reg.Nom.Sg.Fem	Entscheidung-n
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
Verlust	N.Reg.Dat.Sg.Masc	Verlust-n
meiner	PRO.Poss.Attr.Gen.Sg.Fem	meine-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
unmöglich	ADJD.Pos	unmöglich-j
weiterzumachen	VINF.Full.zu	weitermachen-v
wie	CONJ.Comp	wie-c
zuvor	ADV	zuvor-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Stattdessen	PROADV.Dem	Stattdessen-x
stand	VFIN.Full.1.Sg.Past.Ind	stehen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
vor	APPR	vor-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
gänzlich	ADJD.Pos	gänzlich-j
moralischen	ADJA.Pos.Dat.Sg.Fem	moralisch-j
Entscheidung	N.Reg.Dat.Sg.Fem	Entscheidung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
einfachste	ADJA.Sup.Nom.Sg.Fem	einfach-j
Entscheidung	N.Reg.Nom.Sg.Fem	Entscheidung-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
wohl	ADV	wohl-a
gewesen	VPP.Aux.Psp	sein-v
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Dat.Sg.Fem	die-x
proprietären	ADJA.Pos.Dat.Sg.Fem	proprietär-j
Softwarewelt	N.Reg.Dat.Sg.Fem	Softwarewelt-n
beizutreten	VINF.Full.zu	beitreten-v
<g/>
,	SYM.Pun.Comma	,-x
Vertraulichkeitsvereinbarungen	N.Reg.Acc.Pl.Fem	Vertraulichkeitsvereinbarung-n
zu	PART.Zu	zu-x
unterzeichnen	VINF.Full	unterzeichnen-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
versprechen	VINF.Full	versprechen-v
<g/>
,	SYM.Pun.Comma	,-x
meinen	PRO.Poss.Attr.Dat.Pl.Masc	meine-p
Mithackern	N.Reg.Dat.Pl.Masc	Mithacker-n
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sehr	ADV	sehr-a
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
würde	VFIN.Aux.1.Sg.Past.Subj	werden-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
auch	ADV	auch-a
Software	N.Reg.Acc.Sg.Fem	Software-n
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
unter	APPR	unter-i
Vertraulichkeitsvereinbarungen	N.Reg.Acc.Pl.Fem	Vertraulichkeitsvereinbarung-n
freigegeben	VPP.Full.Psp	freigeben-v
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
und	CONJ.Coord	und-c
somit	ADV	somit-a
den	ART.Def.Acc.Sg.Masc	die-x
Druck	N.Reg.Acc.Sg.Masc	Druck-n
auf	APPR	auf-i
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
erhöhen	VINF.Full	erhöhen-v
<g/>
,	SYM.Pun.Comma	,-x
ihre	PRO.Poss.Attr.Acc.Pl.Masc	ihre-p
Mitmenschen	N.Reg.Acc.Pl.Masc	Mitmensch-n
auch	ADV	auch-a
zu	PART.Zu	zu-x
verraten	VINF.Full	verraten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
hätte	VFIN.Aux.1.Sg.Past.Subj	haben-v
auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
Geld	N.Reg.Acc.Sg.Neut	Geld-n
gemacht	VPP.Full.Psp	machen-v
und	CONJ.Coord	und-c
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
vielleicht	ADV	vielleicht-a
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
Schreiben	N.Reg.Dat.Sg.Neut	Schreiben-n
von	APPR	von-i
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
vergnügen	VINF.Full	vergnügen-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
wusste	VFIN.Full.1.Sg.Past.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
am	APPRART.Dat.Sg.Neut	an-i
Ende	N.Reg.Dat.Sg.Neut	Ende-n
meiner	PRO.Poss.Attr.Gen.Sg.Fem	meine-p
Karriere	N.Reg.Gen.Sg.Fem	Karriere-n
auf	APPR	auf-i
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
des	ART.Def.Gen.Sg.Neut	die-x
Mauerbauens	N.Reg.Gen.Sg.Neut	Mauerbauen-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
zu	PART.Zu	zu-x
spalten	VINF.Full	spalten-v
<g/>
,	SYM.Pun.Comma	,-x
zurückblicken	VINF.Full	zurückblicken-v
und	CONJ.Coord	und-c
das	ART.Def.Acc.Sg.Neut	die-x
Gefühl	N.Reg.Acc.Sg.Neut	Gefühl-n
haben	VINF.Aux	haben-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
mein	PRO.Poss.Attr.Acc.Sg.Neut	meine-p
Leben	N.Reg.Acc.Sg.Neut	Leben-n
damit	PROADV.Dem	damit-x
verbracht	VPP.Full.Psp	verbrachen|verbringen-v
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Welt	N.Reg.Acc.Sg.Fem	Welt-n
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
noch	ADV	noch-a
schlimmeren	ADJA.Comp.Dat.Sg.Masc	schlimm-j
Ort	N.Reg.Dat.Sg.Masc	Ort-n
gemacht	VPP.Full.Psp	machen-v
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
hatte	VFIN.Aux.1.Sg.Past.Ind	haben-v
bereits	ADV	bereits-a
Erfahrung	N.Reg.Acc.Sg.Fem	Erfahrung-n
damit	PROADV.Dem	damit-x
<g/>
,	SYM.Pun.Comma	,-x
am	APPRART.Dat.Sg.Neut	an-i
empfangenden	ADJA.Pos.Dat.Sg.Neut	empfangend-j
Ende	N.Reg.Dat.Sg.Neut	Ende-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Vertraulichkeitsvereinbarung	N.Reg.Gen.Sg.Fem	Vertraulichkeitsvereinbarung-n
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
jemand	PRO.Indef.Subst.Nom.Sg.Masc	jemand-p
weigerte	VFIN.Full.3.Sg.Past.Ind	weigern-v
<g/>
,	SYM.Pun.Comma	,-x
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
und	CONJ.Coord	und-c
dem	ART.Def.Dat.Sg.Neut	die-x
MIT	N.Name.Dat.Sg.Neut	MIT-n
AI	N.Reg.Nom.Sg.Neut	Ai-n
Lab	VIMP.Full.2.Sg	laben-v
den	ART.Def.Acc.Sg.Masc	die-x
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
Steuerprogramm	N.Reg.Acc.Sg.Neut	Steuerprogramm-n
unseres	PRO.Poss.Attr.Gen.Sg.Masc	unsre-p
Druckers	N.Reg.Gen.Sg.Masc	Drucker-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
(	SYM.Paren.Left	(-x
<g/>
der	ART.Def.Nom.Sg.Masc	die-x
Mangel	N.Reg.Nom.Sg.Masc	Mangel-n
bestimmter	ADJA.Pos.Gen.Pl.Fem	bestimmt-j
Fähigkeiten	N.Reg.Gen.Pl.Fem	Fähigkeit-n
in	APPR	in-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Programm	N.Reg.Dat.Sg.Neut	Programm-n
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
den	ART.Def.Acc.Sg.Masc	die-x
Gebrauch	N.Reg.Acc.Sg.Masc	Gebrauch-n
des	ART.Def.Gen.Sg.Masc	die-x
Druckers	N.Reg.Gen.Sg.Masc	Drucker-n
äußerst	ADV	äußerst-a
frustrierend	ADJD.Pos	frustrierend-j
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Also	ADV	also-a
konnte	VFIN.Mod.1.Sg.Past.Ind	können-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
mir	PRO.Refl.Subst.1.Dat.Sg.*	sie-p
selbst	ADV	selbst-a
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Vertraulichkeitsvereinbarungen	N.Reg.Nom.Pl.Fem	Vertraulichkeitsvereinbarung-n
unschuldig	ADJD.Pos	unschuldig-j
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
war	VFIN.Aux.1.Sg.Past.Ind	sein-v
sehr	ADV	sehr-a
verärgert	ADJD.Pos	verärgert-j
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
weigerte	VFIN.Full.3.Sg.Past.Ind	weigern-v
mit	APPR	mit-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
zu	PART.Zu	zu-x
teilen	VINF.Full	teilen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
konnte	VFIN.Mod.1.Sg.Past.Ind	können-v
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
nicht	PART.Neg	nicht-x
einfach	ADJD.Pos	einfach-j
umdrehen	VINF.Full	umdrehen-v
und	CONJ.Coord	und-c
dasselbe	PRO.Dem.Subst.Nom.Sg.Neut	dieselbe-p
mit	APPR	mit-i
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
andere	ADJA.Pos.Nom.Sg.Fem	ander-j
Alternative	N.Reg.Nom.Sg.Fem	Alternative-n
<g/>
,	SYM.Pun.Comma	,-x
einfach	ADV	einfach-a
aber	ADV	aber-a
unangenehm	ADJD.Pos	unangenehm-j
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
der	ART.Def.Dat.Sg.Fem	die-x
Rechnerwelt	N.Reg.Dat.Sg.Fem	Rechnerwelt-n
den	ART.Def.Acc.Sg.Masc	die-x
Rücken	N.Reg.Acc.Sg.Masc	Rücken-n
zukehren	VINF.Full	zukehren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
meine	PRO.Poss.Attr.Acc.Pl.Fem	meine-p
Kenntnisse	N.Reg.Acc.Pl.Fem	Kenntnis-n
nicht	PART.Neg	nicht-x
missbräuchlich	ADJD.Pos	missbräuchlich-j
genutzt	VPP.Full.Psp	nutzen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
dennoch	ADV	dennoch-a
verschwendet	ADJD.Pos	verschwendet-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
wäre	VFIN.Aux.1.Sg.Past.Subj	sein-v
zwar	ADV	zwar-a
nicht	PART.Neg	nicht-x
Schuld	ADJD.Pos	schuld-j
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Spaltung	N.Reg.Dat.Sg.Fem	Spaltung-n
und	CONJ.Coord	und-c
Beschränkung	N.Reg.Dat.Sg.Fem	Beschränkung-n
von	APPR	von-i
Rechnernutzern	N.Reg.Dat.Pl.Masc	Rechnernutzer-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
dennoch	ADV	dennoch-a
passieren	VINF.Full	passieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Also	ADV	also-a
suchte	VFIN.Full.1.Sg.Past.Ind	suchen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nach	APPR	nach-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Weg	N.Reg.Dat.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
auf	APPR	auf-i
dem	PRO.Rel.Subst.Dat.Sg.Masc	die-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
Programmierer	N.Reg.Nom.Sg.Masc	Programmierer-n
etwas	PRO.Indef.Attr.*.*.*	etwas-p
Gutes	N.Reg.Acc.Sg.Neut	Gut-n
bewirken	VINF.Full	bewirken-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
fragte	VFIN.Full.1.Sg.Past.Ind	fragen-v
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
oder	CONJ.Coord	oder-c
Programme	N.Reg.Acc.Pl.Neut	Programm-n
gab	VFIN.Full.3.Sg.Past.Ind	geben-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
oder	CONJ.Coord	oder-c
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
schreiben	VINF.Full	schreiben-v
könnte	VFIN.Mod.1.Sg.Past.Subj	können-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
so	ADV	so-a
noch	ADV	noch-a
einmal	ADV	einmal-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
möglich	ADJD.Pos	möglich-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Antwort	N.Reg.Nom.Sg.Fem	Antwort-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
klar	ADJD.Pos	klar-j
<g/>
:	SYM.Pun.Colon	:-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
zuerst	ADV	zuerst-a
erforderlich	ADJD.Pos	erforderlich-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
entscheidende	ADJA.Pos.Nom.Sg.Fem	entscheidend-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
anzufangen	VINF.Full.zu	anfangen-v
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
viele	PRO.Indef.Attr.Acc.Pl.Neut	viele-p
Dinge	N.Reg.Acc.Pl.Neut	Ding-n
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
den	ART.Def.Acc.Sg.Masc	die-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
überhaupt	ADV	überhaupt-a
nicht	PART.Neg	nicht-x
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
freien	ADJA.Pos.Dat.Sg.Neut	frei-j
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
könnten	VFIN.Mod.1.Pl.Past.Subj	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
wieder	ADV	wieder-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
von	APPR	von-i
zusammenarbeitenden	ADJA.Pos.Dat.Pl.Masc	zusammenarbeitend-j
Hackern	N.Reg.Dat.Pl.Masc	Hacker-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
jeden	PRO.Indef.Subst.Acc.Sg.Masc	jede-p
einladen	VINF.Full	einladen-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
anzuschließen	VINF.Full.zu	anschließen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
jedermann	PRO.Indef.Subst.Nom.Sg.Masc	jedermann-p
wäre	VFIN.Full.3.Sg.Past.Subj	sein-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
auf	APPR	auf-i
verschwörerische	ADJA.Pos.Acc.Sg.Fem	verschwörerisch-j
Weise	N.Reg.Acc.Sg.Fem	Weise-n
zu	PART.Zu	zu-x
beginnen	VINF.Full	beginnen-v
seine	PRO.Poss.Attr.Acc.Sg.Fem	seine-p
oder	CONJ.Coord	oder-c
ihre	PRO.Poss.Attr.Acc.Pl.Masc	ihre-p
Freunde	N.Reg.Acc.Pl.Masc	Freund-n
zu	PART.Zu	zu-x
benachteiligen	VINF.Full	benachteiligen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	APPR	als-i
Betriebssystementwickler	N.Reg.Nom.Sg.Masc	Betriebssystementwickler-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
die	ART.Def.Acc.Pl.Fem	die-x
richtigen	ADJA.Pos.Acc.Pl.Fem	richtig-j
Kenntnisse	N.Reg.Acc.Pl.Fem	Kenntnis-n
für	APPR	für-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auch	ADV	auch-a
wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Erfolg	N.Reg.Acc.Sg.Masc	Erfolg-n
nicht	PART.Neg	nicht-x
als	APPR	als-i
garantiert	ADJD.Pos	garantiert-j
ansehen	VINF.Full	ansehen-v
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
klar	ADJD.Pos	klar-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
auserwählt	ADJD.Pos	auserwählt-j
war	VFIN.Aux.1.Sg.Past.Ind	sein-v
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
zu	PART.Zu	zu-x
übernehmen	VINF.Full	übernehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
entschied	VFIN.Full.1.Sg.Past.Ind	entscheiden-v
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
kompatibel	ADJD.Pos	kompatibel-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
portabel	ADJD.Pos	portabel-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
und	CONJ.Coord	und-c
Unix-Benutzer	N.Reg.Nom.Pl.Masc	Unix-Benutzer-n
somit	ADV	somit-a
leichter	ADJD.Comp	leicht-j
umsteigen	VINF.Full	umsteigen-v
könnten	VFIN.Mod.3.Pl.Past.Subj	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
einer	PRO.Indef.Subst.Nom.Sg.Masc	eine-p
Hacker-Tradition	N.Reg.Acc.Sg.Fem	Hacker-Tradition-n
folgend	ADJD.Pos	folgend-j
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
rekursives	ADJA.Pos.Nom.Sg.Neut	rekursiv-j
Akronym	N.Reg.Nom.Sg.Neut	Akronym-n
für	APPR	für-i
GNU	ADJD.Pos	GNU-j
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Not	N.Reg.Nom.Sg.Fem	Not-n
Unix	FM	Unix-x
(	SYM.Paren.Left	(-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
<g/>
'	SYM.Quot.Right	'-x
<g/>
)	SYM.Paren.Right	)-x
gewählt	VPP.Full.Psp	wählen-v
und	CONJ.Coord	und-c
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
[	SYM.Paren.Left	[-x
<g/>
ˈgnuː	CARD	[number]-m
<g/>
]	SYM.Paren.Right	]-x
ausgesprochen	VPP.Full.Psp	aussprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
einen	ART.Indef.Acc.Sg.Masc	eine-x
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
-	SYM.Pun.Hyph	--x
kaum	ADV	kaum-a
genug	ADV	genug-a
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
andere	ADJA.Pos.Acc.Pl.Neut	ander-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
auszuführen	VINF.Full.zu	ausführen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
1970ern	N.Reg.Dat.Pl.Masc	1970ern-n
umfasste	VFIN.Full.3.Sg.Past.Ind	umfassen-v
jedes	PRO.Indef.Attr.Nom.Sg.Neut	jede-p
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Namen	N.Reg.Acc.Sg.Masc	Name-n
verdiente	VFIN.Full.3.Sg.Past.Ind	verdienen-v
<g/>
,	SYM.Pun.Comma	,-x
Befehlsinterpreter	N.Reg.Nom.Pl.Masc	Befehlsinterpreter-n
<g/>
,	SYM.Pun.Comma	,-x
Assembler	N.Reg.Nom.Pl.Masc	Assembler-n
<g/>
,	SYM.Pun.Comma	,-x
Compiler	N.Reg.Nom.Pl.Masc	Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
Interpreter	N.Reg.Nom.Pl.Masc	Interpreter-n
<g/>
,	SYM.Pun.Comma	,-x
Debugger	N.Reg.Nom.Pl.Masc	Debugger-n
<g/>
,	SYM.Pun.Comma	,-x
Texteditoren	N.Reg.Nom.Pl.Masc	Texteditor-n
<g/>
,	SYM.Pun.Comma	,-x
E-Mail-Anwendungen	N.Reg.Nom.Pl.Fem	E-Mail-Anwendung-n
und	CONJ.Coord	und-c
vieles	PRO.Indef.Subst.Nom.Pl.Neut	viele-p
mehr	ADV	mehr-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
ITS	N.Name.Nom.Sg.Fem	ITS-n
<g/>
,	SYM.Pun.Comma	,-x
Multics	N.Name.Nom.Sg.*	Multics-n
<g/>
,	SYM.Pun.Comma	,-x
VMS	N.Name.Nom.Sg.*	VMS-n
und	CONJ.Coord	und-c
Unix	N.Name.Nom.Sg.*	Unix-n
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Nom.Sg.Neut	GNU-Betriebssystem-n
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
auch	ADV	auch-a
umfassen	VINF.Full	umfassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Später	ADJD.Comp	spät-j
hörte	VFIN.Full.1.Sg.Past.Ind	hören-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
diese	PRO.Dem.Attr.Acc.Pl.Neut	diese-p
Wörter	N.Reg.Acc.Pl.Neut	Wort-n
<g/>
,	SYM.Pun.Comma	,-x
zurückgeführt	ADJD.Pos	zurückgeführt-j
auf	APPR	auf-i
Hillel	N.Reg.Acc.Sg.Masc	Hillel-n
<g/>
[	SYM.Paren.Left	[-x
<g/>
2	CARD	2-m
<g/>
]	SYM.Paren.Right	]-x
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nicht	PART.Neg	nicht-x
für	APPR	für-i
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
für	APPR	für-i
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
sein	VINF.Aux	sein-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nur	ADV	nur-a
für	APPR	für-i
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
dann	ADV	dann-a
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
nicht	PART.Neg	nicht-x
jetzt	ADV	jetzt-a
<g/>
,	SYM.Pun.Comma	,-x
wann	PROADV.Inter	wann-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Entschluss	N.Reg.Nom.Sg.Masc	Entschluss-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
zu	PART.Zu	zu-x
beginnen	VINF.Full	beginnen-v
<g/>
,	SYM.Pun.Comma	,-x
beruhte	VFIN.Full.3.Sg.Past.Ind	beruhen-v
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
ähnlichen	ADJA.Pos.Dat.Sg.Masc	ähnlich-j
Geist	N.Reg.Dat.Sg.Masc	Geist-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Frei	ADJD.Pos	frei-j
wie	CONJ.Comp	wie-c
in	APPR	in-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
mitunter	ADV	mitunter-a
missverstanden	VPP.Full.Psp	missverstehen-v
-	SYM.Pun.Hyph	--x
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
Preis	N.Reg.Dat.Sg.Masc	Preis-n
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
um	APPR	um-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Hier	ADV	hier-a
deshalb	PROADV.Dem	deshalb-x
die	ART.Def.Nom.Sg.Fem	die-x
Freie-Software-Definition	N.Reg.Nom.Sg.Fem	Freie-Software-Definition-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
Sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
einem	ART.Indef.Dat.Sg.Masc	eine-x
besonderen	ADJA.Pos.Dat.Sg.Masc	besonder-j
Benutzer	N.Reg.Dat.Sg.Masc	Benutzer-n
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
auszuführen	VINF.Full.zu	ausführen-v
wie	CONJ.Comp	wie-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
Zweck	N.Reg.Acc.Sg.Masc	Zweck-n
<g/>
;	SYM.Pun.Sent	;-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
an	APPR	an-i
Ihre	PRO.Poss.Attr.Nom.Pl.Neut	ihre-p
Bedürfnisse	N.Reg.Acc.Pl.Neut	Bedürfnis-n
anzupassen	VINF.Full.zu	anpassen-v
(	SYM.Paren.Left	(-x
<g/>
um	APPR	um-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Praxis	N.Reg.Dat.Sg.Fem	Praxis-n
umzusetzen	VINF.Full.zu	umsetzen-v
<g/>
,	SYM.Pun.Comma	,-x
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
Zugang	N.Reg.Acc.Sg.Masc	Zugang-n
zum	APPRART.Dat.Sg.Masc	zu-i
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
Programmänderungen	N.Reg.Nom.Pl.Fem	Programmänderung-n
ohne	APPR	ohne-i
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
außerordentlich	ADJD.Pos	außerordentlich-j
schwierig	ADJD.Pos	schwierig-j
<g/>
)	SYM.Paren.Right	)-x
<g/>
;	SYM.Pun.Sent	;-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
weiterzuverbreiten	VINF.Full.zu	weiterverbreiten-v
<g/>
,	SYM.Pun.Comma	,-x
entweder	CONJ.Coord	entweder-c
gratis	ADJD.Pos	gratis-j
oder	CONJ.Coord	oder-c
gegen	APPR	gegen-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gebühr	N.Reg.Acc.Sg.Fem	Gebühr-n
<g/>
;	SYM.Pun.Sent	;-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
modifizierte	ADJA.Pos.Acc.Pl.Fem	modifiziert-j
Programmversionen	N.Reg.Acc.Pl.Fem	Programmversion-n
zu	PART.Zu	zu-x
distribuieren	VINF.Full	distribuier-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
die	ART.Def.Nom.Sg.Fem	die-x
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
von	APPR	von-i
Ihren	PRO.Poss.Attr.Dat.Pl.Fem	ihre-p
Verbesserungen	N.Reg.Dat.Pl.Fem	Verbesserung-n
profitieren	VINF.Full	profitieren-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
frei	ADJD.Pos	frei-j
auf	APPR	auf-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
bezieht	VFIN.Full.3.Sg.Pres.Ind	beziehen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
auf	APPR	auf-i
den	ART.Def.Acc.Sg.Masc	die-x
Preis	N.Reg.Acc.Sg.Masc	Preis-n
<g/>
,	SYM.Pun.Comma	,-x
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Widerspruch	N.Reg.Acc.Sg.Masc	Widerspruch-n
zwischen	APPR	zwischen-i
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
und	CONJ.Coord	und-c
dem	ART.Def.Dat.Sg.Masc	die-x
Verkauf	N.Reg.Dat.Sg.Masc	Verkauf-n
von	APPR	von-i
Kopien	N.Reg.Dat.Pl.Fem	Kopie-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Tatsächlich	ADJD.Pos	tatsächlich-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
zu	PART.Zu	zu-x
verkaufen	VINF.Full	verkaufen-v
<g/>
,	SYM.Pun.Comma	,-x
entscheidend	ADJD.Pos	entscheidend-j
<g/>
:	SYM.Pun.Colon	:-x
Sammlungen	N.Reg.Nom.Pl.Fem	Sammlung-n
von	APPR	von-i
auf	APPR	auf-i
CD-ROMs	N.Name.Gen.Sg.*	CD-ROMs-n
verkaufter	ADJA.Pos.Dat.Sg.Fem	verkauft-j
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
wichtig	ADJD.Pos	wichtig-j
und	CONJ.Coord	und-c
der	ART.Def.Nom.Sg.Masc	die-x
Verkauf	N.Reg.Nom.Sg.Masc	Verkauf-n
ein	ART.Indef.Nom.Sg.Masc	eine-x
wichtiger	ADJA.Pos.Nom.Sg.Masc	wichtig-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
mehr	ADV	mehr-a
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Freie-Software-Entwicklung	N.Reg.Acc.Sg.Fem	Freie-Software-Entwicklung-n
zu	PART.Zu	zu-x
investieren	VINF.Full	investieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Daher	PROADV.Dem	daher-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
diesen	PRO.Dem.Attr.Dat.Pl.Fem	diese-p
Sammlungen	N.Reg.Dat.Pl.Fem	Sammlung-n
nicht	PART.Neg	nicht-x
frei	ADJD.Pos	frei-j
aufnehmen	VINF.Full	aufnehmen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aufgrund	APPR	aufgrund-i
der	ART.Def.Gen.Sg.Fem	die-x
Mehrdeutigkeit	N.Reg.Gen.Sg.Fem	Mehrdeutigkeit-n
von	APPR	von-i
frei	ADV	frei-a
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
lange	ADV	lange-a
nach	APPR	nach-i
Alternativen	N.Reg.Dat.Pl.Fem	Alternative-n
gesucht	VPP.Full.Psp	suchen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
besseren	ADJA.Comp.Acc.Sg.Masc	gut-j
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
gefunden	VPP.Full.Psp	finden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
englische	ADJA.Pos.Nom.Sg.Fem	englisch-j
Sprache	N.Reg.Nom.Sg.Fem	Sprache-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Wörter	N.Reg.Acc.Pl.Neut	Wort-n
und	CONJ.Coord	und-c
Nuancen	N.Reg.Acc.Pl.Fem	Nuance-n
als	APPR	als-i
jede	PRO.Indef.Attr.Nom.Sg.Fem	jede-p
andere	ADJA.Pos.Nom.Sg.Fem	ander-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
fehlt	VFIN.Full.3.Sg.Pres.Ind	fehlen-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
einfaches	ADJA.Pos.Nom.Sg.Neut	einfach-j
<g/>
,	SYM.Pun.Comma	,-x
eindeutiges	ADJA.Pos.Nom.Sg.Neut	eindeutig-j
Wort	N.Reg.Nom.Sg.Neut	Wort-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
frei	ADJD.Pos	frei-j
wie	CONJ.Comp	wie-c
in	APPR	in-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
bedeutet	VPP.Full.Psp	bedeuten-v
-	SYM.Pun.Hyph	--x
uneingeschränkt	ADJD.Pos	uneingeschränkt-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Wort	N.Reg.Nom.Sg.Neut	Wort-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Bedeutung	N.Reg.Dat.Sg.Fem	Bedeutung-n
am	PART.Deg	am-x
nächsten	ADJD.Sup	nächsten-j
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Derartige	ADJA.Pos.Nom.Pl.Fem	derartig-j
Alternativen	N.Reg.Nom.Pl.Fem	Alternative-n
wie	CONJ.Comp	wie-c
befreit	VPP.Full.Psp	befreien-v
<g/>
,	SYM.Pun.Comma	,-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
offen	ADJD.Pos	offen-j
haben	VINF.Aux	haben-v
entweder	CONJ.Coord	entweder-c
die	ART.Def.Acc.Sg.Fem	die-x
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Bedeutung	N.Reg.Acc.Sg.Fem	Bedeutung-n
oder	CONJ.Coord	oder-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
anderen	ADJA.Pos.Acc.Sg.Masc	ander-j
Nachteil	N.Reg.Acc.Sg.Masc	Nachteil-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU-Software	N.Reg.Nom.Sg.Fem	GNU-Software-n
und	CONJ.Coord	und-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Entwicklung	N.Reg.Nom.Sg.Fem	Entwicklung-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
ganzen	ADJA.Pos.Gen.Sg.Neut	ganz-j
Systems	N.Reg.Gen.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
sehr	ADV	sehr-a
großes	ADJA.Pos.Nom.Sg.Neut	groß-j
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Um	CONJ.SubInf	um-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
erreichbar	ADJD.Pos	erreichbar-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
beschloss	VFIN.Full.1.Sg.Past.Ind	beschließen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
vorhandene	ADJA.Pos.Acc.Pl.Masc	vorhanden-j
Teile	N.Reg.Acc.Pl.Masc	Teil-n
freier	ADJA.Pos.Gen.Sg.Fem	frei-j
Software	N.Reg.Gen.Sg.Fem	Software-n
anzupassen	VINF.Full.zu	anpassen-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
wo	PROADV.Inter	wo-x
immer	ADV	immer-a
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
möglich	ADJD.Pos	möglich-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
entschied	VFIN.Full.3.Sg.Past.Ind	entscheiden-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
gleich	ADV	gleich-a
am	APPRART.Dat.Sg.Masc	an-i
Anfang	N.Reg.Dat.Sg.Masc	Anfang-n
hauptsächlich	ADJD.Pos	hauptsächlich-j
TeX	N.Name.Nom.Sg.*	TeX-n
als	APPR	als-i
Textsatzsystem	N.Reg.Acc.Sg.Neut	Textsatzsystem-n
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
;	SYM.Pun.Sent	;-x
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
später	ADJD.Comp	später-j
beschloss	VFIN.Full.1.Sg.Past.Ind	beschließen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
X	SYM.Other.XY	X-x
Window	FM	Window-x
System	FM	System-x
(	SYM.Paren.Left	(-x
<g/>
X11	N.Name.Nom.Sg.*	X11-n
<g/>
)	SYM.Paren.Right	)-x
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
anstatt	CONJ.SubInf	anstatt-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
anderes	ADJA.Pos.Acc.Sg.Neut	ander-j
Fenstersystem	N.Reg.Acc.Sg.Neut	Fenstersystem-n
für	APPR	für-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aufgrund	APPR	aufgrund-i
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
anderer	ADJA.Pos.Gen.Pl.Fem	ander-j
ähnlicher	ADJA.Pos.Gen.Pl.Fem	ähnlich-j
<g/>
)	SYM.Paren.Right	)-x
Entscheidungen	N.Reg.Gen.Pl.Fem	Entscheidung-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
nicht	PART.Neg	nicht-x
das	ART.Def.Acc.Sg.Neut	die-x
Gleiche	N.Reg.Acc.Sg.Neut	Gleiche-n
wie	CONJ.Coord	wie-c
die	ART.Def.Acc.Sg.Fem	die-x
Sammlung	N.Reg.Acc.Sg.Fem	Sammlung-n
aller	PRO.Indef.Attr.Gen.Pl.Masc	alle-p
GNU-Software	N.Reg.Gen.Pl.Masc	GNU-Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
umfasst	VFIN.Full.3.Sg.Pres.Ind	umfassen-v
Programme	N.Reg.Acc.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
nicht	PART.Neg	nicht-x
GNU-Software	N.Reg.Nom.Pl.Masc	GNU-Software-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
Programme	N.Reg.Nom.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
von	APPR	von-i
anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
Personen	N.Reg.Dat.Pl.Fem	Person-n
und	CONJ.Coord	und-c
Projekten	N.Reg.Dat.Pl.Neut	Projekt-n
für	APPR	für-i
deren	PRO.Dem.Subst.Gen.Pl.Neut	die-p
eigene	ADJA.Pos.Acc.Pl.Masc	eigen-j
Zwecke	N.Reg.Acc.Pl.Masc	Zweck-n
entwickelt	VPP.Full.Psp	entwickeln-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
-	SYM.Pun.Hyph	--x
aber	CONJ.Coord	aber-c
die	ART.Def.Nom.Pl.Masc	die-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
verwenden	VINF.Full	verwenden-v
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Anfang	N.Reg.Nom.Sg.Masc	Anfang-n
des	ART.Def.Gen.Sg.Neut	die-x
Projekts	N.Reg.Gen.Sg.Neut	Projekt-n
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Januar	N.Reg.Dat.Sg.Masc	Januar-n
1984	CARD	[number]-m
kündigte	VFIN.Full.3.Sg.Past.Ind	kündigen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
meinen	PRO.Poss.Attr.Acc.Sg.Masc	meine-p
Job	N.Reg.Acc.Sg.Masc	Job-n
am	APPRART.Dat.Sg.Neut	an-i
MIT	N.Name.Dat.Sg.Neut	MIT-n
und	CONJ.Coord	und-c
begann	VFIN.Full.3.Sg.Past.Ind	beginnen-v
GNU-Software	N.Reg.Acc.Pl.Neut	GNU-Software-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
MIT	N.Name.Nom.Sg.Neut	MIT-n
zu	PART.Zu	zu-x
verlassen	VINF.Full	verlassen-v
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
notwendig	ADJD.Pos	notwendig-j
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
gewesen	VPP.Aux.Psp	sein-v
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
in	APPR	in-i
den	ART.Def.Acc.Sg.Masc	die-x
Vertrieb	N.Reg.Acc.Sg.Masc	Vertrieb-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
als	APPR	als-i
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
einzumischen	VINF.Full.zu	einmischen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
als	APPR	als-i
Mitarbeiter	N.Reg.Nom.Pl.Masc	Mitarbeiter-n
geblieben	VPP.Full.Psp	bleiben-v
<g/>
,	SYM.Pun.Comma	,-x
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
das	ART.Def.Nom.Sg.Neut	die-x
MIT	N.Name.Nom.Sg.Neut	MIT-n
Anspruch	N.Reg.Acc.Sg.Masc	Anspruch-n
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
selbst	ADV	selbst-a
erheben	VINF.Full	erheben-v
<g/>
,	SYM.Pun.Comma	,-x
eigene	ADJA.Pos.Acc.Pl.Fem	eigen-j
Vertriebsbedingungen	N.Reg.Acc.Pl.Fem	Vertriebsbedingung-n
festlegen	VINF.Full	festlegen-v
oder	CONJ.Coord	oder-c
die	ART.Def.Acc.Sg.Fem	die-x
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
sogar	ADV	sogar-a
in	APPR	in-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
proprietäres	ADJA.Pos.Acc.Sg.Neut	proprietär-j
Softwarepaket	N.Reg.Acc.Sg.Neut	Softwarepaket-n
umwandeln	VINF.Full	umwandeln-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
hatte	VFIN.Aux.1.Sg.Past.Ind	haben-v
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Sg.Fem	die-x
Absicht	N.Reg.Acc.Sg.Fem	Absicht-n
eine	ART.Indef.Nom.Sg.Fem	eine-x
Menge	N.Reg.Nom.Sg.Fem	Menge-n
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
zu	PART.Zu	zu-x
erledigen	VINF.Full	erledigen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
dann	ADV	dann-a
zu	PART.Zu	zu-x
sehen	VINF.Full	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
eigentlichen	ADJA.Pos.Acc.Sg.Masc	eigentlich-j
Zweck	N.Reg.Acc.Sg.Masc	Zweck-n
nutzlos	ADJD.Pos	nutzlos-j
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
:	SYM.Pun.Colon	:-x
das	ART.Def.Nom.Sg.Neut	die-x
Schaffen	N.Reg.Nom.Sg.Neut	Schaffen-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
neuen	ADJA.Pos.Gen.Sg.Fem	neu-j
Software	N.Reg.Gen.Sg.Fem	Software-n
teilenden	ADJA.Pos.Gen.Sg.Fem	teilend-j
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Allerdings	ADV	allerdings-a
lud	VFIN.Full.1.Sg.Past.Ind	laden-v
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
Professor	N.Reg.Nom.Sg.Masc	Professor-n
Winston	N.Name.Nom.Sg.Masc	Winston-n
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Nom.Sg.Masc	die-x
damalige	ADJA.Pos.Nom.Sg.Masc	damalig-j
Leiter	N.Reg.Nom.Sg.Masc	Leiter-n
des	ART.Def.Gen.Sg.Neut	die-x
MIT	N.Name.Gen.Sg.Neut	MIT-n
AI	N.Reg.Nom.Sg.Neut	Ai-n
Lab	VIMP.Full.2.Sg	laben-v
<g/>
,	SYM.Pun.Comma	,-x
freundlicherweise	ADV	freundlicherweise-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
<g/>
,	SYM.Pun.Comma	,-x
weiterhin	ADV	weiterhin-a
die	ART.Def.Acc.Sg.Fem	die-x
Einrichtung	N.Reg.Acc.Sg.Fem	Einrichtung-n
des	ART.Def.Gen.Sg.Neut	die-x
Labors	N.Reg.Gen.Sg.Neut	Labor-n
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
ersten	ADJA.Pos.Nom.Pl.Masc	erst-j
Schritte	N.Reg.Nom.Pl.Masc	Schritt-n
</s>
</align>
<align>
<s>
Kurz	ADJD.Pos	kurz-j
vor	APPR	vor-i
Beginn	N.Reg.Dat.Sg.Masc	Beginn-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
hörte	VFIN.Full.1.Sg.Past.Ind	hören-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
vom	APPRART.Dat.Sg.*	von-i
Free	N.Name.*.*.*	Free-n
University	N.Name.*.*.*	University-n
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
Kit	N.Reg.Nom.Sg.Neut	Kit-n
<g/>
,	SYM.Pun.Comma	,-x
auch	ADV	auch-a
als	APPR	als-i
VUCK	N.Reg.Nom.Sg.Neut	VUCK-n
bekannt	VPP.Full.Psp	bekennen-v
(	SYM.Paren.Left	(-x
<g/>
das	ART.Def.Nom.Sg.Neut	die-x
niederländische	ADJA.Pos.Nom.Sg.Neut	niederländisch-j
Wort	N.Reg.Nom.Sg.Neut	Wort-n
für	APPR	für-i
frei	ADJD.Pos	frei-j
fängt	VFIN.Full.3.Sg.Pres.Ind	fangen-v
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
'	SYM.Quot.Right	'-x
<g/>
v	N.Name.Dat.Sg.Neut	V-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
'	SYM.Quot.Right	'-x
<g/>
vrij	VPP.Full.Psp	vrij-v
<g/>
'	SYM.Quot.Right	'-x
<g/>
,	SYM.Pun.Comma	,-x
an	PART.Verb	an-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
mehrere	PRO.Indef.Attr.Acc.Pl.Fem	mehrere-p
Programmiersprachen	N.Reg.Acc.Pl.Fem	Programmiersprache-n
<g/>
,	SYM.Pun.Comma	,-x
darunter	PROADV.Dem	darunter-x
C	N.Name.Acc.Sg.*	C-n
und	CONJ.Coord	und-c
Pascal	N.Name.Acc.Sg.*	Pascal-n
<g/>
,	SYM.Pun.Comma	,-x
zu	PART.Zu	zu-x
verarbeiten	VINF.Full	verarbeiten-v
und	CONJ.Coord	und-c
mehrere	PRO.Indef.Attr.Acc.Pl.Fem	mehrere-p
Zielplattformen	N.Reg.Acc.Pl.Fem	Zielplattform-n
zu	PART.Deg	zu-x
unterstützten	VFIN.Full.3.Pl.Past.Ind	unterstützen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
schrieb	VFIN.Full.1.Sg.Past.Ind	schreiben-v
dem	ART.Def.Dat.Sg.Masc	die-x
Autor	N.Reg.Dat.Sg.Masc	Autor-n
und	CONJ.Coord	und-c
fragte	VFIN.Full.1.Sg.Past.Ind	fragen-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
für	APPR	für-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
genutzt	VPP.Full.Psp	nutzen-v
werden	VINF.Aux	werden-v
könne	VFIN.Mod.3.Sg.Pres.Subj	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
antwortete	VFIN.Full.3.Sg.Past.Ind	antworten-v
spöttisch	ADJD.Pos	spöttisch-j
und	CONJ.Coord	und-c
gab	VFIN.Full.3.Sg.Past.Ind	geben-v
an	PART.Verb	an-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
Universität	N.Reg.Nom.Sg.Fem	Universität-n
frei	ADJD.Pos	frei-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
aber	ADV	aber-a
der	ART.Def.Nom.Sg.Masc	die-x
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
beschloss	VFIN.Full.1.Sg.Past.Ind	beschließen-v
daher	PROADV.Dem	daher-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
mein	PRO.Poss.Attr.Nom.Sg.Neut	meine-p
erstes	ADJA.Pos.Nom.Sg.Neut	erst-j
Programm	N.Reg.Nom.Sg.Neut	Programm-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Projekt	N.Reg.Acc.Sg.Neut	GNU-Projekt-n
ein	ART.Indef.Nom.Sg.Masc	eine-x
mehrsprachiger	ADJA.Pos.Nom.Sg.Masc	mehrsprachig-j
<g/>
,	SYM.Pun.Comma	,-x
plattformübergreifender	ADJA.Pos.Nom.Sg.Masc	plattformübergreifend-j
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
sein	VINF.Aux	sein-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Hoffnung	N.Reg.Dat.Sg.Fem	Hoffnung-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
notwendigerweise	ADV	notwendigerweise-a
den	ART.Def.Acc.Sg.Masc	die-x
ganzen	ADJA.Pos.Acc.Sg.Masc	ganz-j
Compiler	N.Reg.Acc.Sg.Masc	Compiler-n
selbst	ADV	selbst-a
neu	ADJD.Pos	neu-j
schreiben	VINF.Full	schreiben-v
zu	PART.Zu	zu-x
müssen	VINF.Mod	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
erhielt	VFIN.Full.1.Sg.Past.Ind	erhalten-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
schließlich	ADV	schließlich-a
den	ART.Def.Acc.Sg.Masc	die-x
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
des	ART.Def.Gen.Sg.Masc	die-x
Pastel	N.Name.*.*.*	Pastel-n
Compilers	N.Reg.Gen.Sg.Masc	Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
einem	ART.Indef.Dat.Sg.Masc	eine-x
plattformübergreifenden	ADJA.Pos.Dat.Sg.Masc	plattformübergreifend-j
Compiler	N.Reg.Dat.Sg.Masc	Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
am	APPRART.Dat.Sg.Masc	an-i
Lawrence	N.Name.Dat.Sg.Masc	Lawrence-n
Livermore	N.Name.*.*.*	Livermore-n
Laboratory	N.Name.*.*.*	Laboratory-n
entwickelt	VPP.Full.Psp	entwickeln-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
unterstützte	VFIN.Full.3.Sg.Past.Ind	unterstützen-v
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
erweiterte	ADJA.Pos.Acc.Sg.Fem	erweitert-j
Version	N.Reg.Acc.Sg.Fem	Version-n
von	APPR	von-i
Pascal	N.Name.Dat.Sg.Masc	Pascal-n
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
auch	ADV	auch-a
in	APPR	in-i
dieser	PRO.Dem.Subst.Dat.Sg.Fem	diese-p
als	APPR	als-i
Systemprogrammiersprache	N.Reg.Nom.Sg.Fem	Systemprogrammiersprache-n
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
fügte	VFIN.Full.1.Sg.Past.Ind	fügen-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
C-Frontend	N.Reg.Acc.Sg.Neut	C-Frontend-n
hinzu	PART.Verb	hinzu-x
und	CONJ.Coord	und-c
begann	VFIN.Full.3.Sg.Past.Ind	beginnen-v
die	ART.Def.Acc.Sg.Fem	die-x
Portierung	N.Reg.Acc.Sg.Fem	Portierung-n
auf	APPR	auf-i
den	ART.Def.Dat.Pl.*	die-x
Motorola	N.Name.Dat.Sg.*	Motorola-n
68000-Rechner	N.Reg.Nom.Pl.Neut	68000-Rechner-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	CONJ.SubFin	als-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
entdeckte	VFIN.Full.1.Sg.Past.Ind	entdecken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
der	ART.Def.Nom.Sg.Masc	die-x
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
mehrere	PRO.Indef.Attr.Acc.Sg.Neut	mehrere-p
Megabyte	N.Reg.Acc.Sg.Neut	Megabyte-n
Stack-Speicher	N.Reg.Nom.Sg.Masc	Stack-Speicher-n
benötigte	VFIN.Full.3.Sg.Past.Ind	benötigen-v
und	CONJ.Coord	und-c
das	ART.Def.Nom.Sg.Neut	die-x
verfügbare	ADJA.Pos.Nom.Sg.Neut	verfügbar-j
68000	CARD	[number]-m
Unix-System	N.Reg.Nom.Sg.Neut	Unix-System-n
nur	ADV	nur-a
64k	N.Reg.Acc.Sg.Fem	64k-n
erlauben	VINF.Full	erlauben-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
musste	VFIN.Mod.1.Sg.Past.Ind	müssen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
allerdings	ADV	allerdings-a
aufgeben	VINF.Full	aufgeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
fand	VFIN.Full.1.Sg.Past.Ind	finden-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
heraus	PART.Verb	heraus-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
der	ART.Def.Nom.Sg.Masc	die-x
Pastel	ADJA.Pos.Nom.Sg.Masc	Pastel-j
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
die	ART.Def.Acc.Sg.Fem	die-x
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Eingabedatei	N.Reg.Acc.Sg.Fem	Eingabedatei-n
durch	APPR	durch-i
Analyse	N.Reg.Acc.Sg.Fem	Analyse-n
in	APPR	in-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Syntaxbaum	N.Reg.Acc.Sg.Masc	Syntaxbaum-n
umwandelte	VFIN.Full.3.Sg.Past.Ind	umwandeln-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
gesamten	ADJA.Pos.Acc.Sg.Masc	gesamt-j
Syntaxbaum	N.Reg.Acc.Sg.Masc	Syntaxbaum-n
in	APPR	in-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Kette	N.Reg.Acc.Sg.Fem	Kette-n
von	APPR	von-i
Anweisungen	N.Reg.Dat.Pl.Fem	Anweisung-n
umwandelte	VFIN.Full.3.Sg.Past.Ind	umwandeln-v
und	CONJ.Coord	und-c
dann	ADV	dann-a
die	ART.Def.Acc.Sg.Fem	die-x
ganze	ADJA.Pos.Acc.Sg.Fem	ganz-j
Ausgabedatei	N.Reg.Acc.Sg.Fem	Ausgabedatei-n
generierte	VFIN.Full.3.Sg.Past.Ind	generieren-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
jemals	ADV	jemals-a
irgendwelchen	PRO.Indef.Attr.Acc.Sg.Masc	irgendwelche-p
Speicher	N.Reg.Acc.Sg.Masc	Speicher-n
wieder	ADV	wieder-a
freizugeben	VINF.Full.zu	freigeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
An	APPR	an-i
diesem	PRO.Dem.Attr.Dat.Sg.Masc	diese-p
Punkt	N.Reg.Dat.Sg.Masc	Punkt-n
entschloss	VFIN.Full.1.Sg.Past.Ind	entschließen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
neuen	ADJA.Pos.Acc.Sg.Masc	neu-j
Compiler	N.Reg.Acc.Sg.Masc	Compiler-n
von	APPR	von-i
Grund	N.Reg.Dat.Sg.Masc	Grund-n
auf	APPR	auf-i
neu	ADJD.Pos	neu-j
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
neue	ADJA.Pos.Nom.Sg.Masc	neu-j
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
heute	ADV	heute-a
als	APPR	als-i
GNU	ADJA.Pos.Nom.Sg.Masc	GNU-j
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
Collection	N.Reg.Nom.Sg.Fem	Collection-n
(	SYM.Paren.Left	(-x
<g/>
GCC	N.Name.Nom.Sg.*	GCC-n
<g/>
)	SYM.Paren.Right	)-x
bekannt	PART.Verb	bekannt-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
vom	APPRART.Dat.Sg.Neut	von-i
Pastel	N.Reg.Dat.Sg.Neut	Pastel-n
Compiler	N.Reg.Nom.Pl.Masc	Compiler-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
darin	PROADV.Dem	darin-x
genutzt	VPP.Full.Psp	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
schaffte	VFIN.Full.1.Sg.Past.Ind	schaffen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
C-Frontend	N.Reg.Acc.Sg.Neut	C-Frontend-n
<g/>
,	SYM.Pun.Comma	,-x
welches	PRO.Rel.Subst.Acc.Sg.Neut	welche-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
geschrieben	VPP.Full.Psp	schreiben-v
hatte	VFIN.Aux.1.Sg.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
anzupassen	VINF.Full.zu	anpassen-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
erst	ADV	erst-a
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
später	ADJD.Comp	später-j
<g/>
,	SYM.Pun.Comma	,-x
zuerst	ADV	zuerst-a
arbeitete	VFIN.Full.1.Sg.Past.Subj	arbeiten-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
an	APPR	an-i
GNU	N.Name.*.*.*	GNU-n
Emacs	N.Name.Acc.Sg.*	Emacs-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Masc	GNU-n
Emacs	N.Name.Nom.Sg.Masc	Emacs-n
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
begann	VFIN.Full.1.Sg.Past.Ind	beginnen-v
die	ART.Def.Acc.Sg.Fem	die-x
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
an	APZR	an-x
GNU	N.Name.Nom.*.*	GNU-n
Emacs	N.Name.Nom.*.*	Emacs-n
im	APPRART.Dat.Sg.Masc	in-i
September	N.Reg.Dat.Sg.Masc	September-n
1984	CARD	[number]-m
<g/>
,	SYM.Pun.Comma	,-x
Anfang	N.Reg.*.Sg.Masc	Anfang-n
1985	CARD	[number]-m
fing	VFIN.Full.3.Sg.Past.Ind	fangen-v
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
an	APPR	an-i
brauchbar	ADJD.Pos	brauchbar-j
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ermöglichte	VFIN.Full.3.Sg.Past.Ind	ermöglichen-v
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
weitere	ADJA.Comp.Acc.Sg.Neut	weit-j
Schreiben	N.Reg.Acc.Sg.Neut	Schreiben-n
Unix-Systeme	N.Reg.Acc.Pl.Neut	Unix-System-n
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Interesse	N.Reg.Nom.Sg.Neut	Interesse-n
habend	ADJD.Pos	habend-j
die	ART.Def.Acc.Sg.Fem	die-x
Verwendung	N.Reg.Acc.Sg.Fem	Verwendung-n
von	APPR	von-i
Vi	N.Name.Dat.Sg.Masc	Vi-n
oder	CONJ.Coord	oder-c
Ed	N.Name.Dat.Sg.Masc	Ed-n
zu	PART.Zu	zu-x
erlernen	VINF.Full	erlernen-v
<g/>
,	SYM.Pun.Comma	,-x
hatte	VFIN.Aux.1.Sg.Past.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
meine	PRO.Poss.Attr.Acc.Sg.Fem	meine-p
Bearbeitung	N.Reg.Acc.Sg.Fem	Bearbeitung-n
bis	APPR	bis-i
dahin	PROADV.Dem	dahin-x
auf	APPR	auf-i
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
Rechnern	N.Reg.Dat.Pl.Masc	Rechner-n
erledigt	VPP.Full.Psp	erledigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zu	APPR	zu-i
diesem	PRO.Dem.Attr.Dat.Sg.Masc	diese-p
Zeitpunkt	N.Reg.Dat.Sg.Masc	Zeitpunkt-n
begann	VFIN.Full.3.Sg.Past.Ind	beginnen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
GNU	N.Name.Acc.Sg.Fem	GNU-n
Emacs	N.Name.*.*.*	Emacs-n
nutzen	VINF.Full	nutzen-v
zu	PART.Zu	zu-x
wollen	VINF.Mod	wollen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
die	ART.Def.Acc.Sg.Fem	die-x
Frage	N.Reg.Acc.Sg.Fem	Frage-n
aufwarf	VFIN.Full.3.Sg.Past.Ind	aufwerfen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
der	ART.Def.Nom.Sg.Masc	die-x
Vertrieb	N.Reg.Nom.Sg.Masc	Vertrieb-n
aussehen	VINF.Full	aussehen-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Natürlich	ADV	natürlich-a
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
von	APPR	von-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
anonymen	ADJA.Pos.Dat.Sg.Masc	anonym-j
FTP-Server	N.Reg.Dat.Sg.Masc	FTP-Server-n
des	ART.Def.Gen.Sg.Neut	die-x
MIT	N.Name.Gen.Sg.Neut	MIT-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nutzte	VFIN.Full.1.Sg.Past.Ind	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
abrufbar	ADJD.Pos	abrufbar-j
(	SYM.Paren.Left	(-x
<g/>
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Rechner	N.Reg.Nom.Sg.Masc	Rechner-n
<g/>
,	SYM.Pun.Comma	,-x
prep	FM	prep-x
<g/>
.	SYM.Pun.Sent	.-x
<g/>
ia	FM	ia-x
<g/>
.	SYM.Pun.Sent	.-x
<g/>
mit	PART.Verb	mit-x
<g/>
.	SYM.Pun.Sent	.-x
<g/>
edu	N.Name.Nom.Sg.*	edu-n
<g/>
,	SYM.Pun.Comma	,-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
daher	PROADV.Dem	daher-x
zur	APPRART.Dat.Sg.Fem	zu-i
wichtigsten	ADJA.Sup.Dat.Sg.Fem	wichtig-j
FTP-Vertriebsseite	N.Reg.Dat.Sg.Fem	FTP-Vertriebsseite-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Als	CONJ.SubFin	als-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
ein	ART.Indef.*.*.*	eine-x
paar	PRO.Indef.Attr.*.*.*	paar-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
später	ADJD.Comp	später-j
stillgelegt	VPP.Full.Psp	stilllegen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
transferierten	VFIN.Full.1.Pl.Past.Ind	transferieren-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
auf	APPR	auf-i
unseren	PRO.Poss.Attr.Acc.Sg.Masc	unsre-p
neuen	ADJA.Pos.Acc.Sg.Masc	neu-j
FTP-Server	N.Reg.Acc.Sg.Masc	FTP-Server-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
damals	ADV	damals-a
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
viele	PRO.Indef.Attr.Nom.Pl.*	viele-p
Interessierte	N.Reg.Nom.Pl.*	Interessierte-n
noch	ADV	noch-a
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Internetzugang	N.Reg.Acc.Sg.Masc	Internetzugang-n
und	CONJ.Coord	und-c
konnten	VFIN.Mod.3.Pl.Past.Ind	können-v
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Kopie	N.Reg.Acc.Sg.Fem	Kopie-n
per	APPR	per-i
FTP	N.Name.Dat.Sg.*	FTP-n
abrufen	VINF.Full	abrufen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Also	ADV	also-a
stellte	VFIN.Full.3.Sg.Past.Ind	stellen-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
die	ART.Def.Nom.Sg.Fem	die-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
sagen	VINF.Full	sagen-v
würde	VFIN.Aux.1.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
hätte	VFIN.Aux.1.Sg.Past.Subj	haben-v
sagen	VINF.Full	sagen-v
können	VINF.Mod	können-v
<g/>
:	SYM.Pun.Colon	:-x
"	SYM.Quot.Left	"-x
<g/>
Finden	VFIN.Full.3.Pl.Pres.Ind	finden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Freund	N.Reg.Acc.Sg.Masc	Freund-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
im	APPRART.Dat.Sg.Neut	in-i
Netz	N.Reg.Dat.Sg.Neut	Netz-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
und	CONJ.Coord	und-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Kopie	N.Reg.Nom.Sg.Fem	Kopie-n
für	APPR	für-i
Sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
machen	VINF.Full	machen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
Oder	CONJ.Coord	oder-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
hätte	VFIN.Aux.1.Sg.Past.Subj	haben-v
gemacht	VPP.Full.Psp	machen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
ursprünglichen	ADJA.Pos.Dat.Sg.Masc	ursprünglich-j
PDP-10	N.Reg.Dat.Sg.Masc	PDP-10-n
Emacs	N.Name.Gen.Sg.*	Emacs-n
praktizierte	VFIN.Full.3.Sg.Past.Ind	praktizieren-v
<g/>
:	SYM.Pun.Colon	:-x
"	SYM.Quot.Left	"-x
<g/>
Übersenden	N.Reg.Nom.Pl.Fem	Übersenden-n
Sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Magnetband	N.Reg.Acc.Sg.Neut	Magnetband-n
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
adressierten	ADJA.Pos.Dat.Sg.Masc	adressiert-j
und	CONJ.Coord	und-c
frankierten	ADJA.Pos.Dat.Sg.Masc	frankiert-j
Rückumschlag	N.Reg.Dat.Sg.Masc	Rückumschlag-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
sende	VFIN.Full.1.Sg.Pres.Ind	senden-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mit	APPR	mit-i
Emacs	N.Reg.Dat.Pl.Masc	Emacs-n
darauf	PROADV.Dem	darauf-x
zurück	PART.Verb	zurück-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
Aber	CONJ.Coord	aber-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
hatte	VFIN.Aux.1.Sg.Past.Ind	haben-v
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Anstellung	N.Reg.Acc.Sg.Fem	Anstellung-n
und	CONJ.Coord	und-c
suchte	VFIN.Full.1.Sg.Past.Ind	suchen-v
nach	APPR	nach-i
Wegen	N.Reg.Dat.Pl.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Also	ADV	also-a
kündigte	VFIN.Full.3.Sg.Past.Ind	kündigen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
an	PART.Verb	an-x
<g/>
,	SYM.Pun.Comma	,-x
jedem	PRO.Indef.Subst.Dat.Sg.*	jede-p
gegen	APPR	gegen-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gebühr	N.Reg.Acc.Sg.Fem	Gebühr-n
von	APPR	von-i
150	CARD	[number]-m
US-Dollar	N.Reg.*.*.Masc	US-Dollar-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
Magnetband	N.Reg.Acc.Sg.Neut	Magnetband-n
zu	PART.Zu	zu-x
senden	VINF.Full	senden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
begann	VFIN.Full.1.Sg.Past.Ind	beginnen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
geschäftlichen	ADJA.Pos.Acc.Sg.Masc	geschäftlich-j
Vertrieb	N.Reg.Acc.Sg.Masc	Vertrieb-n
mit	APPR	mit-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
Vorläufer	N.Reg.Dat.Sg.Masc	Vorläufer-n
der	ART.Def.Gen.Pl.Neut	die-x
Unternehmen	N.Reg.Gen.Pl.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
heute	ADV	heute-a
ganze	ADJA.Pos.Nom.Sg.Fem	ganz-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Name.Nom.Pl.Fem	Linux-Distributionen-n
verbreiten	VINF.Full	verbreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
für	APPR	für-i
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
Benutzer	N.Reg.Acc.Sg.Masc	Benutzer-n
frei	PART.Verb	frei-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
die	ART.Def.Acc.Pl.Fem	die-x
Hände	N.Reg.Acc.Pl.Fem	Hand-n
des	ART.Def.Gen.Sg.Masc	die-x
Autors	N.Reg.Gen.Sg.Masc	Autor-n
verlässt	VFIN.Full.3.Sg.Pres.Ind	verlassen-v
<g/>
,	SYM.Pun.Comma	,-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
nicht	PART.Neg	nicht-x
notwendigerweise	ADV	notwendigerweise-a
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
für	APPR	für-i
jedermann	N.Reg.Acc.Sg.Masc	jedermann-n
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
sein	VINF.Aux	sein-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Kopie	N.Reg.Acc.Sg.Fem	Kopie-n
davon	PROADV.Dem	davon-x
besitzen	VFIN.Full.3.Pl.Pres.Ind	besitzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Public-Domain-Software	N.Reg.Nom.Sg.Fem	Public-Domain-Software-n
(	SYM.Paren.Left	(-x
<g/>
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
nicht	PART.Neg	nicht-x
dem	ART.Def.Dat.Sg.Neut	die-x
Urheberrecht	N.Reg.Dat.Sg.Neut	Urheberrecht-n
unterliegt	VFIN.Full.3.Sg.Pres.Ind	unterliegen-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
[	SYM.Paren.Left	[-x
<g/>
*	SYM.Other.Aster	*-x
<g/>
]	SYM.Paren.Right	]-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
jeder	PRO.Indef.Subst.Nom.Sg.Masc	jede-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
modifizierte	ADJA.Pos.Acc.Sg.Fem	modifiziert-j
Version	N.Reg.Acc.Sg.Fem	Version-n
davon	PROADV.Dem	davon-x
erstellen	VINF.Full	erstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ebenfalls	ADV	ebenfalls-a
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
viele	PRO.Indef.Attr.Nom.Pl.Neut	viele-p
freie	ADJA.Pos.Nom.Pl.Neut	frei-j
Programme	N.Reg.Nom.Pl.Neut	Programm-n
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Copyright	N.Reg.Dat.Sg.Neut	Copyright-n
versehen	VPP.Full.Psp	versehen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
unter	APPR	unter-i
einfachen	ADJA.Pos.Dat.Pl.Fem	einfach-j
freizügigen	ADJA.Pos.Dat.Pl.Fem	freizügig-j
Lizenzen	N.Reg.Dat.Pl.Fem	Lizenz-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
proprietäre	ADJA.Pos.Acc.Pl.Fem	proprietär-j
modifizierte	ADJA.Pos.Acc.Pl.Fem	modifiziert-j
Versionen	N.Reg.Acc.Pl.Fem	Version-n
ermöglichen	VFIN.Full.3.Pl.Pres.Ind	ermöglichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
paradigmatische	ADJA.Pos.Nom.Sg.Neut	paradigmatisch-j
Beispiel	N.Reg.Nom.Sg.Neut	Beispiel-n
dieses	PRO.Dem.Attr.Gen.Sg.Neut	diese-p
Problems	N.Reg.Gen.Sg.Neut	Problem-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
X	SYM.Other.XY	X-x
Window	FM	Window-x
System	FM	System-x
(	SYM.Paren.Left	(-x
<g/>
X11	N.Name.Nom.Sg.*	X11-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Am	APPRART.Dat.Sg.Neut	an-i
MIT	N.Name.Dat.Sg.Neut	MIT-n
entwickelt	VPP.Full.Psp	entwickeln-v
und	CONJ.Coord	und-c
als	APPR	als-i
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
freizügigen	ADJA.Pos.Dat.Sg.Fem	freizügig-j
Lizenz	N.Reg.Dat.Sg.Fem	Lizenz-n
freigegeben	VPP.Full.Psp	freigeben-v
<g/>
,	SYM.Pun.Comma	,-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
bald	ADV	bald-a
von	APPR	von-i
verschiedenen	ADJA.Pos.Dat.Pl.Fem	verschieden-j
Rechnerfirmen	N.Reg.Dat.Pl.Fem	Rechnerfirma-n
adaptiert	VPP.Full.Psp	adaptieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
fügten	VFIN.Full.3.Pl.Past.Ind	fügen-v
X11	N.Name.Nom.Sg.*	X11-n
nur	ADV	nur-a
in	APPR	in-i
binärer	ADJA.Pos.Dat.Sg.Fem	binär-j
Form	N.Reg.Dat.Sg.Fem	Form-n
ihren	PRO.Poss.Attr.Acc.Pl.Masc	ihre-p
proprietären	ADJA.Pos.Acc.Pl.Masc	proprietär-j
Unix-Systemen	N.Reg.Acc.Pl.Neut	Unix-Systemen-n
hinzu	PART.Verb	hinzu-x
-	SYM.Pun.Hyph	--x
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Vertraulichkeitsvereinbarung	N.Reg.Dat.Sg.Fem	Vertraulichkeitsvereinbarung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
X11-Kopien	N.Reg.Nom.Pl.Fem	X11-Kopie-n
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
wie	CONJ.Comp	wie-c
Unix	N.Name.Nom.Sg.*	Unix-n
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
mehr	ADV	mehr-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
von	APPR	von-i
X11	N.Name.Dat.Sg.*	X11-n
betrachteten	VFIN.Full.3.Pl.Past.Subj	betrachten-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
nicht	PART.Neg	nicht-x
als	APPR	als-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Problem	N.Reg.Acc.Sg.Neut	Problem-n
-	SYM.Pun.Hyph	--x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
erwarteten	VFIN.Full.3.Pl.Past.Ind	erwarten-v
und	CONJ.Coord	und-c
beabsichtigten	VFIN.Full.3.Pl.Past.Subj	beabsichtigen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
sogar	ADV	sogar-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
nicht	PART.Neg	nicht-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
nur	ADV	nur-a
Erfolg	N.Reg.Nom.Sg.Masc	Erfolg-n
<g/>
,	SYM.Pun.Comma	,-x
definiert	ADJD.Pos	definiert-j
als	CONJ.Comp	als-c
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
habend	ADJD.Pos	habend-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
kümmerte	VFIN.Full.3.Sg.Past.Ind	kümmern-v
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
nur	ADV	nur-a
zahlreich	ADJD.Pos	zahlreich-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
führte	VFIN.Full.3.Sg.Past.Ind	führen-v
zu	APPR	zu-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
paradoxen	ADJA.Pos.Dat.Sg.Fem	paradox-j
Situation	N.Reg.Dat.Sg.Fem	Situation-n
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
zwei	CARD	zwei-m
unterschiedliche	ADJA.Pos.Acc.Pl.Fem	unterschiedlich-j
Sichtweisen	N.Reg.Acc.Pl.Fem	Sichtweise-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Maß	N.Reg.Acc.Sg.Neut	Maß-n
an	APPR	an-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
messen	VINF.Full	messen-v
<g/>
,	SYM.Pun.Comma	,-x
verschiedene	ADJA.Pos.Nom.Pl.Fem	verschieden-j
Antworten	N.Reg.Nom.Pl.Fem	Antwort-n
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
Frage	N.Reg.Acc.Sg.Fem	Frage-n
ergaben	VFIN.Full.3.Pl.Past.Ind	ergeben-v
<g/>
,	SYM.Pun.Comma	,-x
"	SYM.Quot.Left	"-x
<g/>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
frei	ADJD.Pos	frei-j
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
Würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
nach	APPR	nach-i
den	ART.Def.Dat.Pl.Fem	die-x
Vertriebsbedingungen	N.Reg.Dat.Pl.Fem	Vertriebsbedingung-n
des	ART.Def.Gen.Sg.Neut	die-x
MIT	N.Name.Gen.Sg.Neut	MIT-n
beurteilen	VINF.Full	beurteilen-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
X11	N.Name.Gen.Sg.*	X11-n
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
gemessen	VPP.Full.Psp	messen-v
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
des	ART.Def.Gen.Sg.Masc	die-x
durchschnittlichen	ADJA.Pos.Gen.Sg.Masc	durchschnittlich-j
X11-Benutzer	N.Reg.Gen.Pl.Masc	X11-Benutzer-n
müsste	VFIN.Mod.3.Sg.Past.Subj	müssen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
X11-Benutzer	N.Reg.Nom.Pl.Masc	X11-Benutzer-n
führten	VFIN.Full.3.Pl.Past.Ind	führen-v
die	ART.Def.Acc.Pl.Fem	die-x
proprietären	ADJA.Pos.Acc.Pl.Fem	proprietär-j
Versionen	N.Reg.Acc.Pl.Fem	Version-n
aus	PART.Verb	aus-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
mit	APPR	mit-i
unfreien	ADJA.Pos.Dat.Pl.Neut	unfrei-j
Unix-Systemen	N.Reg.Dat.Pl.Neut	Unix-System-n
kamen	VFIN.Full.3.Pl.Past.Ind	kommen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Sg.Fem	die-x
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Version	N.Reg.Acc.Sg.Fem	Version-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Copyleft	N.Name.Nom.Sg.*	Copyleft-n
und	CONJ.Coord	und-c
die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.Fem	GPL-n
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
den	ART.Def.Dat.Pl.Masc	die-x
Benutzern	N.Reg.Dat.Pl.Masc	Benutzer-n
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
beliebt	ADJD.Pos	beliebt-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Also	ADV	also-a
mussten	VFIN.Mod.1.Pl.Past.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Vertriebsbedingungen	N.Reg.Acc.Pl.Fem	Vertriebsbedingung-n
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.*	die-p
verhindern	VINF.Full	verhindern-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
GNU-Software	N.Reg.Acc.Pl.Neut	GNU-Software-n
in	APPR	in-i
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Software	N.Reg.Acc.Sg.Fem	Software-n
umzuwandeln	VINF.Full.zu	umwandeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Methode	N.Reg.Nom.Sg.Fem	Methode-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
verwenden	VFIN.Full.1.Pl.Pres.Ind	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
Copyleft	N.Name.Nom.Sg.*	Copyleft-n
genannt	VPP.Full.Psp	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
3	CARD	3-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Copyleft	N.Name.Nom.Sg.*	Copyleft-n
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
das	ART.Def.Acc.Sg.Neut	die-x
Urheberrecht	N.Reg.Acc.Sg.Neut	Urheberrecht-n
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
wendet	VFIN.Full.3.Sg.Pres.Ind	wenden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
auf	APPR	auf-i
gegenteilige	ADJA.Pos.Acc.Sg.Fem	gegenteilig-j
Weise	N.Reg.Acc.Sg.Fem	Weise-n
des	ART.Def.Gen.Sg.Masc	die-x
üblichen	ADJA.Pos.Gen.Sg.Masc	üblich-j
Zwecks	N.Reg.Gen.Sg.Masc	Zweck-n
an	PART.Verb	an-x
<g/>
:	SYM.Pun.Colon	:-x
statt	APPR	statt-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Mittel	N.Reg.Dat.Sg.Neut	Mittel-n
zur	APPRART.Dat.Sg.Fem	zu-i
Beschränkung	N.Reg.Dat.Sg.Fem	Beschränkung-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Mittel	N.Reg.Dat.Sg.Neut	Mittel-n
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
frei	ADJD.Pos	frei-j
bleibt	VFIN.Full.3.Sg.Pres.Ind	bleiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Kerngedanke	N.Reg.Nom.Sg.Masc	Kerngedanke-n
von	APPR	von-i
Copyleft	N.Name.Dat.Sg.*	Copyleft-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
jedem	PRO.Indef.Subst.Dat.Sg.*	jede-p
die	ART.Def.Acc.Sg.Fem	die-x
Berechtigung	N.Reg.Acc.Sg.Fem	Berechtigung-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
ausführen	VINF.Full	ausführen-v
<g/>
,	SYM.Pun.Comma	,-x
kopieren	VINF.Full	kopieren-v
<g/>
,	SYM.Pun.Comma	,-x
modifizieren	VINF.Full	modifizieren-v
und	CONJ.Coord	und-c
modifizierte	ADJA.Pos.Acc.Pl.Fem	modifiziert-j
Versionen	N.Reg.Acc.Pl.Fem	Version-n
verbreiten	VINF.Full	verbreiten-v
zu	PART.Zu	zu-x
dürfen	VINF.Mod	dürfen-v
-	SYM.Pun.Hyph	--x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Sg.Fem	die-x
Berechtigung	N.Reg.Acc.Sg.Fem	Berechtigung-n
Beschränkungen	N.Reg.Acc.Pl.Fem	Beschränkung-n
hinzuzufügen	VINF.Full.zu	hinzufügen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Damit	PROADV.Dem	damit-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
entscheidende	ADJA.Pos.Nom.Pl.Fem	entscheidend-j
Freiheiten	N.Reg.Nom.Pl.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
definieren	VINF.Full	definieren-v
<g/>
,	SYM.Pun.Comma	,-x
an	APPR	an-i
jedermann	PRO.Indef.Subst.*.*.*	jedermann-p
garantiert	VFIN.Full.3.Sg.Pres.Ind	garantieren-v
<g/>
,	SYM.Pun.Comma	,-x
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Kopie	N.Reg.Acc.Sg.Fem	Kopie-n
besitzt	VFIN.Full.3.Sg.Pres.Ind	besitzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
unveräußerliche	ADJA.Pos.Acc.Pl.Neut	unveräußerlich-j
Rechte	N.Reg.Acc.Pl.Neut	Recht-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
effektives	ADJA.Pos.Acc.Sg.Neut	effektiv-j
Copyleft	N.Reg.Acc.Sg.Neut	Copyleft-n
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
modifizierte	ADJA.Pos.Nom.Pl.Fem	modifiziert-j
Versionen	N.Reg.Nom.Pl.Fem	Version-n
ebenfalls	ADV	ebenfalls-a
frei	ADJD.Pos	frei-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dadurch	PROADV.Dem	dadurch-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
sichergestellt	VPP.Full.Psp	sicherstellen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
abgeleitete	ADJA.Pos.Nom.Sg.Neut	abgeleitet-j
Werk	N.Reg.Nom.Sg.Neut	Werk-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
verfügbar	ADJD.Pos	verfügbar-j
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
veröffentlicht	VPP.Full.Psp	veröffentlichen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
als	CONJ.Comp	als-c
solche	PRO.Indef.Subst.Nom.Pl.Fem	solche-p
arbeiten	VFIN.Full.3.Pl.Pres.Ind	arbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
freiwillig	ADJD.Pos	freiwillig-j
GNU-Software	N.Reg.Acc.Pl.Neut	GNU-Software-n
verbessern	VFIN.Full.3.Pl.Pres.Ind	verbessern-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	ART.Def.Nom.Sg.Neut	die-x
Copyleft	N.Reg.Nom.Sg.Neut	Copyleft-n
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
ihre	PRO.Poss.Attr.Acc.Pl.Masc	ihre-p
Arbeitgeber	N.Reg.Acc.Pl.Masc	Arbeitgeber-n
davon	PROADV.Dem	davon-x
abhält	VFIN.Full.3.Sg.Pres.Ind	abhalten-v
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
:	SYM.Pun.Colon	:-x
"	SYM.Quot.Left	"-x
<g/>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
diese	PRO.Dem.Attr.Acc.Pl.Fem	diese-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
austauschen	VINF.Full	austauschen-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.*.*	sie-p
nutzen	VINF.Full	nutzen-v
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Version	N.Reg.Acc.Sg.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
daraus	PROADV.Dem	daraus-x
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Anforderung	N.Reg.Nom.Sg.Fem	Anforderung-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
frei	ADJD.Pos	frei-j
sein	VINF.Aux	sein-v
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
unerlässlich	ADJD.Pos	unerlässlich-j
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
für	APPR	für-i
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
Programmnutzer	N.Reg.Acc.Sg.Masc	Programmnutzer-n
gewähren	VINF.Full	gewähren-v
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
X11	N.Name.Acc.Sg.*	X11-n
privatisiert	VPP.Full.Psp	privatisieren-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
machten	VFIN.Full.3.Pl.Past.Ind	machen-v
für	APPR	für-i
gewöhnlich	ADJD.Pos	gewöhnlich-j
einige	PRO.Indef.Attr.Acc.Pl.Fem	einige-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
auf	APPR	auf-i
ihre	PRO.Poss.Attr.Acc.Pl.Neut	ihre-p
Systeme	N.Reg.Acc.Pl.Neut	System-n
und	CONJ.Coord	und-c
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Hardware	N.Reg.Acc.Sg.Fem	Hardware-n
zu	PART.Zu	zu-x
portieren	VINF.Full	portieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
Änderungen	N.Reg.Nom.Pl.Fem	Änderung-n
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
im	APPRART.Dat.Sg.Masc	in-i
Vergleich	N.Reg.Dat.Sg.Masc	Vergleich-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
großen	ADJA.Pos.Dat.Sg.Masc	groß-j
Umfang	N.Reg.Dat.Sg.Masc	Umfang-n
von	APPR	von-i
X11	N.Name.Dat.Sg.*	X11-n
gering	ADJD.Pos	gering-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
nicht	PART.Neg	nicht-x
trivial	ADJD.Pos	trivial-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
gemachte	ADJA.Pos.Nom.Pl.Fem	gemacht-j
Änderungen	N.Reg.Nom.Pl.Fem	Änderung-n
Vorwand	N.Reg.Dat.Sg.Masc	Vorwand-n
wären	VFIN.Aux.3.Pl.Past.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
den	ART.Def.Dat.Pl.Masc	die-x
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
versagen	VINF.Full	versagen-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
für	APPR	für-i
jedermann	PRO.Indef.Subst.*.*.*	jedermann-p
einfach	ADJD.Pos	einfach-j
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Masc	die-x
Vorteile	N.Reg.Acc.Pl.Masc	Vorteil-n
als	APPR	als-i
Vorwand	N.Reg.Acc.Sg.Masc	Vorwand-n
auszunutzen	VINF.Full.zu	ausnutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
ähnliches	ADJA.Pos.Nom.Sg.Neut	ähnlich-j
Problem	N.Reg.Nom.Sg.Neut	Problem-n
betrifft	VFIN.Full.3.Sg.Pres.Ind	betreffen-v
die	ART.Def.Acc.Sg.Fem	die-x
Kombination	N.Reg.Acc.Sg.Fem	Kombination-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
freien	ADJA.Pos.Gen.Sg.Neut	frei-j
Programms	N.Reg.Gen.Sg.Neut	Programm-n
mit	APPR	mit-i
unfreiem	ADJA.Pos.Dat.Sg.Masc	unfrei-j
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Solch	PRO.Indef.Attr.*.*.*	solch-p
eine	ART.Indef.Nom.Sg.Fem	eine-x
Kombination	N.Reg.Nom.Sg.Fem	Kombination-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
zwangsläufig	ADJD.Pos	zwangsläufig-j
unfrei	ADJD.Pos	unfrei-j
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Welche	PRO.Inter.Attr.Acc.Pl.Fem	welche-p
Freiheiten	N.Reg.Acc.Pl.Fem	Freiheit-n
auch	ADV	auch-a
immer	ADV	immer-a
dem	ART.Def.Dat.Sg.Masc	die-x
unfreien	ADJA.Pos.Dat.Sg.Masc	unfrei-j
Teil	N.Reg.Dat.Sg.Masc	Teil-n
fehlt	VFIN.Full.3.Sg.Pres.Ind	fehlen-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
dem	ART.Def.Dat.Sg.Neut	die-x
Ganzen	N.Reg.Dat.Sg.Neut	Ganze-n
auch	ADV	auch-a
fehlen	VINF.Full	fehlen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Solche	PRO.Indef.Attr.Acc.Pl.Fem	solche-p
Kombinationen	N.Reg.Acc.Pl.Fem	Kombination-n
zu	PART.Zu	zu-x
erlauben	VINF.Full	erlauben-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
Loch	N.Reg.Acc.Sg.Neut	Loch-n
öffnen	VINF.Full	öffnen-v
<g/>
,	SYM.Pun.Comma	,-x
groß	ADJD.Pos	groß-j
genug	ADV	genug-a
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
Schiff	N.Reg.Acc.Sg.Neut	Schiff-n
darin	PROADV.Dem	darin-x
zu	PART.Zu	zu-x
versenken	VINF.Full	versenken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Daher	PROADV.Dem	daher-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
unabdingbare	ADJA.Pos.Nom.Sg.Fem	unabdingbar-j
Anforderung	N.Reg.Nom.Sg.Fem	Anforderung-n
für	APPR	für-i
Copyleft	N.Name.Acc.Sg.*	Copyleft-n
<g/>
,	SYM.Pun.Comma	,-x
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Loch	N.Reg.Acc.Sg.Neut	Loch-n
zu	PART.Zu	zu-x
stopfen	VINF.Full	stopfen-v
<g/>
:	SYM.Pun.Colon	:-x
etwas	ADV	etwas-a
einem	ART.Indef.Dat.Sg.Neut	eine-x
mit	APPR	mit-i
Copyleft	N.Name.Dat.Sg.*	Copyleft-n
versehenem	ADJA.Pos.Dat.Sg.Neut	versehen-j
Programm	N.Reg.Dat.Sg.Neut	Programm-n
hinzuzufügen	VINF.Full.zu	hinzufügen-v
oder	CONJ.Coord	oder-c
zu	PART.Zu	zu-x
kombinieren	VINF.Full	kombinieren-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
so	ADV	so-a
erfolgen	VINF.Full	erfolgen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
daraus	PROADV.Dem	daraus-x
größere	ADJA.Comp.Nom.Sg.Fem	groß-j
kombinierte	ADJA.Pos.Nom.Sg.Fem	kombiniert-j
Version	N.Reg.Nom.Sg.Fem	Version-n
ebenfalls	ADV	ebenfalls-a
frei	ADJD.Pos	frei-j
und	CONJ.Coord	und-c
mit	APPR	mit-i
Copyleft	N.Name.Dat.Sg.*	Copyleft-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
konkrete	ADJA.Pos.Nom.Sg.Fem	konkret-j
Umsetzung	N.Reg.Nom.Sg.Fem	Umsetzung-n
des	ART.Def.Gen.Sg.*	die-x
Copyleft	N.Name.Gen.Sg.*	Copyleft-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
für	APPR	für-i
die	ART.Def.Acc.Pl.*	die-x
meiste	PRO.Indef.Attr.Acc.Pl.*	meiste-p
GNU-Software	N.Reg.Acc.Pl.*	GNU-Software-n
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
General	FM	General-x
Public	FM	Public-x
License	FM	License-x
<g/>
,	SYM.Pun.Comma	,-x
kurz	ADJD.Pos	kurz-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.Fem	GPL-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
auch	ADV	auch-a
noch	ADV	noch-a
andere	ADJA.Pos.Nom.Pl.Fem	ander-j
Arten	N.Reg.Nom.Pl.Fem	Art-n
des	ART.Def.Gen.Sg.*	die-x
Copyleft	N.Name.Gen.Sg.*	Copyleft-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
unter	APPR	unter-i
bestimmten	ADJA.Pos.Dat.Pl.Masc	bestimmt-j
Umständen	N.Reg.Dat.Pl.Masc	Umstand-n
verwendet	VPP.Full.Psp	verwenden-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU-Handbücher	N.Reg.Nom.Pl.Neut	GNU-Handbuch-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
ebenfalls	ADV	ebenfalls-a
mit	APPR	mit-i
Copyleft	N.Name.Dat.Sg.*	Copyleft-n
versehen	VPP.Full.Psp	versehen-v
<g/>
,	SYM.Pun.Comma	,-x
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
aber	ADV	aber-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
viel	ADV	viel-a
einfacheres	ADJA.Comp.Nom.Sg.Neut	einfach-j
Copyleft	N.Reg.Nom.Sg.Neut	Copyleft-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
die	ART.Def.Nom.Sg.Fem	die-x
Komplexität	N.Reg.Nom.Sg.Fem	Komplexität-n
der	ART.Def.Gen.Sg.Fem	die-x
GNU	N.Name.Gen.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.Fem	GPL-n
für	APPR	für-i
Handbücher	N.Reg.Acc.Pl.Neut	Handbuch-n
nicht	PART.Neg	nicht-x
notwendig	ADJD.Pos	notwendig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
4	CARD	4-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Nom.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
das	ART.Def.Nom.Sg.Neut	die-x
Interesse	N.Reg.Nom.Sg.Neut	Interesse-n
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Nutzung	N.Reg.Dat.Sg.Fem	Nutzung-n
von	APPR	von-i
Emacs	N.Reg.Dat.Pl.Masc	Emacs-n
wuchs	VFIN.Full.3.Sg.Past.Ind	wachsen-v
<g/>
,	SYM.Pun.Comma	,-x
andere	PRO.Indef.Attr.Nom.Pl.Fem	andere-p
Personen	N.Reg.Nom.Pl.Fem	Person-n
am	APPRART.Dat.Sg.Masc	an-i
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
beteiligt	VPP.Full.Psp	beteiligen-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
beschlossen	VPP.Full.Psp	beschließen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
Zeit	N.Reg.Nom.Sg.Fem	Zeit-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
erneut	ADJD.Pos	erneut-j
nach	APPR	nach-i
finanziellen	ADJA.Pos.Dat.Pl.Neut	finanziell-j
Mitteln	N.Reg.Dat.Pl.Neut	Mittel-n
zu	PART.Zu	zu-x
suchen	VINF.Full	suchen-v
<g/>
,	SYM.Pun.Comma	,-x
schufen	VFIN.Full.1.Pl.Past.Ind	schaffen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
1985	CARD	[number]-m
die	ART.Def.Acc.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Acc.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
(	SYM.Paren.Left	(-x
<g/>
FSF	N.Name.Nom.Sg.*	FSF-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
gemeinnützige	ADJA.Pos.Acc.Sg.Fem	gemeinnützig-j
Stiftung	N.Reg.Acc.Sg.Fem	Stiftung-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Freie-Software-Förderung	N.Reg.Acc.Sg.Fem	Freie-Software-Förderung-n
und	CONJ.Coord	und-c
-	SYM.Pun.Hyph	--x
<g/>
Entwicklung	N.Reg.Nom.Sg.Fem	Entwicklung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
FSF	N.Name.Nom.Sg.Fem	FSF-n
übernahm	VFIN.Full.3.Sg.Past.Ind	übernehmen-v
auch	ADV	auch-a
das	ART.Def.Acc.Sg.Neut	die-x
Vertriebsgeschäft	N.Reg.Acc.Sg.Neut	Vertriebsgeschäft-n
der	ART.Def.Gen.Pl.Neut	die-x
Emacs-Magnetbänder	N.Reg.Gen.Pl.Neut	Emacs-Magnetband-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Später	ADJD.Comp	spät-j
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
durch	APPR	durch-i
Hinzufügen	N.Reg.Acc.Sg.Neut	Hinzufügen-n
weiterer	ADJA.Comp.Gen.Pl.Fem	weit-j
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
zum	APPRART.Dat.Sg.Neut	zu-i
Magnetband	N.Reg.Dat.Sg.Neut	Magnetband-n
(	SYM.Paren.Left	(-x
<g/>
sowohl	CONJ.Coord	sowohl-c
GNU	N.Name.Nom.Sg.*	GNU-n
als	CONJ.Coord	als-c
auch	ADV	auch-a
GNU-fremder	N.Name.Nom.Sg.*	GNU-fremder-n
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
natürlich	ADV	natürlich-a
durch	APPR	durch-i
den	ART.Def.Acc.Sg.Masc	die-x
Verkauf	N.Reg.Acc.Sg.Masc	Verkauf-n
freier	ADJA.Pos.Gen.Pl.Neut	frei-j
Handbücher	N.Reg.Gen.Pl.Neut	Handbuch-n
erweitert	VPP.Full.Psp	erweitern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
größte	ADJA.Sup.Nom.Sg.Masc	groß-j
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Pl.Fem	die-x
Einnahmen	N.Reg.Gen.Pl.Fem	Einnahme-n
der	ART.Def.Gen.Sg.Fem	die-x
FSF	N.Name.Gen.Sg.Fem	FSF-n
kam	VFIN.Full.3.Sg.Past.Ind	kommen-v
aus	APPR	aus-i
den	ART.Def.Dat.Pl.Masc	die-x
Verkäufen	N.Reg.Dat.Pl.Masc	Verkauf-n
von	APPR	von-i
Kopien	N.Reg.Dat.Pl.Fem	Kopie-n
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
und	CONJ.Coord	und-c
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
damit	PROADV.Dem	damit-x
zusammenhängenden	ADJA.Pos.Dat.Pl.Masc	zusammenhängend-j
Diensten	N.Reg.Dat.Pl.Masc	Dienst-n
(	SYM.Paren.Left	(-x
<g/>
CD-ROMs	N.Reg.Dat.Pl.Fem	CD-ROM-n
mit	APPR	mit-i
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
oder	CONJ.Coord	oder-c
Binärdateien	N.Reg.Dat.Pl.Fem	Binärdatei-n
<g/>
,	SYM.Pun.Comma	,-x
schön	ADJD.Pos	schön-j
gedruckten	ADJA.Pos.Dat.Pl.Neut	gedruckt-j
Handbüchern	N.Reg.Dat.Pl.Neut	Handbuch-n
<g/>
,	SYM.Pun.Comma	,-x
alle	PRO.Indef.Subst.Nom.Pl.Neut	alle-p
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
weitergegeben	VPP.Full.Psp	weitergeben-v
und	CONJ.Coord	und-c
modifiziert	VPP.Full.Psp	modifizieren-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
Deluxe-Distributionen	N.Reg.Dat.Pl.Fem	Deluxe-Distribution-n
(	SYM.Paren.Left	(-x
<g/>
in	APPR	in-i
denen	PRO.Rel.Subst.Dat.Pl.Fem	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
ganze	ADJA.Pos.Acc.Sg.Fem	ganz-j
Softwaresammlung	N.Reg.Acc.Sg.Fem	Softwaresammlung-n
nach	APPR	nach-i
Wahl	N.Reg.Dat.Sg.Fem	Wahl-n
des	ART.Def.Gen.Sg.Masc	die-x
Kunden	N.Reg.Gen.Sg.Masc	Kunde-n
je	ADV	je-a
nach	APPR	nach-i
Plattform	N.Reg.Dat.Sg.Fem	Plattform-n
zusammenstellten	VFIN.Full.3.Pl.Past.Ind	zusammenstellen-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Noch	ADV	noch-a
heute	ADV	heute-a
vertreibt	VFIN.Full.3.Sg.Pres.Ind	vertreiben-v
die	ART.Def.Nom.Sg.Fem	die-x
FSF	N.Name.Nom.Sg.Fem	FSF-n
Handbücher	N.Reg.Acc.Pl.Neut	Handbuch-n
und	CONJ.Coord	und-c
andere	ADJA.Pos.Acc.Pl.Neut	ander-j
Utensilien	N.Reg.Acc.Pl.Neut	Utensil-n
<g/>
,	SYM.Pun.Comma	,-x
erhält	VFIN.Full.3.Sg.Pres.Ind	erhalten-v
aber	ADV	aber-a
den	ART.Def.Acc.Sg.Masc	die-x
Großteil	N.Reg.Acc.Sg.Masc	Großteil-n
ihrer	PRO.Poss.Attr.Gen.Pl.Neut	ihre-p
Mittel	N.Reg.Gen.Pl.Neut	Mittel-n
aus	APPR	aus-i
Mitgliedsbeiträgen	N.Reg.Dat.Pl.Masc	Mitgliedsbeitrag-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
der	ART.Def.Dat.Sg.Fem	die-x
FSF	N.Name.Dat.Sg.Fem	FSF-n
unter	APPR	unter-i
FSF.org	N.Name.Dat.Sg.Neut	FSF.org-n
beitreten	VINF.Full	beitreten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mitarbeiter	N.Reg.Nom.Pl.Masc	Mitarbeiter-n
der	ART.Def.Gen.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Gen.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Reihe	N.Reg.Acc.Sg.Fem	Reihe-n
von	APPR	von-i
GNU-Softwarepaketen	N.Reg.Dat.Pl.Neut	GNU-Softwarepaket-n
geschrieben	VPP.Full.Psp	schreiben-v
und	CONJ.Coord	und-c
betreut	VPP.Full.Psp	betreuen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zwei	CARD	zwei-m
beachtenswerte	ADJA.Pos.Nom.Pl.Neut	beachtenswert-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
und	CONJ.Coord	und-c
die	ART.Def.Nom.Sg.Fem	die-x
Eingabeaufforderung	N.Reg.Nom.Sg.Fem	Eingabeaufforderung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
von	APPR	von-i
jedem	PRO.Indef.Attr.Dat.Sg.Masc	jede-p
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
GNU	TRUNC.Noun	GNU-x
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
ausgeführten	ADJA.Pos.Dat.Sg.Neut	ausgeführt-j
Programm	N.Reg.Dat.Sg.Neut	Programm-n
genutzt	VPP.Full.Psp	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
kommunizieren	VINF.Full	kommunizieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
von	APPR	von-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Mitarbeiter	N.Reg.Dat.Sg.Masc	Mitarbeiter-n
der	ART.Def.Gen.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Gen.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
<g/>
,	SYM.Pun.Comma	,-x
Roland	N.Name.Nom.Sg.Masc	Roland-n
McGrath	N.Name.Nom.Sg.Masc	McGrath-n
<g/>
,	SYM.Pun.Comma	,-x
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
auf	APPR	auf-i
den	ART.Def.Dat.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Dat.Pl.Masc	meiste-p
GNU	N.Reg.Dat.Pl.Masc	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systemen	N.Reg.Dat.Pl.Neut	Linux-System-n
genutzte	ADJA.Pos.Nom.Sg.Masc	genutzt-j
Befehlszeileninterpreter	N.Reg.Nom.Sg.Masc	Befehlszeileninterpreter-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Bourne	N.Name.*.*.*	Bourne-n
Again	N.Name.*.*.*	Again-n
Shell	N.Name.Nom.Sg.*	Shell-n
(	SYM.Paren.Left	(-x
<g/>
BASH	N.Name.Nom.Sg.*	BASH-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
[	SYM.Paren.Left	[-x
<g/>
5	CARD	5-m
<g/>
]	SYM.Paren.Right	]-x
<g/>
,	SYM.Pun.Comma	,-x
entwickelt	VPP.Full.Psp	entwickeln-v
von	APPR	von-i
Brian	N.Name.Nom.Sg.Masc	Brian-n
Fox	N.Name.Dat.Sg.Masc	Fox-n
<g/>
,	SYM.Pun.Comma	,-x
einem	ART.Indef.Dat.Sg.Masc	eine-x
FSF-Mitarbeiter	N.Reg.Dat.Sg.Masc	FSF-Mitarbeiter-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
finanzierten	VFIN.Full.1.Pl.Past.Ind	finanzieren-v
die	ART.Def.Acc.Sg.Fem	die-x
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
dieser	PRO.Dem.Attr.Gen.Pl.Neut	diese-p
Programme	N.Reg.Gen.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
beim	APPRART.Dat.Sg.Masc	bei-i
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
um	APPR	um-i
Dienstprogramme	N.Reg.Acc.Pl.Neut	Dienstprogramm-n
oder	CONJ.Coord	oder-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
Entwicklungsumgebung	N.Reg.Acc.Sg.Fem	Entwicklungsumgebung-n
ging	VFIN.Full.3.Sg.Past.Ind	gehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unser	PRO.Poss.Attr.Nom.Sg.Neut	unsre-p
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
vollständiges	ADJA.Pos.Nom.Sg.Neut	vollständig-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Programme	N.Reg.Nom.Pl.Neut	Programm-n
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
für	APPR	für-i
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Ziel	N.Reg.Acc.Sg.Neut	Ziel-n
erforderlich	ADJD.Pos	erforderlich-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie-Software-Unterstützung	N.Reg.Nom.Sg.Fem	Freie-Software-Unterstützung-n
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Freie-Software-Philosophie	N.Reg.Nom.Sg.Fem	Freie-Software-Philosophie-n
lehnt	VFIN.Full.3.Sg.Pres.Ind	lehnen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
bestimmte	ADJA.Pos.Acc.Sg.Fem	bestimmt-j
weitverbreitete	ADJA.Pos.Acc.Sg.Fem	weitverbreitet-j
Geschäftspraxis	N.Reg.Acc.Sg.Fem	Geschäftspraxis-n
ab	PART.Verb	ab-x
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
gegen	APPR	gegen-i
das	ART.Def.Acc.Sg.Neut	die-x
Geschäft	N.Reg.Acc.Sg.Neut	Geschäft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Geschäfte	N.Reg.Nom.Pl.Neut	Geschäft-n
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
der	ART.Def.Gen.Pl.Masc	die-x
Nutzer	N.Reg.Gen.Pl.Masc	Nutzer-n
respektieren	VFIN.Full.3.Pl.Pres.Ind	respektieren-v
<g/>
,	SYM.Pun.Comma	,-x
wünschen	VFIN.Full.1.Pl.Pres.Ind	wünschen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
Erfolg	N.Reg.Acc.Sg.Masc	Erfolg-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Verkauf	N.Reg.Nom.Sg.Masc	Verkauf-n
von	APPR	von-i
Emacs-Kopien	N.Name.Dat.Sg.Neut	Emacs-Kopien-n
veranschaulicht	VFIN.Full.3.Sg.Pres.Ind	veranschaulichen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Art	N.Reg.Acc.Sg.Fem	Art-n
von	APPR	von-i
Freie-Software-Geschäft	N.Reg.Dat.Sg.Neut	Freie-Software-Geschäft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	CONJ.SubFin	als-c
die	ART.Def.Nom.Sg.Fem	die-x
FSF	N.Name.Nom.Sg.Fem	FSF-n
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Geschäft	N.Reg.Acc.Sg.Neut	Geschäft-n
übernahm	VFIN.Full.3.Sg.Past.Ind	übernehmen-v
<g/>
,	SYM.Pun.Comma	,-x
brauchte	VFIN.Full.3.Sg.Past.Ind	brauchen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
anderen	ADJA.Pos.Acc.Sg.Masc	ander-j
Weg	N.Reg.Acc.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
meinen	PRO.Poss.Attr.Acc.Sg.Masc	meine-p
Lebensunterhalt	N.Reg.Acc.Sg.Masc	Lebensunterhalt-n
zu	PART.Zu	zu-x
bestreiten	VINF.Full	bestreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
fand	VFIN.Full.1.Sg.Past.Ind	finden-v
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
im	APPRART.Dat.Sg.Neut	in-i
Anbieten	N.Reg.Dat.Sg.Neut	Anbieten-n
von	APPR	von-i
Dienstleistungen	N.Reg.Dat.Pl.Fem	Dienstleistung-n
in	APPR	in-i
Zusammenhang	N.Reg.Dat.Sg.Masc	Zusammenhang-n
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
freien	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
entwickelt	VPP.Full.Psp	entwickeln-v
hatte	VFIN.Aux.1.Sg.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
beinhaltete	VFIN.Full.3.Sg.Past.Ind	beinhalten-v
die	ART.Def.Nom.Sg.Fem	die-x
Unterweisung	N.Reg.Nom.Sg.Fem	Unterweisung-n
zu	APPR	zu-i
Themen	N.Reg.Dat.Pl.Neut	Thema-n
wie	CONJ.Comp	wie-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
beispielsweise	ADV	beispielsweise-a
GNU	N.Name.*.*.*	GNU-n
Emacs	N.Name.Acc.Sg.*	Emacs-n
programmiert	VFIN.Full.3.Sg.Pres.Ind	programmieren-v
und	CONJ.Coord	und-c
GCC	N.Name.Acc.Sg.*	GCC-n
anpasst	VFIN.Full.3.Sg.Pres.Ind	anpassen-v
und	CONJ.Coord	und-c
Softwareentwicklung	N.Reg.Nom.Sg.Fem	Softwareentwicklung-n
<g/>
,	SYM.Pun.Comma	,-x
hauptsächlich	ADJD.Pos	hauptsächlich-j
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
Portieren	VFIN.Full.3.Pl.Pres.Ind	portieren-v
von	APPR	von-i
GCC	N.Name.Dat.Sg.*	GCC-n
auf	APPR	auf-i
neue	ADJA.Pos.Acc.Pl.Fem	neu-j
Plattformen	N.Reg.Acc.Pl.Fem	Plattform-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heutzutage	ADV	heutzutage-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
jede	PRO.Indef.Attr.Nom.Sg.Fem	jede-p
Art	N.Reg.Nom.Sg.Fem	Art-n
von	APPR	von-i
Freie-Software-Geschäft	N.Reg.Dat.Sg.Neut	Freie-Software-Geschäft-n
von	APPR	von-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Reihe	N.Reg.Dat.Sg.Fem	Reihe-n
von	APPR	von-i
Unternehmen	N.Reg.Dat.Pl.Neut	Unternehmen-n
praktiziert	VPP.Full.Psp	praktizieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
vertreiben	VFIN.Full.3.Pl.Pres.Ind	vertreiben-v
Freie-Software-Sammlungen	N.Reg.Acc.Pl.Fem	Freie-Software-Sammlung-n
auf	APPR	auf-i
CD-ROM	N.Reg.Acc.Sg.Fem	CD-ROM-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Andere	PRO.Indef.Subst.Nom.Pl.*	andere-p
bieten	VFIN.Full.3.Pl.Pres.Ind	bieten-v
Unterstützung	N.Reg.Acc.Sg.Fem	Unterstützung-n
<g/>
,	SYM.Pun.Comma	,-x
angefangen	VPP.Full.Psp	anfangen-v
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Beantwortung	N.Reg.Dat.Sg.Fem	Beantwortung-n
von	APPR	von-i
Benutzerfragen	N.Reg.Dat.Pl.Fem	Benutzerfrage-n
<g/>
,	SYM.Pun.Comma	,-x
Beseitigung	N.Reg.Dat.Sg.Fem	Beseitigung-n
von	APPR	von-i
Programmfehlern	N.Reg.Dat.Pl.Masc	Programmfehler-n
<g/>
,	SYM.Pun.Comma	,-x
Hinzufügen	N.Reg.Dat.Sg.Neut	Hinzufügen-n
neuer	ADJA.Pos.Gen.Pl.Fem	neu-j
Programmfunktionen	N.Reg.Gen.Pl.Fem	Programmfunktion-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
fangen	VFIN.Full.1.Pl.Pres.Ind	fangen-v
sogar	ADV	sogar-a
an	APPR	an-i
Freie-Software-Unternehmen	N.Reg.Acc.Pl.Fem	Freie-Software-Unternehmen-n
zu	PART.Zu	zu-x
sehen	VINF.Full	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
aufgrund	APPR	aufgrund-i
neuer	ADJA.Pos.Gen.Pl.Neut	neu-j
Freie-Software-Produkte	N.Reg.Gen.Pl.Neut	Freie-Software-Produkt-n
gegründet	VPP.Full.Psp	gründen-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Passen	VFIN.Full.3.Pl.Pres.Ind	passen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
dennoch	ADV	dennoch-a
auf	PART.Verb	auf-x
<g/>
:	SYM.Pun.Colon	:-x
Obwohl	CONJ.SubFin	obwohl-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Reihe	N.Reg.Acc.Sg.Fem	Reihe-n
von	APPR	von-i
Unternehmen	N.Reg.Dat.Pl.Neut	Unternehmen-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
dem	ART.Def.Dat.Sg.Masc	die-x
Begriff	N.Reg.Dat.Sg.Masc	Begriff-n
"	SYM.Quot.Left	"-x
<g/>
Open	FM	Open-x
Source	FM	Source-x
<g/>
"	SYM.Quot.Left	"-x
verbunden	ADJD.Pos	verbunden-j
fühlen	VFIN.Full.3.Pl.Pres.Ind	fühlen-v
<g/>
,	SYM.Pun.Comma	,-x
basiert	VFIN.Full.3.Sg.Pres.Ind	basieren-v
ihr	PRO.Poss.Attr.Acc.Sg.Neut	ihre-p
Geschäft	N.Reg.Acc.Sg.Neut	Geschäft-n
tatsächlich	ADJD.Pos	tatsächlich-j
auf	APPR	auf-i
unfreier	ADJA.Pos.Dat.Sg.Fem	unfrei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
mit	APPR	mit-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
arbeitet	VFIN.Full.3.Sg.Pres.Ind	arbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
keine	PRO.Indef.Attr.Nom.Pl.Fem	keine-p
Freie-Software-Unternehmen	N.Reg.Nom.Pl.Fem	Freie-Software-Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
proprietäre	ADJA.Pos.Nom.Pl.Neut	proprietär-j
Softwareunternehmen	N.Reg.Nom.Pl.Neut	Softwareunternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
deren	PRO.Rel.Attr.Gen.Pl.Neut	die-p
Produkte	N.Reg.Nom.Pl.Neut	Produkt-n
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
von	APPR	von-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
weg	ADV	weg-a
in	APPR	in-i
Versuchung	N.Reg.Dat.Sg.Fem	Versuchung-n
führen	VINF.Full	führen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
diese	PRO.Dem.Attr.Acc.Pl.Neut	diese-p
Programme	N.Reg.Acc.Pl.Neut	Programm-n
Mehrwertpakete	N.Reg.Nom.Pl.Neut	Mehrwertpaket-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
die	ART.Def.Acc.Pl.Masc	die-x
Werte	N.Reg.Acc.Pl.Masc	Wert-n
widerspiegeln	VFIN.Full.3.Pl.Pres.Ind	widerspiegeln-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
sie	PRO.Pers.Subst.3.Acc.*.*	sie-p
gerne	ADV	gerne-a
als	CONJ.Comp	als-c
von	APPR	von-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
adaptiert	ADJD.Pos	adaptiert-j
sehen	VINF.Full	sehen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
:	SYM.Pun.Colon	:-x
Nutzen	N.Reg.Nom.Sg.Masc	Nutzen-n
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
höher	ADJD.Comp	hoch-j
schätzen	VFIN.Full.1.Pl.Pres.Ind	schätzen-v
<g/>
,	SYM.Pun.Comma	,-x
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
freiheitsentziehende	ADJA.Pos.Acc.Pl.Neut	freiheitsentziehend-j
Pakete	N.Reg.Acc.Pl.Neut	Paket-n
genannt	VPP.Full.Psp	nennen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Technische	ADJA.Pos.Nom.Pl.Neut	technisch-j
Ziele	N.Reg.Nom.Pl.Neut	Ziel-n
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
primäre	ADJA.Pos.Nom.Sg.Neut	primär-j
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
von	N.Name.*.*.*	von-n
GNU	N.Name.Nom.Sg.*	GNU-n
soll	VFIN.Mod.3.Sg.Pres.Ind	sollen-v
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Selbst	ADV	selbst-a
wenn	CONJ.SubFin	wenn-c
GNU	N.Name.Nom.Sg.*	GNU-n
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
technischen	ADJA.Pos.Acc.Sg.Masc	technisch-j
Vorteil	N.Reg.Acc.Sg.Masc	Vorteil-n
gegenüber	APPR	gegenüber-i
Unix	N.Name.Dat.Sg.*	Unix-n
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
<g/>
,	SYM.Pun.Comma	,-x
gäbe	VFIN.Full.3.Sg.Past.Subj	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
sozialen	ADJA.Pos.Acc.Sg.Masc	sozial-j
Vorteil	N.Reg.Acc.Sg.Masc	Vorteil-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
erlaubt	ADJD.Pos	erlaubt-j
zusammenzuarbeiten	VINF.Full.zu	zusammenarbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
ethischen	ADJA.Pos.Acc.Sg.Masc	ethisch-j
Vorteil	N.Reg.Acc.Sg.Masc	Vorteil-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
des	ART.Def.Gen.Sg.Masc	die-x
Nutzers	N.Reg.Gen.Sg.Masc	Nutzer-n
respektiert	VPP.Full.Psp	respektieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
selbstverständlich	ADJD.Pos	selbstverständlich-j
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Masc	die-x
bekannten	ADJA.Pos.Acc.Pl.Masc	bekannt-j
Standards	N.Reg.Acc.Pl.Masc	Standard-n
guter	ADJA.Pos.Gen.Sg.Fem	gut-j
Praxis	N.Reg.Gen.Sg.Fem	Praxis-n
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
anzuwenden	VINF.Full.zu	anwenden-v
-	SYM.Pun.Hyph	--x
etwa	ADV	etwa-a
die	ART.Def.Acc.Sg.Fem	die-x
dynamische	ADJA.Pos.Acc.Sg.Fem	dynamisch-j
Zuweisung	N.Reg.Acc.Sg.Fem	Zuweisung-n
von	APPR	von-i
Datenstrukturen	N.Reg.Dat.Pl.Fem	Datenstruktur-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
willkürliche	ADJA.Pos.Acc.Pl.Fem	willkürlich-j
feste	ADJA.Pos.Acc.Pl.Fem	fest-j
Größenbegrenzungen	N.Reg.Acc.Pl.Fem	Größenbegrenzung-n
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
die	ART.Def.Acc.Sg.Fem	die-x
Handhabung	N.Reg.Acc.Sg.Fem	Handhabung-n
aller	PRO.Indef.Attr.Gen.Pl.Fem	alle-p
möglichen	ADJA.Pos.Gen.Pl.Fem	möglich-j
8-Bit-Codes	N.Reg.Gen.Pl.Fem	8-Bit-Codes-n
<g/>
,	SYM.Pun.Comma	,-x
wann	PROADV.Inter	wann-x
immer	ADV	immer-a
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
Sinn	N.Reg.Acc.Sg.Masc	Sinn-n
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Darüber	PROADV.Dem	darüber-x
hinaus	APZR	hinaus-x
lehnten	VFIN.Full.3.Pl.Past.Ind	lehnen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Unix-Fokus	N.Reg.Acc.Sg.Masc	Unix-Fokus-n
auf	APPR	auf-i
kleine	ADJA.Pos.Acc.Pl.Fem	klein-j
Speichergrößen	N.Reg.Acc.Pl.Fem	Speichergröße-n
ab	PART.Verb	ab-x
und	CONJ.Coord	und-c
entschieden	VFIN.Full.3.Pl.Past.Ind	entscheiden-v
<g/>
,	SYM.Pun.Comma	,-x
16-Bit-Rechner	N.Reg.Acc.Pl.Masc	16-Bit-Rechner-n
nicht	PART.Neg	nicht-x
zu	PART.Zu	zu-x
unterstützen	VINF.Full	unterstützen-v
(	SYM.Paren.Left	(-x
<g/>
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
klar	ADJD.Pos	klar-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
32-Bit-Rechner	ADJA.Pos.Nom.Sg.Masc	32-Bit-Rechn-j
Standard	N.Reg.Nom.Sg.Masc	Standard-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
fertig	ADJD.Pos	fertig-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
Anstrengungen	N.Reg.Acc.Pl.Fem	Anstrengung-n
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
die	ART.Def.Acc.Sg.Fem	die-x
Speichernutzung	N.Reg.Acc.Sg.Fem	Speichernutzung-n
zu	PART.Zu	zu-x
verringern	VINF.Full	verringern-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Megabyte	N.Reg.Acc.Sg.Neut	Megabyte-n
überstieg	VFIN.Full.3.Sg.Past.Ind	übersteigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
die	ART.Def.Nom.Sg.Fem	die-x
Behandlung	N.Reg.Nom.Sg.Fem	Behandlung-n
von	APPR	von-i
großen	ADJA.Pos.Dat.Pl.Fem	groß-j
Dateien	N.Reg.Dat.Pl.Fem	Datei-n
nicht	PART.Neg	nicht-x
entscheidend	ADJD.Pos	entscheidend-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ermutigten	VFIN.Full.1.Pl.Past.Ind	ermutigen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
die	ART.Def.Acc.Sg.Fem	die-x
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Eingabedatei	N.Reg.Acc.Sg.Fem	Eingabedatei-n
in	APPR	in-i
den	ART.Def.Acc.Sg.Masc	die-x
Prozessorkern	N.Reg.Acc.Sg.Masc	Prozessorkern-n
einzulesen	VINF.Full.zu	einlesen-v
<g/>
,	SYM.Pun.Comma	,-x
dann	ADV	dann-a
seinen	PRO.Poss.Attr.Acc.Sg.Masc	seine-p
Inhalt	N.Reg.Acc.Sg.Masc	Inhalt-n
zu	PART.Zu	zu-x
überprüfen	VINF.Full	überprüfen-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
um	APPR	um-i
Ein	ART.Indef.Acc.Sg.Neut	eine-x
<g/>
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
Ausgabe	N.Reg.Acc.Sg.Fem	Ausgabe-n
kümmern	VINF.Full	kümmern-v
zu	PART.Zu	zu-x
müssen	VINF.Mod	müssen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Acc.Pl.Fem	diese-p
Entscheidungen	N.Reg.Acc.Pl.Fem	Entscheidung-n
ermöglichten	VFIN.Full.3.Pl.Past.Ind	ermöglichen-v
vielen	PRO.Indef.Attr.Nom.Pl.Fem	viele-p
GNU-Programmen	N.Reg.Nom.Pl.Fem	GNU-Programme-n
<g/>
,	SYM.Pun.Comma	,-x
ihre	PRO.Poss.Attr.Acc.Pl.Masc	ihre-p
Unix-Gegenstücke	N.Reg.Acc.Pl.Masc	Unix-Gegenstücke-n
in	APPR	in-i
Zuverlässigkeit	N.Reg.Acc.Sg.Fem	Zuverlässigkeit-n
und	CONJ.Coord	und-c
Geschwindigkeit	N.Reg.Acc.Sg.Fem	Geschwindigkeit-n
zu	PART.Zu	zu-x
übertreffen	VINF.Full	übertreffen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gespendete	ADJA.Pos.Nom.Pl.Masc	gespendet-j
Rechner	N.Reg.Nom.Pl.Masc	Rechner-n
</s>
</align>
<align>
<s>
Als	CONJ.SubFin	als-c
der	ART.Def.Nom.Sg.Masc	die-x
Ruf	N.Reg.Nom.Sg.Masc	Ruf-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
wuchs	VFIN.Full.3.Sg.Past.Ind	wachsen-v
<g/>
,	SYM.Pun.Comma	,-x
begann	VFIN.Full.3.Sg.Past.Ind	beginnen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
als	APPR	als-i
Spende	N.Reg.Acc.Sg.Fem	Spende-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
Projekt	N.Reg.Acc.Sg.Neut	Projekt-n
anzubieten	VINF.Full.zu	anbieten-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
unter	APPR	unter-i
Unix	N.Reg.Acc.Sg.Masc	Unix-n
liefen	VFIN.Full.3.Pl.Past.Ind	laufen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Subst.Nom.Pl.*	diese-p
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
sehr	ADV	sehr-a
nützlich	ADJD.Pos	nützlich-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
der	ART.Def.Nom.Sg.Masc	die-x
einfachste	ADJA.Sup.Nom.Sg.Masc	einfach-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Entwicklung	N.Reg.Nom.Sg.Fem	Entwicklung-n
von	APPR	von-i
GNU-Komponenten	N.Reg.Dat.Pl.Masc	GNU-Komponenten-n
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Unix-System	N.Reg.Dat.Sg.Neut	Unix-System-n
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
dessen	PRO.Rel.Attr.Gen.Sg.Masc	die-p
Komponenten	N.Reg.Acc.Pl.Fem	Komponente-n
eins	PRO.Indef.Subst.Acc.Sg.Neut	eins-p
nach	APPR	nach-i
dem	ART.Def.Dat.Sg.Masc	die-x
anderen	PRO.Indef.Subst.Dat.Sg.Masc	andere-p
zu	PART.Zu	zu-x
ersetzen	VINF.Full	ersetzen-v
-	SYM.Pun.Hyph	--x
eine	ART.Indef.Nom.Sg.Fem	eine-x
nach	APPR	nach-i
der	ART.Def.Dat.Sg.Fem	die-x
anderen	ADJA.Pos.Dat.Sg.Fem	ander-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
löste	VFIN.Full.3.Sg.Past.Ind	lösen-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
ethische	ADJA.Pos.Nom.Sg.Fem	ethisch-j
Frage	N.Reg.Nom.Sg.Fem	Frage-n
aus	PART.Verb	aus-x
<g/>
:	SYM.Pun.Colon	:-x
ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
für	APPR	für-i
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
richtig	ADJD.Pos	richtig-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
überhaupt	ADV	überhaupt-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Kopie	N.Reg.Acc.Sg.Fem	Kopie-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
zu	PART.Zu	zu-x
besitzen	VINF.Full	besitzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unix	N.Name.Nom.Sg.*	Unix-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
)	SYM.Paren.Right	)-x
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
die	ART.Def.Nom.Sg.Fem	die-x
Philosophie	N.Reg.Nom.Sg.Fem	Philosophie-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
besagt	VFIN.Full.3.Sg.Pres.Ind	besagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Software	N.Reg.Acc.Sg.Fem	Software-n
nutzen	VINF.Full	nutzen-v
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
die	ART.Def.Nom.Sg.Fem	die-x
gleiche	ADJA.Pos.Nom.Sg.Fem	gleich-j
Argumentation	N.Reg.Nom.Sg.Fem	Argumentation-n
anwendend	ADJD.Pos	anwendend-j
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
zu	APPR	zu-i
der	ART.Def.Dat.Sg.Fem	die-x
Schlussfolgerung	N.Reg.Dat.Sg.Fem	Schlussfolgerung-n
führt	VFIN.Full.3.Sg.Pres.Ind	führen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Gewalt	N.Reg.Nom.Sg.Fem	Gewalt-n
als	APPR	als-i
Selbstverteidigung	N.Reg.Acc.Sg.Fem	Selbstverteidigung-n
gerechtfertigt	VPP.Full.Psp	rechtfertigen-v
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
schloss	VFIN.Full.1.Sg.Past.Ind	schließen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
legitim	ADJD.Pos	legitim-j
wäre	VFIN.Aux.1.Sg.Past.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
proprietäres	ADJA.Pos.Acc.Sg.Neut	proprietär-j
Paket	N.Reg.Acc.Sg.Neut	Paket-n
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
freien	ADJA.Pos.Gen.Sg.Masc	frei-j
Ersatzes	N.Reg.Gen.Sg.Masc	Ersatz-n
entscheidend	ADJD.Pos	entscheidend-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
anderen	PRO.Indef.Subst.Dat.Sg.Masc	andere-p
helfen	VINF.Full	helfen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
proprietäre	ADJA.Pos.Acc.Sg.Neut	proprietär-j
Paket	N.Reg.Acc.Sg.Neut	Paket-n
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
selbst	ADV	selbst-a
wenn	CONJ.SubFin	wenn-c
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
gerechtfertigtes	ADJA.Pos.Nom.Sg.Neut	gerechtfertigt-j
Übel	N.Reg.Nom.Sg.Neut	Übel-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
immer	ADV	immer-a
noch	ADV	noch-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
Übel	N.Reg.Nom.Sg.Neut	Übel-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heute	ADV	heute-a
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
irgendwelche	PRO.Indef.Attr.Acc.Pl.Fem	irgendwelche-p
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
durch	APPR	durch-i
freie	ADJA.Pos.Acc.Pl.Neut	frei-j
Betriebssysteme	N.Reg.Acc.Pl.Neut	Betriebssystem-n
ersetzten	VFIN.Full.1.Pl.Past.Ind	ersetzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Konnten	VFIN.Mod.1.Pl.Past.Ind	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
Rechners	N.Reg.Gen.Sg.Masc	Rechner-n
nicht	PART.Neg	nicht-x
ersetzen	VINF.Full	ersetzen-v
<g/>
,	SYM.Pun.Comma	,-x
ersetzten	VFIN.Full.1.Pl.Past.Ind	ersetzen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
stattdessen	PROADV.Dem	stattdessen-x
den	ART.Def.Acc.Sg.Masc	die-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU-Aufgabenliste	N.Reg.Nom.Sg.Fem	GNU-Aufgabenliste-n
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
Fortschreiten	N.Reg.Dat.Sg.Neut	Fortschreiten-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
und	CONJ.Coord	und-c
immer	ADV	immer-a
mehr	ADV	mehr-a
gefundenen	ADJA.Pos.Dat.Pl.Fem	gefunden-j
oder	CONJ.Coord	oder-c
entwickelten	ADJA.Pos.Dat.Pl.Fem	entwickelt-j
Systemkomponenten	N.Reg.Dat.Pl.Fem	Systemkomponente-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
schließlich	ADV	schließlich-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
Liste	N.Reg.Nom.Sg.Fem	Liste-n
der	ART.Def.Gen.Pl.Fem	die-x
verbleibenden	ADJA.Pos.Gen.Pl.Fem	verbleibend-j
Lücken	N.Reg.Gen.Pl.Fem	Lücke-n
notwendig	ADJD.Pos	notwendig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
verwendeten	VFIN.Full.1.Pl.Past.Ind	verwenden-v
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Entwickler	N.Reg.Acc.Pl.Masc	Entwickler-n
zu	PART.Zu	zu-x
rekrutieren	VINF.Full	rekrutieren-v
<g/>
,	SYM.Pun.Comma	,-x
fehlende	ADJA.Pos.Acc.Pl.Masc	fehlend-j
Teile	N.Reg.Acc.Pl.Masc	Teil-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Liste	N.Reg.Nom.Sg.Fem	Liste-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
als	APPR	als-i
GNU-Aufgabenliste	N.Reg.Nom.Sg.Fem	GNU-Aufgabenliste-n
bekannt	VPP.Full.Psp	bekennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zusätzlich	ADJD.Pos	zusätzlich-j
zu	APPR	zu-i
fehlenden	ADJA.Pos.Dat.Pl.Masc	fehlend-j
Unix-Komponenten	N.Reg.Dat.Pl.Masc	Unix-Komponenten-n
führten	VFIN.Full.3.Pl.Past.Ind	führen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
verschiedene	ADJA.Pos.Acc.Pl.Fem	verschieden-j
andere	ADJA.Pos.Acc.Pl.Fem	ander-j
nützliche	ADJA.Pos.Acc.Pl.Fem	nützlich-j
Software	N.Reg.Acc.Pl.Fem	Software-n
<g/>
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
Dokumentationsprojekte	N.Reg.Acc.Pl.Masc	Dokumentationsprojekte-n
auf	PART.Verb	auf-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Meinung	N.Reg.Dat.Sg.Fem	Meinung-n
nach	APPO.Dat	nach-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
haben	VINF.Aux	haben-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heute	ADV	heute-a
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
kaum	ADV	kaum-a
noch	ADV	noch-a
Unix-Komponenten	N.Reg.Nom.Pl.Masc	Unix-Komponenten-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
GNU	N.Name.Dat.Sg.Fem	GNU-n
Task	N.Name.*.*.*	Task-n
List	N.Reg.Nom.Sg.Fem	List-n
<g/>
[	SYM.Paren.Left	[-x
<g/>
6	CARD	6-m
<g/>
]	SYM.Paren.Right	]-x
vorhanden	ADJD.Pos	vorhanden-j
-	SYM.Pun.Hyph	--x
diese	PRO.Dem.Subst.Nom.Pl.Neut	diese-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
abgesehen	VPP.Full.Psp	absehen-v
von	APPR	von-i
ein	ART.Indef.*.*.*	eine-x
paar	PRO.Indef.Attr.*.*.*	paar-p
unwichtigen	ADJA.Pos.Dat.Pl.Fem	unwichtig-j
<g/>
,	SYM.Pun.Comma	,-x
abgearbeitet	VPP.Full.Psp	abarbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
die	ART.Def.Nom.Sg.Fem	die-x
Liste	N.Reg.Nom.Sg.Fem	Liste-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
voll	ADJD.Pos	voll-j
von	APPR	von-i
Projekten	N.Reg.Dat.Pl.Neut	Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
manche	PRO.Indef.Attr.Nom.Pl.Neut	manche-p
"	SYM.Quot.Left	"-x
<g/>
Anwendungen	N.Reg.Nom.Pl.Fem	Anwendung-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VINF.Full	nennen-v
mögen	VFIN.Mod.3.Pl.Pres.Ind	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Jedes	PRO.Indef.Attr.Nom.Sg.Neut	jede-p
Programm	N.Reg.Nom.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
mehr	PRO.Indef.Subst.*.*.*	mehr-p
als	CONJ.Comp	als-c
nur	ADV	nur-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
kleine	ADJA.Pos.Acc.Sg.Fem	klein-j
Benutzergruppe	N.Reg.Acc.Sg.Fem	Benutzergruppe-n
anspricht	VFIN.Full.3.Sg.Pres.Ind	ansprechen-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
sinnvoll	ADJD.Pos	sinnvoll-j
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
einem	ART.Indef.Dat.Sg.Neut	eine-x
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
hinzuzufügen	VINF.Full.zu	hinzufügen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sogar	ADV	sogar-a
Spiele	N.Reg.Nom.Pl.Neut	Spiel-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Aufgabenliste	N.Reg.Dat.Sg.Fem	Aufgabenliste-n
enthalten	VPP.Full.Psp	enthalten-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
von	APPR	von-i
Anfang	N.Reg.Dat.Sg.Masc	Anfang-n
an	APZR	an-x
dabei	PART.Verb	dabei-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unix	N.Name.Nom.Sg.*	Unix-n
enthielt	VFIN.Full.3.Sg.Past.Ind	enthalten-v
Spiele	N.Reg.Acc.Pl.Neut	Spiel-n
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
GNU	N.Name.Nom.Sg.*	GNU-n
natürlich	ADV	natürlich-a
auch	ADV	auch-a
welche	PRO.Indef.Subst.Acc.Pl.*	welche-p
enthalten	VINF.Full	enthalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
aber	ADV	aber-a
Kompatibilität	N.Reg.Nom.Sg.Fem	Kompatibilität-n
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
für	APPR	für-i
Spiele	N.Reg.Acc.Pl.Neut	Spiel-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
mussten	VFIN.Mod.1.Pl.Past.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
der	ART.Def.Dat.Sg.Fem	die-x
Liste	N.Reg.Dat.Sg.Fem	Liste-n
der	ART.Def.Gen.Pl.Neut	die-x
Spiele	N.Reg.Gen.Pl.Neut	Spiel-n
nicht	PART.Neg	nicht-x
folgen	VINF.Full	folgen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
Unix	N.Name.Nom.Sg.*	Unix-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Stattdessen	PROADV.Dem	Stattdessen-x
führten	VFIN.Full.3.Pl.Past.Ind	führen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Spektrum	N.Reg.Acc.Sg.Neut	Spektrum-n
verschiedener	ADJA.Pos.Gen.Pl.Neut	verschieden-j
möglicher	ADJA.Pos.Gen.Pl.Neut	möglich-j
Spiele	N.Reg.Gen.Pl.Neut	Spiel-n
auf	PART.Verb	auf-x
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Masc	die-x
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
mögen	VFIN.Mod.3.Pl.Pres.Ind	mögen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
Library	N.Name.*.*.*	Library-n
GPL	N.Name.Nom.Sg.*	GPL-n
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
spezielle	ADJA.Pos.Acc.Sg.Fem	speziell-j
Art	N.Reg.Acc.Sg.Fem	Art-n
des	ART.Def.Gen.Sg.Neut	die-x
Copyleft	N.Reg.Nom.Sg.Neut	Copyleft-n
namens	APPR	namens-i
GNU	N.Name.Nom.Sg.Masc	GNU-n
Library	FM	Library-x
General	FM	General-x
Public	FM	Public-x
License	FM	License-x
(	SYM.Paren.Left	(-x
<g/>
LGPL	N.Name.Nom.Sg.*	LGPL-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Berechtigung	N.Reg.Acc.Sg.Fem	Berechtigung-n
erteilt	VFIN.Full.3.Sg.Pres.Ind	erteilen-v
<g/>
,	SYM.Pun.Comma	,-x
proprietäre	ADJA.Pos.Acc.Pl.Fem	proprietär-j
Software	N.Reg.Acc.Pl.Fem	Software-n
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Bibliothek	N.Reg.Dat.Sg.Fem	Bibliothek-n
zu	PART.Zu	zu-x
verbinden	VINF.Full	verbinden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
7	CARD	7-m
<g/>
)	SYM.Paren.Right	)-x
Warum	PROADV.Inter	warum-x
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Ausnahme	N.Reg.Nom.Sg.Fem	Ausnahme-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
Frage	N.Reg.Nom.Sg.Fem	Frage-n
des	ART.Def.Gen.Sg.Neut	die-x
Prinzips	N.Reg.Gen.Sg.Neut	Prinzip-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
Prinzip	N.Reg.Acc.Sg.Neut	Prinzip-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
proprietäre	ADJA.Pos.Acc.Pl.Neut	proprietär-j
Softwareprodukte	N.Reg.Acc.Pl.Neut	Softwareprodukt-n
berechtigt	ADJD.Pos	berechtigt-j
unseren	PRO.Poss.Attr.Acc.Sg.Masc	unsre-p
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
einzubinden	VINF.Full.zu	einbinden-v
(	SYM.Paren.Left	(-x
<g/>
warum	PROADV.Inter	warum-x
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Projekt	N.Reg.Dat.Sg.Neut	Projekt-n
beitragen	VINF.Full	beitragen-v
<g/>
,	SYM.Pun.Comma	,-x
welches	PRO.Rel.Subst.Nom.Sg.Neut	welche-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
weigert	VFIN.Full.3.Sg.Pres.Ind	weigern-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
mit	APPR	mit-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
auszutauschen	VINF.Full.zu	austauschen-v
<g/>
?	SYM.Pun.Sent	?-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
LGPL	N.Reg.Nom.Pl.Neut	LGPL-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
C-Bibliothek	N.Reg.Acc.Sg.Fem	C-Bibliothek-n
(	SYM.Paren.Left	(-x
<g/>
oder	CONJ.Coord	oder-c
für	APPR	für-i
jedwede	ADJA.Pos.Acc.Sg.Fem	jedwed-j
Bibliothek	N.Reg.Acc.Sg.Fem	Bibliothek-n
<g/>
)	SYM.Paren.Right	)-x
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
der	ART.Def.Gen.Sg.Fem	die-x
Strategie	N.Reg.Gen.Sg.Fem	Strategie-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
erfüllt	VFIN.Full.3.Sg.Pres.Ind	erfüllen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
allgemeine	ADJA.Pos.Acc.Sg.Fem	allgemein-j
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Jedes	PRO.Indef.Attr.Nom.Sg.Neut	jede-p
proprietäre	ADJA.Pos.Nom.Sg.Neut	proprietär-j
System	N.Reg.Nom.Sg.Neut	System-n
oder	CONJ.Coord	oder-c
jeder	PRO.Indef.Attr.Nom.Sg.Masc	jede-p
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
C-Bibliothek	N.Reg.Dat.Sg.Fem	C-Bibliothek-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Deshalb	PROADV.Dem	deshalb-x
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
ausschließlich	ADV	ausschließlich-a
für	APPR	für-i
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
verfügbar	ADJD.Pos	verfügbar-j
<g/>
,	SYM.Pun.Comma	,-x
dieser	PRO.Dem.Subst.Nom.Sg.Masc	diese-p
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Vorteil	N.Reg.Acc.Sg.Masc	Vorteil-n
bringen	VINF.Full	bringen-v
-	SYM.Pun.Hyph	--x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
nur	ADV	nur-a
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Nutzung	N.Reg.Dat.Sg.Fem	Nutzung-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Bibliothek	N.Reg.Gen.Sg.Fem	Bibliothek-n
abgehalten	VPP.Full.Psp	abhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
System	N.Reg.Nom.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Ausnahme	N.Reg.Nom.Sg.Fem	Ausnahme-n
<g/>
:	SYM.Pun.Colon	:-x
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
schließt	VFIN.Full.3.Sg.Pres.Ind	schließen-v
GNU	N.Name.Nom.Sg.Masc	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ein	PART.Verb	ein-x
<g/>
)	SYM.Paren.Right	)-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.*.*.*	GNU-n
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
die	ART.Def.Nom.Sg.Fem	die-x
einzige	ADJA.Pos.Nom.Sg.Fem	einzig-j
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
Vertriebsbedingungen	N.Reg.Nom.Pl.Fem	Vertriebsbedingung-n
der	ART.Def.Gen.Sg.Fem	die-x
GNU	N.Name.Gen.Sg.Fem	GNU-n
C-Bibliothek	N.Name.*.*.*	C-Bibliothek-n
bestimmen	VINF.Full	bestimmen-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
möglich	ADJD.Pos	möglich-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
proprietäres	ADJA.Pos.Acc.Sg.Neut	proprietär-j
Programm	N.Reg.Acc.Sg.Neut	Programm-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
zu	PART.Zu	zu-x
kompilieren	VINF.Full	kompilieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
ethischen	ADJA.Pos.Acc.Sg.Masc	ethisch-j
Grund	N.Reg.Acc.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
proprietäre	ADJA.Pos.Acc.Pl.Fem	proprietär-j
Anwendungen	N.Reg.Acc.Pl.Fem	Anwendung-n
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
strategisch	ADJD.Pos	strategisch-j
gesehen	ADJD.Pos	gesehen-j
scheint	VFIN.Full.3.Sg.Pres.Ind	scheinen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
Verbieten	N.Reg.Nom.Sg.Neut	Verbieten-n
eher	ADV	eher-a
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Nutzung	N.Reg.Dat.Sg.Fem	Nutzung-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
abhält	VFIN.Full.3.Sg.Pres.Ind	abhalten-v
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
die	ART.Def.Acc.Sg.Fem	die-x
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Anwendungen	N.Reg.Gen.Pl.Fem	Anwendung-n
zu	PART.Zu	zu-x
fördern	VINF.Full	fördern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Deshalb	PROADV.Dem	deshalb-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Verwendung	N.Reg.Nom.Sg.Fem	Verwendung-n
der	ART.Def.Gen.Sg.Fem	die-x
Library	N.Name.*.*.*	Library-n
GPL	N.Name.Gen.Sg.Fem	GPL-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
gute	ADJA.Pos.Acc.Sg.Fem	gut-j
Strategie	N.Reg.Acc.Sg.Fem	Strategie-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
C-Bibliothek	N.Reg.Acc.Sg.Fem	C-Bibliothek-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
andere	ADJA.Pos.Acc.Pl.Fem	ander-j
Bibliotheken	N.Reg.Acc.Pl.Fem	Bibliothek-n
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
die	ART.Def.Nom.Sg.Fem	die-x
strategische	ADJA.Pos.Nom.Sg.Fem	strategisch-j
Entscheidung	N.Reg.Nom.Sg.Fem	Entscheidung-n
individuell	ADJD.Pos	individuell-j
getroffen	VPP.Full.Psp	treffen|triefen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Bibliothek	N.Reg.Nom.Sg.Fem	Bibliothek-n
bei	APPR	bei-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
speziellen	ADJA.Pos.Dat.Sg.Fem	speziell-j
Aufgabe	N.Reg.Dat.Sg.Fem	Aufgabe-n
helfen	VINF.Full	helfen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
bestimmte	ADJA.Pos.Acc.Pl.Fem	bestimmt-j
Arten	N.Reg.Acc.Pl.Fem	Art-n
von	APPR	von-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
und	CONJ.Coord	und-c
dann	ADV	dann-a
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
GPL	N.Name.Dat.Sg.Fem	GPL-n
freizugeben	VINF.Full.zu	freigeben-v
-	SYM.Pun.Hyph	--x
auf	APPR	auf-i
lediglich	ADV	lediglich-a
freie	ADJA.Pos.Acc.Pl.Neut	frei-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
begrenzt	VFIN.Full.3.Sg.Pres.Ind	begrenzen-v
-	SYM.Pun.Hyph	--x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
Freie-Software-Entwicklern	N.Reg.Dat.Pl.Masc	Freie-Software-Entwickler-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
und	CONJ.Coord	und-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
Vorteil	N.Reg.Acc.Sg.Masc	Vorteil-n
gegenüber	APPO.Dat	gegenüber-x
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Software	N.Reg.Acc.Sg.Fem	Software-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Betrachten	VFIN.Full.1.Pl.Pres.Ind	betrachten-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
GNU	N.Name.Nom.Sg.Fem	GNU-n
Readline	N.Name.Nom.Sg.Fem	Readline-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Nom.Sg.Fem	eine-x
Bibliothek	N.Reg.Nom.Sg.Fem	Bibliothek-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
entwickelt	VPP.Full.Psp	entwickeln-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
für	APPR	für-i
BASH	N.Name.Nom.Sg.Masc	BASH-n
die	ART.Def.Acc.Sg.Fem	die-x
Befehlszeilenbearbeitung	N.Reg.Acc.Sg.Fem	Befehlszeilenbearbeitung-n
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Readline	N.Reg.Nom.Sg.Fem	Readline-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
gewöhnlichen	ADJA.Pos.Dat.Sg.Fem	gewöhnlich-j
GNU	N.Reg.Dat.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.Neut	GPL-n
vertrieben	VPP.Full.Psp	vertreiben-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
Library	N.Reg.Dat.Sg.Fem	Library-n
GPL	N.Name.Nom.Sg.Neut	GPL-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
reduziert	VFIN.Full.3.Sg.Pres.Ind	reduzieren-v
möglicherweise	ADV	möglicherweise-a
die	ART.Def.Acc.Sg.Fem	die-x
Häufigkeit	N.Reg.Acc.Sg.Fem	Häufigkeit-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Readline	N.Reg.Dat.Sg.Fem	Readline-n
benutzt	VPP.Full.Psp	benutzen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
Verlust	N.Reg.Nom.Sg.Masc	Verlust-n
für	APPR	für-i
uns.	ADJD.Pos	uns.-j
</s>
</align>
<align>
<s>
Inzwischen	ADV	inzwischen-a
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
mindestens	ADV	mindestens-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
nützliche	ADJA.Pos.Acc.Sg.Fem	nützlich-j
Anwendung	N.Reg.Acc.Sg.Fem	Anwendung-n
ausdrücklich	ADJD.Pos	ausdrücklich-j
zu	APPR	zu-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
gemacht	VPP.Full.Psp	machen-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Readline	N.Reg.Acc.Pl.Masc	Readline-n
nutzen	VINF.Full	nutzen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
echter	ADJA.Pos.Nom.Sg.Masc	echt-j
Gewinn	N.Reg.Nom.Sg.Masc	Gewinn-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
proprietärer	ADJA.Pos.Gen.Pl.Fem	proprietär-j
Software	N.Reg.Gen.Pl.Fem	Software-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
die	ART.Def.Acc.Pl.Masc	die-x
Vorteile	N.Reg.Acc.Pl.Masc	Vorteil-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
ermöglicht	VFIN.Full.3.Sg.Pres.Ind	ermöglichen-v
<g/>
;	SYM.Pun.Sent	;-x
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
gegenseitig	ADJD.Pos	gegenseitig-j
Vorteile	N.Reg.Acc.Pl.Masc	Vorteil-n
für	APPR	für-i
einander	PRO.Pers.Subst.3.Acc.Pl.*	einander-p
verschaffen	VINF.Full	verschaffen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
hoffe	VFIN.Full.1.Sg.Pres.Ind	hoffen-v
<g/>
,	SYM.Pun.Comma	,-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
eines	ART.Indef.Gen.Sg.Masc	eine-x
Tages	N.Reg.Gen.Sg.Masc	Tag-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
große	ADJA.Pos.Acc.Sg.Fem	groß-j
Sammlung	N.Reg.Acc.Sg.Fem	Sammlung-n
GPL-lizenzierter	N.Reg.Gen.Pl.*	GPL-lizenzierter-n
Bibliotheken	N.Reg.Nom.Pl.Fem	Bibliothek-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
Parallelen	N.Reg.Acc.Pl.Fem	Parallele-n
zu	APPR	zu-i
verfügbarer	ADJA.Pos.Dat.Sg.Fem	verfügbar-j
proprietärer	ADJA.Pos.Dat.Sg.Fem	proprietär-j
Software	N.Reg.Dat.Sg.Fem	Software-n
bilden	VFIN.Full.3.Pl.Pres.Ind	bilden-v
<g/>
,	SYM.Pun.Comma	,-x
nützliche	ADJA.Pos.Acc.Pl.Masc	nützlich-j
Module	N.Reg.Acc.Pl.Masc	Modul-n
liefern	VINF.Full	liefern-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
als	APPR	als-i
Bausteine	N.Reg.Nom.Pl.Masc	Baustein-n
in	APPR	in-i
neuer	ADJA.Pos.Dat.Sg.Fem	neu-j
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
dienen	VFIN.Full.3.Pl.Pres.Ind	dienen-v
und	CONJ.Coord	und-c
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
größeren	ADJA.Comp.Dat.Sg.Masc	groß-j
Vorteil	N.Reg.Dat.Sg.Masc	Vorteil-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
weitere	ADJA.Comp.Acc.Sg.Fem	weit-j
Freie-Software-Entwicklung	N.Reg.Acc.Sg.Fem	Freie-Software-Entwicklung-n
summieren	VINF.Full	summieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einen	ART.Indef.Acc.Sg.Masc	eine-x
Juckreiz	N.Reg.Acc.Sg.Masc	Juckreiz-n
löschen	VINF.Full	löschen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Eric	N.Name.Nom.Sg.Masc	Eric-n
Raymond	N.Name.Nom.Sg.Masc	Raymond-n
sagt	VFIN.Full.3.Sg.Pres.Ind	sagen-v
<g/>
:	SYM.Pun.Colon	:-x
"	SYM.Quot.Left	"-x
<g/>
Jedes	PRO.Indef.Attr.Nom.Sg.Neut	jede-p
gute	ADJA.Pos.Nom.Sg.Neut	gut-j
Werk	N.Reg.Nom.Sg.Neut	Werk-n
von	APPR	von-i
Software	N.Reg.Dat.Sg.Fem	Software-n
fängt	VFIN.Full.3.Sg.Pres.Ind	fangen-v
mit	APPR	mit-i
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
Kratzen	N.Reg.Dat.Pl.Fem	Kratze-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
persönlichen	ADJA.Pos.Gen.Sg.Masc	persönlich-j
Juckreizes	N.Reg.Gen.Sg.Masc	Juckreiz-n
des	ART.Def.Gen.Sg.Masc	die-x
Entwicklers	N.Reg.Gen.Sg.Masc	Entwickler-n
an	PART.Verb	an-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Vielleicht	ADV	vielleicht-a
passiert	VFIN.Full.3.Sg.Pres.Ind	passieren-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
manchmal	ADV	manchmal-a
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
wesentliche	ADJA.Pos.Nom.Pl.Masc	wesentlich-j
Teile	N.Reg.Nom.Pl.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
GNU-Software	N.Reg.Gen.Sg.Fem	GNU-Software-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
entwickelt	VPP.Full.Psp	entwickeln-v
um	APPR	um-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
vollständig	ADJD.Pos	vollständig-j
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
stammen	VFIN.Full.3.Pl.Pres.Ind	stammen-v
aus	APPR	aus-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Vision	N.Reg.Dat.Sg.Fem	Vision-n
und	CONJ.Coord	und-c
einem	ART.Indef.Dat.Sg.Masc	eine-x
Plan	N.Reg.Dat.Sg.Masc	Plan-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
aus	APPR	aus-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Impuls	N.Reg.Dat.Sg.Masc	Impuls-n
heraus	PART.Verb	heraus-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
unixartiges	ADJA.Pos.Nom.Sg.Neut	unixartig-j
System	N.Reg.Nom.Sg.Neut	System-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
C-Bibliothek	N.Reg.Acc.Sg.Fem	C-Bibliothek-n
braucht	VFIN.Full.3.Sg.Pres.Ind	brauchen-v
<g/>
,	SYM.Pun.Comma	,-x
BASH	ADJD.Pos	BASH-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
unixoides	ADJA.Pos.Nom.Sg.Neut	unixoid-j
System	N.Reg.Nom.Sg.Neut	System-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Befehlszeileninterpreter	N.Reg.Acc.Sg.Masc	Befehlszeileninterpreter-n
braucht	VFIN.Full.3.Sg.Pres.Ind	brauchen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
GNU	N.Name.Nom.Sg.Masc	GNU-n
Tar	N.Name.Nom.Sg.Masc	Tar-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
unixoides	ADJA.Pos.Nom.Sg.Neut	unixoid-j
System	N.Reg.Nom.Sg.Neut	System-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
Archivierungsprogramm	N.Reg.Acc.Sg.Neut	Archivierungsprogramm-n
braucht	VFIN.Full.3.Sg.Pres.Ind	brauchen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gleiches	N.Reg.Nom.Sg.Neut	Gleiche-n
gilt	VFIN.Full.3.Sg.Pres.Ind	gelten-v
für	APPR	für-i
die	ART.Def.Acc.Pl.Neut	die-x
von	APPR	von-i
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
geschriebenen	ADJA.Pos.Acc.Pl.Neut	geschrieben-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
-	SYM.Pun.Hyph	--x
den	ART.Def.Acc.Sg.Masc	die-x
GNU	N.Name.*.*.*	GNU-n
C-Compiler	N.Name.Nom.Sg.*	C-Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.*	GNU-n
Emacs	N.Name.Nom.Sg.*	Emacs-n
<g/>
,	SYM.Pun.Comma	,-x
GDB	N.Name.Nom.Sg.*	GDB-n
und	CONJ.Coord	und-c
GNU	N.Name.Nom.Sg.*	GNU-n
Make	N.Name.Nom.Sg.*	Make-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Attr.Nom.Pl.Neut	einige-p
GNU-Programme	N.Reg.Nom.Pl.Neut	GNU-Programm-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
bestimmte	ADJA.Pos.Acc.Pl.Fem	bestimmt-j
Bedrohungen	N.Reg.Acc.Pl.Fem	Bedrohung-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
bewältigen	VINF.Full	bewältigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
So	ADV	so-a
entwickelten	VFIN.Full.1.Pl.Past.Ind	entwickeln-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
GZIP	N.Name.Acc.Sg.Fem	GZIP-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
das	ART.Def.Acc.Sg.Neut	die-x
Komprimierungsprogramm	N.Reg.Acc.Sg.Neut	Komprimierungsprogramm-n
zu	PART.Zu	zu-x
ersetzen	VINF.Full	ersetzen-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
der	ART.Def.Dat.Sg.Fem	die-x
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
wegen	APPR	wegen-i
der	ART.Def.Gen.Pl.Neut	die-x
Patente	N.Reg.Gen.Pl.Neut	Patent-n
auf	APPR	auf-i
LZW-verloren	N.Reg.Acc.Pl.Masc	LZW-verloren-n
gegangen	VPP.Full.Psp	gehen-v
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
fanden	VFIN.Full.1.Pl.Past.Ind	finden-v
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
um	APPR	um-i
LessTif	N.Reg.Acc.Sg.Masc	LessTif-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
und	CONJ.Coord	und-c
begannen	VFIN.Full.3.Pl.Past.Ind	beginnen-v
vor	APPR	vor-i
kurzem	PRO.Indef.Subst.Dat.Sg.Neut	kurz-p
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
von	APPR	von-i
GNOME	N.Reg.Dat.Sg.Masc	Gnom-n
und	CONJ.Coord	und-c
Harmony	N.Reg.Dat.Sg.Fem	Harmony-n
<g/>
,	SYM.Pun.Comma	,-x
um	APPR	um-i
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
durch	APPR	durch-i
bestimmte	ADJA.Pos.Acc.Pl.Fem	bestimmt-j
proprietäre	ADJA.Pos.Acc.Pl.Fem	proprietär-j
Bibliotheken	N.Reg.Acc.Pl.Fem	Bibliothek-n
verursachten	ADJA.Pos.Acc.Pl.*	verursacht-j
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
anzugehen	VINF.Full.zu	angehen-v
(	SYM.Paren.Left	(-x
<g/>
siehe	VIMP.Full.2.Sg	siehe-v
unten	ADV	unten-a
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
entwickelten	VFIN.Full.1.Pl.Past.Ind	entwickeln-v
den	ART.Def.Acc.Sg.Masc	die-x
GNU	N.Name.*.*.*	GNU-n
Privacy	N.Name.*.*.*	Privacy-n
Guard	N.Name.Acc.Sg.Masc	Guard-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
beliebte	ADJA.Pos.Acc.Sg.Fem	beliebt-j
unfreie	ADJA.Pos.Acc.Sg.Fem	unfrei-j
Verschlüsselungssoftware	N.Reg.Acc.Sg.Fem	Verschlüsselungssoftware-n
zu	PART.Zu	zu-x
ersetzen	VINF.Full	ersetzen-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
nicht	PART.Neg	nicht-x
zwischen	APPR	zwischen-i
Privatsphäre	N.Reg.Dat.Sg.Fem	Privatsphäre-n
und	CONJ.Coord	und-c
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
sollten	VFIN.Mod.3.Pl.Past.Subj	sollen-v
wählen	VINF.Full	wählen-v
müssen	VINF.Mod	müssen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
Personen	N.Reg.Nom.Pl.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
diese	PRO.Dem.Attr.Acc.Pl.Neut	diese-p
Programme	N.Reg.Acc.Pl.Neut	Programm-n
schrieben	VFIN.Full.3.Pl.Past.Ind	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
interessierten	VFIN.Full.3.Pl.Past.Ind	interessieren-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
natürlich	ADV	natürlich-a
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
viele	PRO.Indef.Attr.Nom.Pl.Fem	viele-p
Funktionen	N.Reg.Nom.Pl.Fem	Funktion-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
von	APPR	von-i
verschiedenen	ADJA.Pos.Dat.Pl.Fem	verschieden-j
Personen	N.Reg.Dat.Pl.Fem	Person-n
aufgrund	APPR	aufgrund-i
eigener	ADJA.Pos.Gen.Pl.Fem	eigen-j
Anforderungen	N.Reg.Gen.Pl.Fem	Anforderung-n
und	CONJ.Coord	und-c
Interessen	N.Reg.Gen.Pl.Neut	Interesse-n
hinzugefügt	VPP.Full.Psp	hinzufügen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Doch	CONJ.Coord	doch-c
darum	PROADV.Dem	darum-x
existieren	VFIN.Full.3.Pl.Pres.Ind	existieren-v
die	ART.Def.Nom.Pl.Neut	die-x
Programme	N.Reg.Nom.Pl.Neut	Programm-n
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unerwartete	ADJA.Pos.Nom.Pl.Fem	unerwartet-j
Entwicklungen	N.Reg.Nom.Pl.Fem	Entwicklung-n
</s>
</align>
<align>
<s>
Zu	APPR	zu-i
Beginn	N.Reg.Dat.Sg.Masc	Beginn-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
stellte	VFIN.Full.1.Sg.Past.Ind	stellen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
mir	PRO.Refl.Subst.1.Dat.Sg.*	sie-p
vor	PART.Verb	vor-x
<g/>
,	SYM.Pun.Comma	,-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
würden	VFIN.Aux.1.Pl.Past.Subj	werden-v
das	ART.Def.Acc.Sg.Neut	die-x
gesamte	ADJA.Pos.Acc.Sg.Neut	gesamt-j
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
entwickeln	VINF.Full	entwickeln-v
und	CONJ.Coord	und-c
dann	ADV	dann-a
als	APPR	als-i
Ganzes	N.Reg.Acc.Sg.Neut	Ganze-n
freigeben	VINF.Full	freigeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
So	ADV	so-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
gekommen	VPP.Full.Psp	kommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
jede	PRO.Indef.Attr.Nom.Sg.Fem	jede-p
Komponente	N.Reg.Nom.Sg.Fem	Komponente-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Unix-System	N.Reg.Dat.Sg.Neut	Unix-System-n
umgesetzt	VPP.Full.Psp	umsetzen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
jede	PRO.Indef.Subst.Nom.Sg.Fem	jede-p
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Unix-System	N.Reg.Dat.Sg.Neut	Unix-System-n
ausgeführt	VPP.Full.Psp	ausführen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
lange	ADV	lange-a
bevor	CONJ.SubFin	bevor-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
komplettes	ADJA.Pos.Nom.Sg.Neut	komplett-j
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
existierte	VFIN.Full.3.Sg.Past.Ind	existieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
dieser	PRO.Dem.Attr.Gen.Pl.Neut	diese-p
Programme	N.Reg.Gen.Pl.Neut	Programm-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
populär	ADJD.Pos	populär-j
und	CONJ.Coord	und-c
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
begannen	VFIN.Full.3.Pl.Past.Ind	beginnen-v
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
erweitern	VINF.Full	erweitern-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
portieren	VINF.Full	portieren-v
-	SYM.Pun.Hyph	--x
auf	APPR	auf-i
die	ART.Def.Acc.Pl.Fem	die-x
verschiedenen	ADJA.Pos.Acc.Pl.Fem	verschieden-j
inkompatiblen	ADJA.Pos.Acc.Pl.Fem	inkompatibel-j
Versionen	N.Reg.Acc.Pl.Fem	Version-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
und	CONJ.Coord	und-c
manchmal	ADV	manchmal-a
auch	ADV	auch-a
auf	APPR	auf-i
andere	ADJA.Pos.Acc.Pl.Neut	ander-j
Systeme	N.Reg.Acc.Pl.Neut	System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Vorgang	N.Reg.Nom.Sg.Masc	Vorgang-n
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
diese	PRO.Dem.Attr.Acc.Pl.Neut	diese-p
Programme	N.Reg.Acc.Pl.Neut	Programm-n
sehr	ADV	sehr-a
viel	ADV	viel-a
mächtiger	ADJD.Comp	mächtig-j
und	CONJ.Coord	und-c
zog	VFIN.Full.3.Sg.Past.Ind	ziehen-v
sowohl	CONJ.Coord	sowohl-c
Gelder	N.Reg.Acc.Pl.Neut	Geld-n
als	CONJ.Coord	als-c
auch	ADV	auch-a
Mitwirkende	N.Reg.Acc.Sg.Fem	Mitwirkend-n
zum	APPRART.Dat.Sg.Masc	zu-i
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
verzögerte	VFIN.Full.3.Sg.Past.Ind	verzögern-v
möglicherweise	ADV	möglicherweise-a
auch	ADV	auch-a
die	ART.Def.Acc.Sg.Fem	die-x
Fertigstellung	N.Reg.Acc.Sg.Fem	Fertigstellung-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
minimal	ADJD.Pos	minimal-j
funktionierenden	ADJA.Pos.Gen.Sg.Neut	funktionierend-j
Systems	N.Reg.Gen.Sg.Neut	System-n
um	APPR	um-i
mehrere	PRO.Indef.Attr.Acc.Pl.Neut	mehrere-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
GNU-Entwickler	N.Reg.Nom.Pl.Masc	GNU-Entwickler-n
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Betreuung	N.Reg.Acc.Sg.Fem	Betreuung-n
dieser	PRO.Dem.Attr.Gen.Pl.Fem	diese-p
Schnittstellen	N.Reg.Gen.Pl.Fem	Schnittstelle-n
und	CONJ.Coord	und-c
zusätzliche	ADJA.Pos.Acc.Pl.Fem	zusätzlich-j
Funktionen	N.Reg.Acc.Pl.Fem	Funktion-n
zu	APPR	zu-i
bestehenden	ADJA.Pos.Dat.Pl.Fem	bestehend-j
Komponenten	N.Reg.Dat.Pl.Fem	Komponente-n
aufbrachten	VFIN.Full.3.Pl.Past.Ind	aufbringen-v
<g/>
,	SYM.Pun.Comma	,-x
anstatt	CONJ.SubInf	anstatt-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
fehlende	ADJA.Pos.Acc.Sg.Fem	fehlend-j
Komponente	N.Reg.Acc.Sg.Fem	Komponente-n
nach	APPR	nach-i
der	ART.Def.Dat.Sg.Fem	die-x
anderen	PRO.Indef.Subst.Dat.Sg.Fem	andere-p
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.*.*.*	GNU-n
Hurd	N.Name.Nom.Sg.*	Hurd-n
</s>
</align>
<align>
<s>
Um	APPR	um-i
1990	CARD	[number]-m
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
fast	ADV	fast-a
fertig	ADJD.Pos	fertig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
einzige	ADJA.Pos.Nom.Sg.Fem	einzig-j
größere	ADJA.Comp.Nom.Sg.Fem	groß-j
fehlende	ADJA.Pos.Nom.Sg.Fem	fehlend-j
Komponente	N.Reg.Nom.Sg.Fem	Komponente-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hatten	VFIN.Aux.1.Pl.Past.Ind	haben-v
beschlossen	VPP.Full.Psp	beschließen-v
<g/>
,	SYM.Pun.Comma	,-x
unseren	PRO.Poss.Attr.Acc.Sg.Masc	unsre-p
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
als	APPR	als-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Sammlung	N.Reg.Acc.Sg.Fem	Sammlung-n
von	APPR	von-i
Serverprozessen	N.Reg.Dat.Pl.Masc	Serverprozess-n
zu	PART.Zu	zu-x
implementieren	VINF.Full	implementieren-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
auf	APPR	auf-i
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
Mach	VIMP.Full.2.Sg	machen-v
laufen	VFIN.Full.3.Pl.Pres.Ind	laufen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mach	VIMP.Full.2.Sg	machen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Carnegie	N.Name.Nom.Sg.*	Carnegie-n
Mellon-Universität	N.Reg.Dat.Sg.Fem	Mellon-Universität-n
und	CONJ.Coord	und-c
dann	ADV	dann-a
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Universität	N.Reg.Dat.Sg.Fem	Universität-n
von	APPR	von-i
Utah	N.Name.Dat.Sg.Neut	Utah-n
entwickelter	ADJA.Pos.Gen.Pl.Masc	entwickelt-j
Mikrokern	N.Reg.Dat.Pl.Masc	Mikrokern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Fem	GNU-n
HURD	N.Name.Nom.Sg.Fem	HURD-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Sammlung	N.Reg.Nom.Sg.Fem	Sammlung-n
von	APPR	von-i
Servern	N.Reg.Dat.Pl.Masc	Server-n
(	SYM.Paren.Left	(-x
<g/>
d.	PRO.Dem.Subst.Nom.Sg.Neut	d.-p
h.	VFIN.Full.3.Sg.Pres.Ind	h.-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Herde	N.Reg.Nom.Sg.Fem	Herde-n
GNUs	N.Name.Gen.Sg.*	GNUs-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
auf	APPR	auf-i
dem	ART.Def.Dat.Sg.Masc	die-x
Mach	VIMP.Full.2.Sg	machen-v
laufen	VINF.Full	laufen-v
und	CONJ.Coord	und-c
verschiedene	ADJA.Pos.Acc.Pl.Fem	verschieden-j
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
des	ART.Def.Gen.Sg.Neut	die-x
Unix-Betriebssystemkerns	N.Reg.Gen.Sg.Neut	Unix-Betriebssystemkerns-n
erledigen	VINF.Full	erledigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Beginn	N.Reg.Nom.Sg.Masc	Beginn-n
der	ART.Def.Gen.Sg.Fem	die-x
Entwicklung	N.Reg.Gen.Sg.Fem	Entwicklung-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
verzögert	VPP.Full.Psp	verzögern-v
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
versprochen	VPP.Full.Psp	versprechen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
Freigabe	N.Reg.Acc.Sg.Fem	Freigabe-n
von	APPR	von-i
Mach	VIMP.Full.2.Sg	machen-v
als	APPR	als-i
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
warteten	VFIN.Full.3.Pl.Past.Ind	warten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Wahl	N.Reg.Acc.Sg.Fem	Wahl-n
dieses	PRO.Dem.Attr.Gen.Sg.Neut	diese-p
Designs	N.Reg.Gen.Sg.Neut	Design-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
schien	VFIN.Full.3.Sg.Past.Ind	scheinen-v
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Nom.Sg.Masc	die-x
schwierigste	ADJA.Sup.Nom.Sg.Masc	schwierig-j
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
Aufgabe	N.Reg.Gen.Sg.Fem	Aufgabe-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
:	SYM.Pun.Colon	:-x
Ein	ART.Indef.Acc.Sg.Neut	eine-x
Systemkernprogramm	N.Reg.Acc.Sg.Neut	Systemkernprogramm-n
ohne	APPR	ohne-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Source-Level-Debugger	N.Reg.Acc.Sg.Masc	Source-Level-Debugger-n
zu	PART.Zu	zu-x
debuggen	VINF.Full	debuggen-v
[	SYM.Paren.Left	[-x
<g/>
Diagnose	N.Reg.Nom.Sg.Fem	Diagnose-n
auf	APPR	auf-i
Quelltextebene	N.Reg.Dat.Sg.Fem	Quelltextebene-n
<g/>
]	SYM.Paren.Right	]-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
Aufgabe	N.Reg.Gen.Sg.Fem	Aufgabe-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
bereits	ADV	bereits-a
im	APPRART.Dat.Sg.Masc	in-i
Mach	VIMP.Full.2.Sg	machen-v
erledigt	VPP.Full.Psp	erledigen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
erwarteten	VFIN.Full.1.Pl.Past.Ind	erwarten-v
die	ART.Def.Acc.Pl.Neut	die-x
HURD-Server	N.Reg.Acc.Pl.Neut	HURD-Server-n
als	APPR	als-i
Benutzerprogramme	N.Reg.Acc.Pl.Neut	Benutzerprogramm-n
mit	APPR	mit-i
GDB	N.Name.Dat.Sg.*	GDB-n
zu	PART.Zu	zu-x
debuggen	VINF.Full	debuggen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
brauchte	VFIN.Full.3.Sg.Past.Ind	brauchen-v
lange	ADV	lange-a
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
und	CONJ.Coord	und-c
die	ART.Def.Acc.Pl.Neut	die-x
Multithread-Server	N.Reg.Acc.Pl.Neut	Multithread-Server-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
gegenseitig	ADJD.Pos	gegenseitig-j
Nachrichten	N.Reg.Acc.Pl.Fem	Nachricht-n
senden	VFIN.Full.3.Pl.Pres.Ind	senden-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
als	APPR	als-i
sehr	ADV	sehr-a
schwierig	ADJD.Pos	schwierig-j
zu	PART.Zu	zu-x
debuggen	VINF.Full	debuggen-v
erwiesen	VPP.Full.Psp	erweisen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Den	N.Name.*.*.*	Den-n
HURD	N.Name.Nom.Sg.Neut	HURD-n
zum	APPRART.Dat.Sg.Neut	zu-i
soliden	ADJA.Pos.Dat.Sg.Neut	solide-j
Arbeiten	N.Reg.Dat.Sg.Neut	Arbeit-n
zu	PART.Zu	zu-x
bringen	VINF.Full	bringen-v
<g/>
,	SYM.Pun.Comma	,-x
zog	VFIN.Full.3.Sg.Past.Ind	ziehen-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
über	APPR	über-i
mehrere	PRO.Indef.Attr.Acc.Pl.Neut	mehrere-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
hin	PART.Verb	hin-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Alix	N.Name.Nom.Sg.*	Alix-n
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
GNU-Betriebssystemkern	N.Reg.Nom.Sg.Masc	GNU-Betriebssystemkern-n
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
ursprünglich	ADJD.Pos	ursprünglich-j
nicht	PART.Neg	nicht-x
HURD	N.Name.Nom.Sg.*	HURD-n
genannt	VPP.Full.Psp	nennen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sein	PRO.Poss.Attr.Nom.Sg.Masc	seine-p
ursprünglicher	ADJA.Pos.Nom.Sg.Masc	ursprünglich-j
Name	N.Reg.Nom.Sg.Masc	Name-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
Alix	ADJD.Pos	Alix-j
-	SYM.Pun.Hyph	--x
benannt	VPP.Full.Psp	benennen-v
nach	APPR	nach-i
der	ART.Def.Dat.Sg.Fem	die-x
Frau	N.Reg.Dat.Sg.Fem	Frau-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
damals	ADV	damals-a
mein	PRO.Poss.Attr.Nom.Sg.Masc	meine-p
Schatz	N.Reg.Nom.Sg.Masc	Schatz-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Nom.Sg.Fem	eine-x
Unix-Systemadministratorin	N.Reg.Nom.Sg.Fem	Unix-Systemadministratorin-n
<g/>
,	SYM.Pun.Comma	,-x
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
darauf	PROADV.Dem	darauf-x
hingewiesen	VPP.Full.Psp	hinweisen-v
wie	CONJ.Comp	wie-c
ihr	PRO.Poss.Attr.Nom.Sg.Masc	ihre-p
Name	N.Reg.Nom.Sg.Masc	Name-n
in	APPR	in-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
allgemeines	ADJA.Pos.Acc.Sg.Neut	allgemein-j
Namensmuster	N.Reg.Acc.Sg.Neut	Namensmuster-n
für	APPR	für-i
Unix-Systemversionen	N.Reg.Acc.Pl.Fem	Unix-Systemversion-n
passen	VINF.Full	passen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Jemand	PRO.Indef.Subst.Nom.Sg.Masc	jemand-p
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
nach	APPR	nach-i
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
benennen	VINF.Full	benennen-v
<g/>
"	SYM.Quot.Left	"-x
witzelte	VFIN.Full.3.Sg.Past.Ind	witzeln-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
unter	APPR	unter-i
Freunden	N.Reg.Dat.Pl.Masc	Freund-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
sagte	VFIN.Full.3.Sg.Past.Ind	sagen-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
beschloss	VFIN.Full.3.Sg.Past.Ind	beschließen-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
namens	APPR	namens-i
Alix	N.Name.Nom.Sg.Masc	Alix-n
zu	PART.Zu	zu-x
überraschen	VINF.Full	überraschen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
blieb	VFIN.Full.3.Sg.Past.Ind	bleiben-v
nicht	PART.Neg	nicht-x
dabei	PROADV.Dem	dabei-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Michael	N.Name.Nom.Sg.Masc	Michael-n
Bushnell	N.Name.Nom.Sg.Masc	Bushnell-n
(	SYM.Paren.Left	(-x
<g/>
heute	ADV	heute-a
Thomas	N.Name.Nom.Sg.Masc	Thomas-n
Bushnell	N.Name.Nom.Sg.Masc	Bushnell-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Nom.Sg.Masc	die-x
Hauptentwickler	N.Reg.Nom.Sg.Masc	Hauptentwickler-n
des	ART.Def.Gen.Sg.Neut	die-x
Systemkerns	N.Reg.Gen.Sg.Neut	Systemkerns-n
<g/>
,	SYM.Pun.Comma	,-x
bevorzugte	VFIN.Full.3.Sg.Past.Ind	bevorzugen-v
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
HURD	N.Name.Gen.Sg.*	HURD-n
und	CONJ.Coord	und-c
definierte	VFIN.Full.3.Sg.Past.Ind	definieren-v
Alix	N.Name.Acc.Sg.*	Alix-n
neu	ADJD.Pos	neu-j
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
auf	APPR	auf-i
einen	PRO.Indef.Subst.Acc.Sg.Masc	eine-p
bestimmen	VINF.Full	bestimmen-v
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
Systemkerns	N.Reg.Gen.Sg.Neut	Systemkerns-n
zu	PART.Zu	zu-x
verweisen	VINF.Full	verweisen-v
-	SYM.Pun.Hyph	--x
den	ART.Def.Acc.Sg.Masc	die-x
Teil	N.Reg.Acc.Sg.Masc	Teil-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
Systemaufrufe	N.Reg.Acc.Pl.Masc	Systemaufruf-n
abfangen	VINF.Full	abfangen-v
und	CONJ.Coord	und-c
diese	PRO.Dem.Subst.Nom.Pl.Masc	diese-p
durch	APPR	durch-i
Senden	N.Reg.Acc.Sg.Neut	Senden-n
von	APPR	von-i
Nachrichten	N.Reg.Dat.Pl.Fem	Nachricht-n
an	APPR	an-i
die	ART.Def.Acc.Pl.Neut	die-x
Hurd-Server	N.Reg.Acc.Pl.Neut	Hurd-Server-n
behandeln	VINF.Full	behandeln-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Später	ADJD.Comp	spät-j
trennten	VFIN.Full.3.Pl.Past.Ind	trennen-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
unsere	PRO.Poss.Attr.Nom.Pl.Masc	unsre-p
Wege	N.Reg.Nom.Pl.Masc	Weg-n
und	CONJ.Coord	und-c
Alix	N.Reg.Nom.Sg.Masc	Alix-n
änderte	VFIN.Full.3.Sg.Past.Ind	ändern-v
ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Nachnamen	N.Reg.Acc.Sg.Masc	Nachname-n
<g/>
;	SYM.Pun.Sent	;-x
unabhängig	ADJD.Pos	unabhängig-j
davon	PROADV.Dem	davon-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
das	ART.Def.Nom.Sg.Neut	die-x
HURD-Design	N.Reg.Nom.Sg.Neut	HURD-Design-n
geändert	VPP.Full.Psp	ändern-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
die	ART.Def.Nom.Sg.Fem	die-x
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
Nachrichten	N.Reg.Nom.Pl.Fem	Nachricht-n
direkt	ADJD.Pos	direkt-j
an	APPR	an-i
die	ART.Def.Acc.Pl.Masc	die-x
Server	N.Reg.Acc.Pl.Masc	Server-n
senden	VINF.Full	senden-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ließ	VFIN.Full.3.Sg.Past.Ind	lassen-v
die	ART.Def.Acc.Sg.Fem	die-x
Alix-Komponente	N.Reg.Acc.Sg.Fem	Alix-Komponente-n
aus	APPR	aus-i
dem	ART.Def.Dat.Sg.Neut	die-x
Design	N.Reg.Dat.Sg.Neut	Design-n
verschwinden	VINF.Full	verschwinden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Doch	CONJ.Coord	doch-c
bevor	CONJ.SubFin	bevor-c
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Dinge	N.Reg.Nom.Pl.Neut	Ding-n
passierten	VFIN.Full.3.Pl.Past.Ind	passieren-v
<g/>
,	SYM.Pun.Comma	,-x
stieß	VFIN.Full.3.Sg.Past.Ind	stoßen-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
Freund	N.Reg.Nom.Sg.Masc	Freund-n
von	APPR	von-i
ihr	PRO.Pers.Subst.3.Dat.Sg.Fem	sie-p
auf	APPR	auf-i
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
Alix	N.Name.Nom.Sg.*	Alix-n
im	APPRART.Dat.Sg.Masc	in-i
HURD-Quellcode	N.Reg.Dat.Sg.Masc	HURD-Quellcode-n
und	CONJ.Coord	und-c
erwähnte	VFIN.Full.3.Sg.Past.Ind	erwähnen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
ihr	PRO.Pers.Subst.3.Dat.Sg.Fem	sie-p
gegenüber	PART.Verb	gegenüber-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
also	ADV	also-a
die	ART.Def.Acc.Sg.Fem	die-x
Chance	N.Reg.Acc.Sg.Fem	Chance-n
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
nach	APPR	nach-i
ihr	PRO.Pers.Subst.3.Dat.Sg.Fem	sie-p
benannten	ADJA.Pos.Acc.Sg.Masc	benannt-j
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
zu	PART.Zu	zu-x
finden	VINF.Full	finden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
GNU	N.Reg.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
</s>
</align>
<align>
<s>
GNU	N.Name.*.*.*	GNU-n
Hurd	N.Name.Nom.Sg.*	Hurd-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
produktiven	ADJA.Pos.Acc.Sg.Masc	produktiv-j
Einsatz	N.Reg.Acc.Sg.Masc	Einsatz-n
geeignet	VPP.Full.Psp	eignen-v
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
wissen	VFIN.Full.1.Pl.Pres.Ind	wissen-v
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
jemals	ADV	jemals-a
so	ADV	so-a
sein	VINF.Aux	sein-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
fähigkeitsbasierte	ADJA.Pos.Nom.Sg.Neut	fähigkeitsbasiert-j
Konzept	N.Reg.Nom.Sg.Neut	Konzept-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
direkt	ADJD.Pos	direkt-j
aus	APPR	aus-i
der	ART.Def.Dat.Sg.Fem	die-x
Flexibilität	N.Reg.Dat.Sg.Fem	Flexibilität-n
des	ART.Def.Gen.Sg.Neut	die-x
Konzepts	N.Reg.Gen.Sg.Neut	Konzept-n
ergeben	VPP.Full.Psp	ergeben-v
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
klar	ADJD.Pos	klar-j
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
Lösungen	N.Reg.Nom.Pl.Fem	Lösung-n
existieren	VFIN.Full.3.Pl.Pres.Ind	existieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Glücklicherweise	ADV	glücklicherweise-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
anderer	ADJA.Pos.Nom.Sg.Masc	ander-j
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
verfügbar	ADJD.Pos	verfügbar-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1991	CARD	[number]-m
entwickelte	VFIN.Full.3.Sg.Past.Ind	entwickeln-v
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.*.*.*	Torvalds-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Unix-kompatiblen	ADJA.Pos.Acc.Sg.Masc	Unix-kompatibel-j
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
und	CONJ.Coord	und-c
nannte	VFIN.Full.3.Sg.Past.Ind	nennen-v
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
zunächst	ADV	zunächst-a
proprietär	ADJD.Pos	proprietär-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1992	CARD	[number]-m
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	PART.Deg	zu-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Kombination	N.Reg.Nom.Sg.Fem	Kombination-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
ganz	ADJD.Pos	ganz-j
fertigen	ADJA.Pos.Dat.Sg.Neut	fertig-j
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
führte	VFIN.Full.3.Sg.Past.Ind	führen-v
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
vollständig	ADJD.Pos	vollständig-j
freien	ADJA.Pos.Dat.Sg.Neut	frei-j
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
(	SYM.Paren.Left	(-x
<g/>
die	ART.Def.Nom.Sg.Fem	die-x
Kombination	N.Reg.Nom.Sg.Fem	Kombination-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
natürlich	ADV	natürlich-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
erhebliche	ADJA.Pos.Nom.Sg.Fem	erheblich-j
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
an	APPR	an-i
sich	PRO.Refl.Subst.3.Dat.Sg.*	sie-p
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
verdanken	VINF.Full	verdanken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
heute	ADV	heute-a
tatsächlich	ADJD.Pos	tatsächlich-j
eine	ART.Indef.Acc.Sg.Fem	eine-x
Version	N.Reg.Acc.Sg.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
verwenden	VINF.Full	verwenden-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nennen	VFIN.Full.1.Pl.Pres.Ind	nennen-v
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Version	N.Reg.Acc.Sg.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
um	APPR	um-i
dessen	PRO.Rel.Attr.Gen.Sg.Neut	die-p
Zusammensetzung	N.Reg.Acc.Sg.Fem	Zusammensetzung-n
als	APPR	als-i
Kombination	N.Reg.Acc.Sg.Fem	Kombination-n
aus	APPR	aus-i
dem	ART.Def.Dat.Sg.Neut	die-x
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
als	APPR	als-i
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
auszudrücken	VINF.Full.zu	ausdrücken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bitte	ADV	bitte-a
verfallen	VFIN.Full.3.Pl.Pres.Ind	verfallen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
der	ART.Def.Dat.Sg.Fem	die-x
Praxis	N.Reg.Dat.Sg.Fem	Praxis-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
fälschlicherweise	ADV	fälschlicherweise-a
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
auf	APPR	auf-i
jemand	PRO.Indef.Subst.Acc.Sg.Masc	jemand-p
anderen	PRO.Indef.Subst.Acc.Pl.*	andere-p
zurückführt	VFIN.Full.3.Sg.Pres.Ind	zurückführen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bitte	ADV	bitte-a
geben	VFIN.Full.3.Pl.Pres.Ind	geben-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
ebensolche	ADJA.Pos.Acc.Sg.Fem	ebensolch-j
Erwähnung	N.Reg.Acc.Sg.Fem	Erwähnung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Herausforderungen	N.Reg.Nom.Pl.Fem	Herausforderung-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Zukunft	N.Reg.Dat.Sg.Fem	Zukunft-n
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Fähigkeit	N.Reg.Acc.Sg.Fem	Fähigkeit-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
breites	ADJA.Pos.Acc.Sg.Neut	breit-j
Spektrum	N.Reg.Acc.Sg.Neut	Spektrum-n
an	APPR	an-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
bewiesen	VPP.Full.Psp	beweisen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
seien	VFIN.Aux.1.Pl.Pres.Subj	sein-v
unbesiegbar	ADJD.Pos	unbesiegbar-j
und	CONJ.Coord	und-c
unaufhaltsam	ADJD.Pos	unaufhaltsam-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Verschiedene	ADJA.Pos.Nom.Pl.Fem	verschieden-j
Herausforderungen	N.Reg.Nom.Pl.Fem	Herausforderung-n
machen	VFIN.Full.3.Pl.Pres.Ind	machen-v
die	ART.Def.Acc.Sg.Fem	die-x
Zukunft	N.Reg.Acc.Sg.Fem	Zukunft-n
von	APPR	von-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
unsicher	ADJD.Pos	unsicher-j
<g/>
;	SYM.Pun.Sent	;-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
erfüllen	VINF.Full	erfüllen-v
<g/>
,	SYM.Pun.Comma	,-x
erfordert	VFIN.Full.3.Sg.Pres.Ind	erfordern-v
unerschütterliche	ADJA.Pos.Acc.Pl.Fem	unerschütterlich-j
Anstrengungen	N.Reg.Acc.Pl.Fem	Anstrengung-n
und	CONJ.Coord	und-c
Durchhaltevermögen	N.Reg.Acc.Pl.Neut	Durchhaltevermögen-n
<g/>
,	SYM.Pun.Comma	,-x
manchmal	ADV	manchmal-a
für	APPR	für-i
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Art	N.Reg.Nom.Sg.Fem	Art-n
von	APPR	von-i
Entschlossenheit	N.Reg.Dat.Sg.Fem	Entschlossenheit-n
erforderlich	ADJD.Pos	erforderlich-j
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Masc	die-x
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
zeigen	VFIN.Full.3.Pl.Pres.Ind	zeigen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
schätzen	VFIN.Full.3.Pl.Pres.Ind	schätzen-v
und	CONJ.Coord	und-c
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
von	APPR	von-i
niemanden	PRO.Indef.Subst.Acc.Sg.Masc	niemand-p
wegnehmen	VINF.Full	wegnehmen-v
lassen	VINF.Full	lassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
folgenden	ADJA.Pos.Nom.Pl.Masc	folgend-j
vier	CARD	vier-m
Abschnitte	N.Reg.Nom.Pl.Masc	Abschnitt-n
erörtern	VFIN.Full.3.Pl.Pres.Ind	erörtern-v
diese	PRO.Dem.Attr.Acc.Pl.Fem	diese-p
Herausforderungen	N.Reg.Acc.Pl.Fem	Herausforderung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Geheime	ADJA.Pos.Nom.Sg.Fem	geheim-j
Hardware	N.Reg.Nom.Sg.Fem	Hardware-n
</s>
</align>
<align>
<s>
Hardwarehersteller	N.Reg.Nom.Pl.Masc	Hardwarehersteller-n
tendieren	VFIN.Full.3.Pl.Pres.Ind	tendieren-v
zunehmend	ADJD.Pos	zunehmend-j
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
Hardwarespezifikationen	N.Reg.Acc.Pl.Fem	Hardwarespezifikation-n
geheim	ADJD.Pos	geheim-j
zu	PART.Zu	zu-x
halten	VINF.Full	halten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
schwierig	ADJD.Pos	schwierig-j
<g/>
,	SYM.Pun.Comma	,-x
freie	ADJA.Pos.Acc.Pl.Masc	frei-j
Treiber	N.Reg.Acc.Pl.Masc	Treiber-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
XFree86	N.Reg.Nom.Sg.Neut	XFree86-n
neue	ADJA.Pos.Acc.Sg.Fem	neu-j
Hardware	N.Reg.Acc.Sg.Fem	Hardware-n
unterstützen	VINF.Full	unterstützen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
heute	ADV	heute-a
vollständig	ADJD.Pos	vollständig-j
freie	ADJA.Pos.Nom.Pl.Neut	frei-j
Systeme	N.Reg.Nom.Pl.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
morgen	ADV	morgen-a
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
die	ART.Def.Acc.Pl.Masc	die-x
Rechner	N.Reg.Acc.Pl.Masc	Rechner-n
von	APPR	von-i
morgen	ADV	morgen-a
nicht	PART.Neg	nicht-x
unterstützen	VINF.Full	unterstützen-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
zwei	CARD	zwei-m
Wege	N.Reg.Acc.Pl.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
mit	APPR	mit-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Problem	N.Reg.Dat.Sg.Neut	Problem-n
fertig	ADJD.Pos	fertig-j
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
mit	APPR	mit-i
Reverse	N.Name.Dat.Sg.*	Reverse-n
Engineering	N.Reg.Acc.Sg.Neut	Engineering-n
'	SYM.Quot.Right	'-x
<g/>
Nachkonstruktion	N.Reg.Nom.Sg.Fem	Nachkonstruktion-n
<g/>
'	SYM.Quot.Right	'-x
herausfinden	VINF.Full	herausfinden-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
die	ART.Def.Acc.Sg.Fem	die-x
Hardware	N.Reg.Acc.Sg.Fem	Hardware-n
unterstützen	VINF.Full	unterstützen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Rest	N.Reg.Nom.Sg.Masc	Rest-n
von	APPR	von-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
die	ART.Def.Acc.Sg.Fem	die-x
Hardware	N.Reg.Acc.Sg.Fem	Hardware-n
wählen	VINF.Full	wählen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
von	APPR	von-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
unterstützt	VPP.Full.Psp	unterstützen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
;	SYM.Pun.Sent	;-x
bei	APPR	bei-i
steigender	ADJA.Pos.Dat.Sg.Fem	steigend-j
Nutzerzahl	N.Reg.Dat.Sg.Fem	Nutzerzahl-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
Geheimhalten	N.Reg.Dat.Pl.Masc	Geheimhalt-n
der	ART.Def.Gen.Pl.Fem	die-x
Spezifikationen	N.Reg.Gen.Pl.Fem	Spezifikation-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
selbstzerstörerische	ADJA.Pos.Acc.Sg.Fem	selbstzerstörerisch-j
Politik	N.Reg.Acc.Sg.Fem	Politik-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Reverse	N.Reg.Nom.Sg.Fem	Reverse-n
Engineering	N.Reg.Nom.Sg.Neut	Engineering-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
äußerst	ADV	äußerst-a
umfangreiche	ADJA.Pos.Nom.Sg.Fem	umfangreich-j
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
mit	APPR	mit-i
ausreichender	ADJA.Pos.Dat.Sg.Fem	ausreichend-j
Entschlossenheit	N.Reg.Dat.Sg.Fem	Entschlossenheit-n
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
zu	PART.Zu	zu-x
übernehmen	VINF.Full	übernehmen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ja	PART.Ans	ja-x
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
starkes	ADJA.Pos.Acc.Sg.Neut	stark-j
Gefühl	N.Reg.Acc.Sg.Neut	Gefühl-n
aufgebaut	VPP.Full.Psp	aufbauen-v
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Frage	N.Reg.Acc.Sg.Fem	Frage-n
des	ART.Def.Gen.Sg.Neut	die-x
Prinzips	N.Reg.Gen.Sg.Neut	Prinzip-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
und	CONJ.Coord	und-c
unfreie	ADJA.Pos.Nom.Pl.Masc	unfrei-j
Treiber	N.Reg.Nom.Pl.Masc	Treiber-n
unerträglich	ADJD.Pos	unerträglich-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
zusätzliches	ADJA.Pos.Acc.Sg.Neut	zusätzlich-j
Geld	N.Reg.Acc.Sg.Neut	Geld-n
spenden	VINF.Full	spenden-v
oder	CONJ.Coord	oder-c
sogar	ADV	sogar-a
ein	ART.Indef.*.*.*	eine-x
wenig	PRO.Indef.Attr.*.*.*	wenig-p
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
freie	ADJA.Pos.Acc.Pl.Masc	frei-j
Treiber	N.Reg.Acc.Pl.Masc	Treiber-n
nutzen	VINF.Full	nutzen-v
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ja	PART.Ans	ja-x
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Sg.Fem	die-x
Entschlossenheit	N.Reg.Nom.Sg.Fem	Entschlossenheit-n
<g/>
,	SYM.Pun.Comma	,-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
weit	ADJD.Pos	weit-j
verbreitet	VPP.Full.Psp	verbreiten-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
Anmerkung	N.Reg.Nom.Sg.Fem	Anmerkung-n
<g/>
:	SYM.Pun.Colon	:-x
Dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
erstreckt	VFIN.Full.3.Sg.Pres.Ind	erstrecken-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auch	ADV	auch-a
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
BIOS	N.Reg.Acc.Sg.Neut	BIOS-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
freies	ADJA.Pos.Nom.Sg.Neut	frei-j
BIOS	N.Reg.Nom.Sg.Neut	BIOS-n
namens	APPR	namens-i
LibreBoot	N.Name.Nom.Sg.Masc	LibreBoot-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Problem	N.Reg.Nom.Sg.Neut	Problem-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Spezifikationen	N.Reg.Dat.Pl.Fem	Spezifikation-n
für	APPR	für-i
Rechner	N.Reg.Acc.Pl.Masc	Rechner-n
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
LibreBoot	N.Name.Nom.Sg.*	LibreBoot-n
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
ohne	APPR	ohne-i
unfreie	ADJA.Pos.Acc.Sg.Neut	unfrei-j
Binary	N.Name.*.*.*	Binary-n
Large	N.Name.*.*.*	Large-n
Objects	N.Name.*.*.*	Objects-n
'	SYM.Quot.Right	'-x
<g/>
BLOBs	N.Name.Gen.Sg.*	BLOBs-n
<g/>
'	SYM.Quot.Right	'-x
unterstützen	VINF.Full	unterstützen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Stand	N.Reg.Nom.Sg.Masc	Stand-n
<g/>
:	SYM.Pun.Colon	:-x
2008	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
Unfreie	ADJA.Pos.Acc.Pl.Fem	unfrei-j
Bibliotheken	N.Reg.Acc.Pl.Fem	Bibliothek-n
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Bibliothek	N.Reg.Nom.Sg.Fem	Bibliothek-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
freien	ADJA.Pos.Dat.Sg.Neut	frei-j
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
ausgeführt	VPP.Full.Psp	ausführen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
verhält	VFIN.Full.3.Sg.Pres.Ind	verhalten-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
für	APPR	für-i
Freie-Software-Entwickler	N.Reg.Acc.Pl.Masc	Freie-Software-Entwickler-n
wie	CONJ.Comp	wie-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
Falle	N.Reg.Dat.Sg.Masc	Fall-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
attraktiven	ADJA.Pos.Nom.Pl.Fem	attraktiv-j
Funktionen	N.Reg.Nom.Pl.Fem	Funktion-n
der	ART.Def.Gen.Sg.Fem	die-x
Bibliothek	N.Reg.Gen.Sg.Fem	Bibliothek-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Köder	N.Reg.Nom.Sg.Masc	Köder-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
schnappt	VFIN.Full.3.Sg.Pres.Ind	schnappen-v
die	ART.Def.Nom.Sg.Fem	die-x
Falle	N.Reg.Nom.Sg.Fem	Falle-n
zu	PART.Verb	zu-x
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
nicht	PART.Neg	nicht-x
nutzbringend	ADJD.Pos	nutzbringend-j
Teil	N.Reg.Nom.Sg.Masc	Teil-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
freien	ADJA.Pos.Gen.Sg.Neut	frei-j
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
sein	VINF.Aux	sein-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
(	SYM.Paren.Left	(-x
<g/>
streng	VIMP.Full.2.Sg	strengen-v
genommen	VPP.Full.Psp	nehmen-v
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
einbinden	VINF.Full	einbinden-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
mit	APPR	mit-i
fehlender	ADJA.Pos.Dat.Sg.Fem	fehlend-j
Bibliothek	N.Reg.Dat.Sg.Fem	Bibliothek-n
unmöglich	ADJD.Pos	unmöglich-j
ausgeführt	VPP.Full.Psp	ausführen-v
werden	VINF.Aux	werden-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Noch	ADV	noch-a
schlimmer	ADJD.Comp	schlimm-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
die	ART.Def.Acc.Sg.Fem	die-x
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Bibliothek	N.Reg.Acc.Sg.Fem	Bibliothek-n
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
immer	ADV	immer-a
beliebter	ADJD.Comp	beliebt-j
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
und	CONJ.Coord	und-c
so	ADV	so-a
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
ahnungslose	ADJA.Pos.Acc.Pl.Masc	ahnungslos-j
Programmierer	N.Reg.Acc.Pl.Masc	Programmierer-n
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Falle	N.Reg.Acc.Sg.Fem	Falle-n
lockt	VFIN.Full.3.Sg.Pres.Ind	locken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
erste	ADJA.Pos.Nom.Sg.Masc	erst-j
Fall	N.Reg.Nom.Sg.Masc	Fall-n
dieses	PRO.Dem.Attr.Gen.Sg.Neut	diese-p
Problems	N.Reg.Gen.Sg.Neut	Problem-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Motif-Werkzeugsatz	N.Reg.Nom.Sg.Masc	Motif-Werkzeugsatz-n
<g/>
,	SYM.Pun.Comma	,-x
damals	ADV	damals-a
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
80ern	N.Reg.Dat.Pl.Masc	80ern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Obwohl	CONJ.SubFin	obwohl-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
noch	ADV	noch-a
keine	PRO.Indef.Attr.Acc.Pl.Neut	keine-p
freien	ADJA.Pos.Acc.Pl.Neut	frei-j
Betriebssysteme	N.Reg.Acc.Pl.Neut	Betriebssystem-n
gab	VFIN.Full.3.Sg.Past.Ind	geben-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
klar	ADJD.Pos	klar-j
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Inter.Attr.Nom.Pl.Neut	welche-p
Probleme	N.Reg.Nom.Pl.Neut	Problem-n
Motif	N.Name.Nom.Sg.Masc	Motif-n
später	ADJD.Comp	später-j
verursachen	VINF.Full	verursachen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
reagierte	VFIN.Full.3.Sg.Past.Ind	reagieren-v
auf	APPR	auf-i
zweierlei	PRO.Indef.Attr.*.*.*	zweierlei-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
<g/>
:	SYM.Pun.Colon	:-x
indem	CONJ.SubFin	indem-c
einzelne	ADJA.Pos.Nom.Pl.Neut	einzeln-j
Freie-Software-Projekte	N.Reg.Nom.Pl.Neut	Freie-Software-Projekt-n
gebeten	VPP.Full.Psp	bitten-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Neut	die-x
freien	ADJA.Pos.Acc.Pl.Neut	frei-j
Steuerelemente	N.Reg.Acc.Pl.Neut	Steuerelement-n
des	ART.Def.Gen.Sg.Masc	die-x
X-Werkzeugsatzes	N.Reg.Gen.Sg.Masc	X-Werkzeugsatz-n
als	CONJ.Comp	als-c
auch	ADV	auch-a
Motif	N.Reg.Nom.Sg.Masc	Motif-n
zu	PART.Zu	zu-x
unterstützen	VINF.Full	unterstützen-v
und	CONJ.Coord	und-c
indem	CONJ.SubFin	indem-c
nach	ADV	nach-a
jemand	PRO.Indef.Subst.Nom.Sg.Masc	jemand-p
gesucht	VPP.Full.Psp	suchen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
freien	ADJA.Pos.Acc.Sg.Masc	frei-j
Ersatz	N.Reg.Acc.Sg.Masc	Ersatz-n
für	APPR	für-i
Motif	N.Reg.Acc.Sg.Masc	Motif-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
dauerte	VFIN.Full.3.Sg.Past.Ind	dauern-v
viele	PRO.Indef.Attr.Acc.Pl.Neut	viele-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
<g/>
;	SYM.Pun.Sent	;-x
LessTif	N.Name.Nom.Sg.Masc	LessTif-n
<g/>
,	SYM.Pun.Comma	,-x
von	APPR	von-i
ungarischen	ADJA.Pos.Dat.Pl.Masc	ungarisch-j
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
unterstütze	VFIN.Full.3.Sg.Pres.Subj	unterstützen-v
erst	ADV	erst-a
ab	APPR	ab-i
1997	CARD	[number]-m
die	ART.Def.Acc.Pl.Fem	die-x
meisten	PRO.Indef.Attr.Acc.Pl.Fem	meiste-p
Motif-Anwendungen	N.Reg.Acc.Pl.Fem	Motif-Anwendung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zwischen	APPR	zwischen-i
1996	CARD	[number]-m
und	CONJ.Coord	und-c
1998	CARD	[number]-m
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
andere	ADJA.Pos.Nom.Sg.Fem	ander-j
Bibliothek	N.Reg.Nom.Sg.Fem	Bibliothek-n
namens	APPR	namens-i
Qt	N.Name.Nom.Sg.*	Qt-n
als	APPR	als-i
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
grafische	ADJA.Pos.Nom.Sg.Fem	grafisch-j
Benutzerschnittstelle	N.Reg.Nom.Sg.Fem	Benutzerschnittstelle-n
'	SYM.Quot.Right	'-x
<g/>
GUI	N.Name.Nom.Sg.*	GUI-n
<g/>
'	SYM.Quot.Right	'-x
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
umfangreichen	ADJA.Pos.Dat.Sg.Fem	umfangreich-j
Freie-Software-Sammlung	N.Reg.Dat.Sg.Fem	Freie-Software-Sammlung-n
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Dat.Sg.Fem	die-x
KDE-Arbeitsumgebung	N.Reg.Dat.Sg.Fem	KDE-Arbeitsumgebung-n
<g/>
,	SYM.Pun.Comma	,-x
genutzt	VPP.Full.Psp	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
GNU	N.Reg.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systeme	N.Reg.Nom.Pl.Neut	Linux-System-n
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
außerstande	ADV	außerstande-a
KDE	N.Name.Nom.Sg.Neut	KDE-n
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
die	ART.Def.Nom.Sg.Fem	die-x
Bibliothek	N.Reg.Nom.Sg.Fem	Bibliothek-n
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
nicht	PART.Neg	nicht-x
genutzt	VPP.Full.Psp	nutzen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Allerdings	ADV	allerdings-a
fügten	VFIN.Full.3.Pl.Past.Ind	fügen-v
einige	PRO.Indef.Attr.Nom.Pl.Masc	einige-p
kommerzielle	ADJA.Pos.Nom.Pl.Masc	kommerziell-j
Distributoren	N.Reg.Nom.Pl.Masc	Distributor-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systemen	N.Reg.Dat.Pl.Neut	Linux-System-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
nicht	PART.Neg	nicht-x
streng	ADJD.Pos	streng-j
an	APPR	an-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
festhielten	VFIN.Full.3.Pl.Past.Subj	festhalten-v
<g/>
,	SYM.Pun.Comma	,-x
KDE	N.Name.Nom.Sg.Neut	KDE-n
ihren	PRO.Poss.Attr.Dat.Pl.Neut	ihre-p
Systemen	N.Reg.Dat.Pl.Neut	System-n
hinzu	PART.Verb	hinzu-x
-	SYM.Pun.Hyph	--x
produzierten	VFIN.Full.3.Pl.Past.Ind	produzieren-v
so	ADV	so-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
System	N.Reg.Nom.Sg.Neut	System-n
mit	APPR	mit-i
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Möglichkeiten	N.Reg.Dat.Pl.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
weniger	PRO.Indef.Attr.*.*.*	weniger-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
KDE-Gruppe	N.Reg.Nom.Sg.Fem	KDE-Gruppe-n
ermutigte	VFIN.Full.3.Sg.Past.Ind	ermutigen-v
aktiv	ADJD.Pos	aktiv-j
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
Qt	ADJD.Pos	Qt-j
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
Millionen	N.Reg.Nom.Pl.Fem	Million-n
von	APPR	von-i
neuen	ADJA.Pos.Dat.Pl.Masc	neu-j
"	SYM.Quot.Left	"-x
<g/>
Linux-Nutzern	N.Reg.Dat.Pl.Masc	Linux-Nutzer-n
<g/>
"	SYM.Quot.Left	"-x
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
nie	ADV	nie-a
der	ART.Def.Dat.Sg.Fem	die-x
Idee	N.Reg.Dat.Sg.Fem	Idee-n
ausgesetzt	VPP.Full.Psp	aussetzen-v
worden	VPP.Aux.Psp	werden-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
damit	PROADV.Dem	damit-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
Problem	N.Reg.Acc.Sg.Neut	Problem-n
gab	VFIN.Full.3.Sg.Past.Ind	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Situation	N.Reg.Nom.Sg.Fem	Situation-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
makaber	ADJD.Pos	makaber-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Freie-Software-Gemeinschaft	N.Reg.Nom.Sg.Fem	Freie-Software-Gemeinschaft-n
reagierte	VFIN.Full.3.Sg.Past.Ind	reagieren-v
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
Problem	N.Reg.Acc.Sg.Neut	Problem-n
in	APPR	in-i
zweierlei	PRO.Indef.Attr.*.*.*	zweierlei-p
Weise	N.Reg.Dat.Sg.Fem	Weise-n
<g/>
:	SYM.Pun.Colon	:-x
GNOME	N.Reg.Nom.Pl.Masc	Gnom-n
und	CONJ.Coord	und-c
Harmony	N.Reg.Nom.Sg.Fem	Harmony-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNOME	N.Reg.Nom.Pl.Masc	Gnom-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
Network	FM	Network-x
Object	FM	Object-x
Model	N.Reg.Acc.Sg.Neut	Model-n
Environment	N.Reg.Nom.Sg.Neut	Environment-n
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNUs	N.Name.Gen.Sg.*	GNUs-n
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
grafischen	ADJA.Pos.Gen.Sg.Fem	grafisch-j
Benutzeroberflächen-Umgebung	N.Reg.Gen.Sg.Fem	Benutzeroberflächen-Umgebung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
1997	CARD	[number]-m
von	APPR	von-i
Miguel	N.Name.Nom.Sg.Masc	Miguel-n
de	N.Name.*.*.*	de-n
Icaza	N.Name.Dat.Sg.Masc	Icaza-n
gestartet	VPP.Full.Psp	starten-v
und	CONJ.Coord	und-c
entwickelt	VPP.Full.Psp	entwickeln-v
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Unterstützung	N.Reg.Dat.Sg.Fem	Unterstützung-n
von	N.Name.*.*.*	von-n
Red	N.Name.*.*.*	Red-n
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
GNOME	N.Reg.Acc.Pl.Masc	Gnom-n
auf	APPR	auf-i
den	ART.Def.Acc.Sg.Masc	die-x
Weg	N.Reg.Acc.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
ausschließlich	ADV	ausschließlich-a
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
ähnliche	ADJA.Pos.Acc.Sg.Fem	ähnlich-j
Ausstattung	N.Reg.Acc.Sg.Fem	Ausstattung-n
der	ART.Def.Gen.Sg.Fem	die-x
Arbeitsumgebung	N.Reg.Gen.Sg.Fem	Arbeitsumgebung-n
zu	PART.Zu	zu-x
schaffen	VINF.Full	schaffen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
auch	ADV	auch-a
technische	ADJA.Pos.Acc.Pl.Masc	technisch-j
Vorteile	N.Reg.Acc.Pl.Masc	Vorteil-n
wie	CONJ.Comp	wie-c
die	ART.Def.Acc.Sg.Fem	die-x
Unterstützung	N.Reg.Acc.Sg.Fem	Unterstützung-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Vielzahl	N.Reg.Gen.Sg.Fem	Vielzahl-n
von	APPR	von-i
Programmiersprachen	N.Reg.Dat.Pl.Fem	Programmiersprache-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
C	CARD	C-m
<g/>
++	N.Reg.*.*.Neut	++-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	ART.Def.Nom.Sg.Neut	die-x
wichtigste	ADJA.Sup.Nom.Sg.Neut	wichtig-j
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
:	SYM.Pun.Colon	:-x
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
erforderlich	ADJD.Pos	erforderlich-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Harmony	N.Name.Nom.Sg.*	Harmony-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
kompatible	ADJA.Pos.Nom.Sg.Fem	kompatibel-j
Ersatzbibliothek	N.Reg.Nom.Sg.Fem	Ersatzbibliothek-n
<g/>
,	SYM.Pun.Comma	,-x
entworfen	VPP.Full.Psp	entwerfen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
<g/>
,	SYM.Pun.Comma	,-x
KDE-Software	N.Reg.Acc.Pl.Masc	KDE-Software-n
ohne	APPR	ohne-i
Qt	N.Reg.Acc.Sg.Masc	Qt-n
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
November	N.Reg.Dat.Sg.Masc	November-n
1998	CARD	[number]-m
kündigten	VFIN.Full.3.Pl.Past.Ind	kündigen-v
die	ART.Def.Nom.Pl.Masc	die-x
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
von	APPR	von-i
Qt	N.Name.Dat.Sg.Neut	Qt-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Änderung	N.Reg.Acc.Sg.Fem	Änderung-n
der	ART.Def.Gen.Sg.Fem	die-x
Lizenz	N.Reg.Gen.Sg.Fem	Lizenz-n
an	PART.Verb	an-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Tat	N.Reg.Acc.Sg.Fem	Tat-n
umgesetzt	VPP.Full.Psp	umsetzen-v
<g/>
,	SYM.Pun.Comma	,-x
Qt	N.Reg.Acc.Sg.Masc	Qt-n
zu	APPR	zu-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
machen	VINF.Full	machen-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
um	APPR	um-i
sicher	ADJD.Pos	sicher-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
denke	VFIN.Full.1.Sg.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
zum	APPRART.Dat.Sg.Masc	zu-i
Teil	N.Reg.Dat.Sg.Masc	Teil-n
durch	APPR	durch-i
die	ART.Def.Acc.Sg.Fem	die-x
entschiedene	ADJA.Pos.Acc.Sg.Fem	entschieden-j
Reaktion	N.Reg.Acc.Sg.Fem	Reaktion-n
der	ART.Def.Gen.Sg.Fem	die-x
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
Problem	N.Reg.Acc.Sg.Neut	Problem-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Qt	N.Reg.Acc.Sg.Neut	Qt-n
darstellte	VFIN.Full.3.Sg.Past.Ind	darstellen-v
als	CONJ.Comp	als-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
unfrei	ADJD.Pos	unfrei-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
verursacht	VPP.Full.Psp	verursachen-v
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
(	SYM.Paren.Left	(-x
<g/>
die	ART.Def.Nom.Sg.Fem	die-x
neue	ADJA.Pos.Nom.Sg.Fem	neu-j
Lizenz	N.Reg.Nom.Sg.Fem	Lizenz-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ungeeignet	ADJD.Pos	ungeeignet-j
und	CONJ.Coord	und-c
ungerecht	ADJD.Pos	ungerecht-j
<g/>
,	SYM.Pun.Comma	,-x
so	ADV	so-a
bleibt	VFIN.Full.3.Sg.Pres.Ind	bleiben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wünschenswert	ADJD.Pos	wünschenswert-j
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
von	APPR	von-i
Qt	N.Reg.Dat.Sg.Masc	Qt-n
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
Nachträgliche	ADJA.Pos.Nom.Sg.Fem	nachträglich-j
Anmerkung	N.Reg.Nom.Sg.Fem	Anmerkung-n
<g/>
:	SYM.Pun.Colon	:-x
Im	APPRART.Dat.Sg.Masc	in-i
September	N.Reg.Dat.Sg.Masc	September-n
2000	CARD	[number]-m
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
Qt	N.Name.Nom.Sg.*	Qt-n
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
GNU	N.Name.Dat.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.Neut	GPL-n
neu	ADJD.Pos	neu-j
freigegeben	VPP.Full.Psp	freigeben-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Problem	N.Reg.Acc.Sg.Neut	Problem-n
im	APPRART.Dat.Sg.Masc	in-i
Grunde	N.Reg.Dat.Sg.Masc	Grund-n
löste	VFIN.Full.3.Sg.Past.Ind	lösen-v
<g/>
.	SYM.Pun.Sent	.-x
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
antworten	VFIN.Full.1.Pl.Pres.Ind	antworten-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
nächste	ADJA.Sup.Acc.Sg.Fem	nah-j
verlockende	ADJA.Pos.Acc.Sg.Fem	verlockend-j
unfreie	ADJA.Pos.Acc.Sg.Fem	unfrei-j
Bibliothek	N.Reg.Acc.Sg.Fem	Bibliothek-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Versteht	VFIN.Full.3.Sg.Pres.Ind	verstehen-v
die	ART.Def.Nom.Sg.Fem	die-x
gesamte	ADJA.Pos.Nom.Sg.Fem	gesamt-j
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
die	ART.Def.Acc.Sg.Fem	die-x
Notwendigkeit	N.Reg.Acc.Sg.Fem	Notwendigkeit-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Falle	N.Reg.Acc.Sg.Fem	Falle-n
zu	PART.Zu	zu-x
tappen	VINF.Full	tappen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Oder	CONJ.Coord	oder-c
geben	VFIN.Full.1.Pl.Pres.Ind	geben-v
viele	PRO.Indef.Subst.Nom.Pl.Masc	viele-p
von	APPR	von-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zugunsten	APPR	zugunsten-i
Bequemlichkeit	N.Reg.Dat.Sg.Fem	Bequemlichkeit-n
auf	PART.Verb	auf-x
und	CONJ.Coord	und-c
erzeugen	VFIN.Full.3.Pl.Pres.Ind	erzeugen-v
so	ADV	so-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
größeres	ADJA.Comp.Acc.Sg.Neut	groß-j
Problem	N.Reg.Acc.Sg.Neut	Problem-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
Zukunft	N.Reg.Nom.Sg.Fem	Zukunft-n
hängt	VFIN.Full.3.Sg.Pres.Ind	hängen-v
von	APPR	von-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Philosophie	N.Reg.Dat.Sg.Fem	Philosophie-n
ab	PART.Verb	ab-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Softwarepatente	N.Reg.Nom.Pl.Neut	Softwarepatent-n
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
schlimmste	ADJA.Sup.Nom.Sg.Fem	schlimm-j
Bedrohung	N.Reg.Nom.Sg.Fem	Bedrohung-n
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
konfrontiert	ADJD.Pos	konfrontiert-j
sehen	VINF.Full	sehen-v
stammt	VFIN.Full.3.Sg.Pres.Ind	stammen-v
von	APPR	von-i
Softwarepatenten	N.Reg.Dat.Pl.Neut	Softwarepatent-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
für	APPR	für-i
bis	ADV	bis-a
zu	ADV	zu-a
zwanzig	CARD	zwanzig-m
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
Algorithmen	N.Reg.Acc.Pl.Masc	Algorithmus-n
und	CONJ.Coord	und-c
Funktionen	N.Reg.Acc.Pl.Fem	Funktion-n
für	APPR	für-i
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
tabu	ADJD.Pos	tabu-j
setzen	VINF.Full	setzen-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
Patente	N.Reg.Nom.Pl.Neut	Patent-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
LZW-Komprimierungsverfahren	N.Reg.Acc.Sg.Neut	LZW-Komprimierungsverfahren-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
1983	CARD	[number]-m
beantragt	VPP.Full.Psp	beantragen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
noch	ADV	noch-a
immer	ADV	immer-a
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
freigeben	VFIN.Full.3.Pl.Pres.Ind	freigeben-v
<g/>
,	SYM.Pun.Comma	,-x
um	APPR	um-i
ordnungsgemäß	ADJD.Pos	ordnungsgemäß-j
komprimierte	ADJA.Pos.Acc.Pl.Fem	komprimiert-j
GIF-Dateien	N.Reg.Acc.Pl.Fem	GIF-Datei-n
(	SYM.Paren.Left	(-x
<g/>
Graphics	N.Name.Nom.*.*	Graphics-n
Interchange	ADJA.Pos.Nom.Sg.Neut	Interchang-j
Format	N.Reg.Nom.Sg.Neut	Format-n
<g/>
)	SYM.Paren.Right	)-x
zu	PART.Zu	zu-x
erzeugen	VINF.Full	erzeugen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
*	SYM.Other.Aster	*-x
<g/>
)	SYM.Paren.Right	)-x
1998	CARD	[number]-m
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
freies	ADJA.Pos.Nom.Sg.Neut	frei-j
Programm	N.Reg.Nom.Sg.Neut	Programm-n
zur	APPRART.Dat.Sg.Fem	zu-i
Produktion	N.Reg.Dat.Sg.Fem	Produktion-n
von	APPR	von-i
komprimiertem	ADJA.Pos.Dat.Sg.Neut	komprimiert-j
MP3-Audio	N.Reg.Dat.Sg.Neut	MP3-Audio-n
(	SYM.Paren.Left	(-x
<g/>
MPEG-1	N.Name.Dat.Sg.*	MPEG-1-n
Audio	N.Reg.Nom.Sg.*	Audio-n
Layer	N.Name.Nom.Sg.*	Layer-n
3	CARD	3-m
<g/>
)	SYM.Paren.Right	)-x
unter	APPR	unter-i
Androhung	N.Reg.Dat.Sg.Fem	Androhung-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Patentklage	N.Reg.Gen.Sg.Fem	Patentklage-n
aus	APPR	aus-i
der	ART.Def.Dat.Sg.Fem	die-x
Distribution	N.Reg.Dat.Sg.Fem	Distribution-n
herausgenommen	VPP.Full.Psp	herausnehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
**	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
Patente	N.Reg.Acc.Pl.Neut	Patent-n
zu	PART.Zu	zu-x
bewältigen	VINF.Full	bewältigen-v
<g/>
:	SYM.Pun.Colon	:-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
nach	APPR	nach-i
Beweisen	N.Reg.Dat.Pl.Masc	Beweis-n
suchen	VINF.Full	suchen-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Patent	N.Reg.Nom.Sg.Neut	Patent-n
ungültig	ADJD.Pos	ungültig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
und	CONJ.Coord	und-c
nach	APPR	nach-i
alternativen	ADJA.Pos.Dat.Pl.Masc	alternativ-j
Wegen	N.Reg.Dat.Pl.Masc	Weg-n
suchen	VFIN.Full.3.Pl.Pres.Ind	suchen-v
um	APPR	um-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
zu	PART.Zu	zu-x
lösen	VINF.Full	lösen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
jede	PRO.Indef.Attr.Nom.Sg.Fem	jede-p
dieser	PRO.Dem.Attr.Gen.Pl.Fem	diese-p
Methoden	N.Reg.Gen.Pl.Fem	Methode-n
funktioniert	VFIN.Full.3.Sg.Pres.Ind	funktionieren-v
nur	ADV	nur-a
manchmal	ADV	manchmal-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
schlagen	VFIN.Full.3.Pl.Pres.Ind	schlagen-v
beide	PRO.Indef.Subst.Nom.Pl.*	beide-p
fehl	PART.Verb	fehl-x
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Patent	N.Reg.Nom.Sg.Neut	Patent-n
jegliche	PRO.Indef.Attr.Acc.Sg.Fem	jegliche-p
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
dazu	PROADV.Dem	dazu-x
zwingen	VINF.Full	zwingen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Eigenschaft	N.Reg.Nom.Sg.Fem	Eigenschaft-n
fehlt	VFIN.Full.3.Sg.Pres.Ind	fehlen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Masc	die-x
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nach	APPR	nach-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
langen	ADJA.Pos.Dat.Sg.Fem	lang-j
Wartezeit	N.Reg.Dat.Sg.Fem	Wartezeit-n
erlöschen	VFIN.Full.3.Pl.Pres.Ind	erlöschen-v
Patente	N.Reg.Nom.Pl.Neut	Patent-n
(	SYM.Paren.Left	(-x
<g/>
die	ART.Def.Nom.Pl.Neut	die-x
MP3-Patente	N.Reg.Nom.Pl.Neut	MP3-Patent-n
beispielsweise	ADV	beispielsweise-a
erlöschen	VFIN.Full.3.Pl.Pres.Ind	erlöschen-v
voraussichtlich	ADJD.Pos	voraussichtlich-j
bis	APPR	bis-i
2018	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
machen	VFIN.Full.1.Pl.Pres.Ind	machen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bis	APPR	bis-i
dahin	PROADV.Dem	dahin-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Diejenigen	PRO.Dem.Subst.Nom.Pl.*	diejenige-p
von	APPR	von-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
wegen	APPO.Gen	wegen-x
schätzen	VFIN.Full.3.Pl.Pres.Ind	schätzen-v
<g/>
,	SYM.Pun.Comma	,-x
bleiben	VFIN.Full.3.Pl.Pres.Ind	bleiben-v
sowieso	ADV	sowieso-a
bei	APPR	bei-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
schaffen	VFIN.Full.1.Pl.Pres.Ind	schaffen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
<g/>
,	SYM.Pun.Comma	,-x
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
ohne	APPR	ohne-i
patentierte	ADJA.Pos.Acc.Pl.Fem	patentiert-j
Funktionen	N.Reg.Acc.Pl.Fem	Funktion-n
zu	PART.Zu	zu-x
erledigen	VINF.Full	erledigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
diejenigen	PRO.Dem.Subst.Acc.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
schätzen	VFIN.Full.3.Pl.Pres.Ind	schätzen-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
als	APPR	als-i
technisch	ADJD.Pos	technisch-j
überlegen	ADJD.Pos	überlegen-j
erwarten	VFIN.Full.3.Pl.Pres.Ind	erwarten-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
einen	ART.Indef.Acc.Sg.Masc	eine-x
Misserfolg	N.Reg.Acc.Sg.Masc	Misserfolg-n
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Patent	N.Reg.Nom.Sg.Neut	Patent-n
davon	PROADV.Dem	davon-x
abhält	VFIN.Full.3.Sg.Pres.Ind	abhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Daher	PROADV.Dem	daher-x
<g/>
,	SYM.Pun.Comma	,-x
obwohl	CONJ.SubFin	obwohl-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sinnvoll	ADJD.Pos	sinnvoll-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
über	APPR	über-i
die	ART.Def.Acc.Sg.Fem	die-x
praktische	ADJA.Pos.Acc.Sg.Fem	praktisch-j
Wirksamkeit	N.Reg.Acc.Sg.Fem	Wirksamkeit-n
des	ART.Def.Gen.Sg.Neut	die-x
Bazaar-Entwicklungsmodells	N.Reg.Gen.Sg.Neut	Bazaar-Entwicklungsmodell-n
sowie	CONJ.Coord	sowie-c
der	ART.Def.Gen.Sg.Fem	die-x
Zuverlässigkeit	N.Reg.Gen.Sg.Fem	Zuverlässigkeit-n
und	CONJ.Coord	und-c
Macht	N.Reg.Gen.Sg.Fem	Macht-n
irgendeiner	PRO.Indef.Attr.Gen.Sg.Fem	irgendeine-p
freien	ADJA.Pos.Gen.Sg.Fem	frei-j
Software	N.Reg.Gen.Sg.Fem	Software-n
zu	PART.Zu	zu-x
sprechen	VINF.Full	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
dürfen	VFIN.Mod.1.Pl.Pres.Ind	dürfen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
dort	ADV	dort-a
nicht	PART.Neg	nicht-x
anhalten	VINF.Full	anhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Prinzipien	N.Reg.Acc.Pl.Neut	Prinzip-n
sprechen	VINF.Full	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Dokumentation	N.Reg.Nom.Sg.Fem	Dokumentation-n
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
größte	ADJA.Sup.Nom.Sg.Masc	groß-j
Mangel	N.Reg.Nom.Sg.Masc	Mangel-n
an	APPR	an-i
unseren	PRO.Poss.Attr.Dat.Pl.Neut	unsre-p
freien	ADJA.Pos.Dat.Pl.Neut	frei-j
Betriebssystemen	N.Reg.Dat.Pl.Neut	Betriebssystem-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
die	ART.Def.Nom.Sg.Fem	die-x
Software	N.Reg.Nom.Sg.Fem	Software-n
-	SYM.Pun.Hyph	--x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Mangel	N.Reg.Nom.Sg.Masc	Mangel-n
an	APPR	an-i
guten	ADJA.Pos.Dat.Pl.Neut	gut-j
freien	ADJA.Pos.Dat.Pl.Neut	frei-j
Handbüchern	N.Reg.Dat.Pl.Neut	Handbuch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
in	APPR	in-i
unsere	PRO.Poss.Attr.Acc.Pl.Neut	unsre-p
Systeme	N.Reg.Acc.Pl.Neut	System-n
integrieren	VINF.Full	integrieren-v
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dokumentation	N.Reg.Nom.Sg.Fem	Dokumentation-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
wesentlicher	ADJA.Pos.Nom.Sg.Masc	wesentlich-j
Bestandteil	N.Reg.Nom.Sg.Masc	Bestandteil-n
jedes	PRO.Indef.Attr.Gen.Sg.Neut	jede-p
Softwarepakets	N.Reg.Gen.Sg.Neut	Softwarepaket-n
<g/>
;	SYM.Pun.Sent	;-x
wenn	CONJ.SubFin	wenn-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
wichtiges	ADJA.Pos.Nom.Sg.Neut	wichtig-j
freies	ADJA.Pos.Nom.Sg.Neut	frei-j
Softwarepaket	N.Reg.Nom.Sg.Neut	Softwarepaket-n
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
guten	ADJA.Pos.Dat.Sg.Neut	gut-j
freien	ADJA.Pos.Dat.Sg.Neut	frei-j
Handbuch	N.Reg.Dat.Sg.Neut	Handbuch-n
erhältlich	ADJD.Pos	erhältlich-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
eine	ART.Indef.Nom.Sg.Fem	eine-x
große	ADJA.Pos.Nom.Sg.Fem	groß-j
Lücke	N.Reg.Nom.Sg.Fem	Lücke-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
heute	ADV	heute-a
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
solcher	PRO.Indef.Attr.Gen.Pl.Fem	solche-p
Lücken	N.Reg.Gen.Pl.Fem	Lücke-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Dokumentation	N.Reg.Nom.Sg.Fem	Dokumentation-n
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
des	ART.Def.Gen.Sg.Masc	die-x
Preises	N.Reg.Gen.Sg.Masc	Preis-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Kriterium	N.Reg.Nom.Sg.Neut	Kriterium-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
freien	ADJA.Pos.Gen.Sg.Neut	frei-j
Handbuchs	N.Reg.Gen.Sg.Neut	Handbuch-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
dem	ART.Def.Dat.Sg.Masc	die-x
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
ziemlich	ADV	ziemlich-a
ähnlich	ADJD.Pos	ähnlich-j
<g/>
:	SYM.Pun.Colon	:-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
darum	PROADV.Dem	darum-x
<g/>
,	SYM.Pun.Comma	,-x
allen	PRO.Indef.Attr.Dat.Pl.Masc	alle-p
Benutzern	N.Reg.Dat.Pl.Masc	Benutzer-n
bestimmte	ADJA.Pos.Acc.Pl.Fem	bestimmt-j
Freiheiten	N.Reg.Acc.Pl.Fem	Freiheit-n
zu	PART.Zu	zu-x
gewähren	VINF.Full	gewähren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Weitervertrieb	N.Reg.Nom.Sg.Masc	Weitervertrieb-n
(	SYM.Paren.Left	(-x
<g/>
einschließlich	APPR	einschließlich-i
kommerziellen	ADJA.Pos.Gen.Sg.Masc	kommerziell-j
Verkaufs	N.Reg.Gen.Sg.Masc	Verkauf-n
<g/>
)	SYM.Paren.Right	)-x
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
online	ADV	online-a
und	CONJ.Coord	und-c
auf	APPR	auf-i
Papier	N.Reg.Dat.Sg.Neut	Papier-n
erlaubt	VPP.Full.Psp	erlauben-v
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
das	ART.Def.Nom.Sg.Neut	die-x
Handbuch	N.Reg.Nom.Sg.Neut	Handbuch-n
jede	PRO.Indef.Attr.Acc.Sg.Fem	jede-p
Programmkopie	N.Reg.Acc.Sg.Fem	Programmkopie-n
begleiten	VINF.Full	begleiten-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Berechtigung	N.Reg.Nom.Sg.Fem	Berechtigung-n
zur	APPRART.Dat.Sg.Fem	zu-i
Modifikation	N.Reg.Dat.Sg.Fem	Modifikation-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ebenfalls	ADV	ebenfalls-a
von	APPR	von-i
entscheidender	ADJA.Pos.Dat.Sg.Fem	entscheidend-j
Bedeutung	N.Reg.Dat.Sg.Fem	Bedeutung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Allgemeinen	ADJA.Pos.Dat.Sg.Neut	allgemein-j
glaube	VFIN.Full.1.Sg.Pres.Ind	glauben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
Berechtigung	N.Reg.Nom.Sg.Fem	Berechtigung-n
notwendig	ADJD.Pos	notwendig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
alle	PRO.Indef.Attr.Acc.Pl.Masc	alle-p
möglichen	ADJA.Pos.Acc.Pl.Masc	möglich-j
Artikel	N.Reg.Acc.Pl.Masc	Artikel-n
und	CONJ.Coord	und-c
Bücher	N.Reg.Acc.Pl.Neut	Buch-n
modifizieren	VINF.Full	modifizieren-v
zu	PART.Zu	zu-x
dürfen	VINF.Mod	dürfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
denke	VFIN.Full.1.Sg.Pres.Ind	denken-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
oder	CONJ.Coord	oder-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
verpflichtet	VPP.Full.Psp	verpflichten-v
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
die	ART.Def.Acc.Sg.Fem	die-x
Berechtigung	N.Reg.Acc.Sg.Fem	Berechtigung-n
zu	PART.Zu	zu-x
erteilen	VINF.Full	erteilen-v
<g/>
,	SYM.Pun.Comma	,-x
Artikel	N.Reg.Acc.Pl.Masc	Artikel-n
wie	CONJ.Comp	wie-c
diesen	PRO.Dem.Subst.Acc.Sg.Masc	diese-p
zu	PART.Zu	zu-x
modifizieren	VINF.Full	modifizieren-v
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
unsere	PRO.Poss.Attr.Acc.Pl.Fem	unsre-p
Handlungen	N.Reg.Acc.Pl.Fem	Handlung-n
und	CONJ.Coord	und-c
Ansichten	N.Reg.Acc.Pl.Fem	Ansicht-n
beschreibt	VFIN.Full.3.Sg.Pres.Ind	beschreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
aber	ADV	aber-a
einen	ART.Indef.Acc.Sg.Masc	eine-x
bestimmten	ADJA.Pos.Acc.Sg.Masc	bestimmt-j
Grund	N.Reg.Acc.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
zur	APPRART.Dat.Sg.Fem	zu-i
Modifizierung	N.Reg.Dat.Sg.Fem	Modifizierung-n
für	APPR	für-i
Dokumentation	N.Reg.Acc.Sg.Fem	Dokumentation-n
von	APPR	von-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
entscheidend	ADJD.Pos	entscheidend-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Pl.Masc	die-x
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
ihr	PRO.Poss.Attr.Acc.Sg.Neut	ihre-p
Recht	N.Reg.Acc.Sg.Neut	Recht-n
ausüben	VINF.Full	ausüben-v
<g/>
,	SYM.Pun.Comma	,-x
Software	N.Reg.Acc.Pl.Fem	Software-n
zu	PART.Zu	zu-x
modifizieren	VINF.Full	modifizieren-v
und	CONJ.Coord	und-c
Funktionen	N.Reg.Acc.Pl.Fem	Funktion-n
zu	PART.Zu	zu-x
ändern	VINF.Full	ändern-v
oder	CONJ.Coord	oder-c
hinzuzufügen	VINF.Full.zu	hinzufügen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
gewissenhaft	ADJD.Pos	gewissenhaft-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ändern	VFIN.Full.3.Pl.Pres.Ind	ändern-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Handbuch	N.Reg.Acc.Sg.Neut	Handbuch-n
auch	ADV	auch-a
-	SYM.Pun.Hyph	--x
damit	PROADV.Dem	damit-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
genaue	ADJA.Pos.Acc.Sg.Fem	genau-j
und	CONJ.Coord	und-c
nutzbare	ADJA.Pos.Acc.Sg.Fem	nutzbar-j
Dokumentation	N.Reg.Acc.Sg.Fem	Dokumentation-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
modifizierten	ADJA.Pos.Dat.Sg.Neut	modifiziert-j
Programm	N.Reg.Dat.Sg.Neut	Programm-n
angeboten	VPP.Full.Psp	anbieten-v
werden	VINF.Aux	werden-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
unfreies	ADJA.Pos.Nom.Sg.Neut	unfrei-j
Handbuch	N.Reg.Nom.Sg.Neut	Handbuch-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
gewissenhaften	ADJA.Pos.Dat.Pl.Masc	gewissenhaft-j
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
nicht	PART.Neg	nicht-x
erlaubt	ADJD.Pos	erlaubt-j
die	ART.Def.Acc.Sg.Fem	die-x
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
zu	PART.Zu	zu-x
beenden	VINF.Full	beenden-v
<g/>
,	SYM.Pun.Comma	,-x
erfüllt	VFIN.Full.3.Sg.Pres.Ind	erfüllen-v
nicht	PART.Neg	nicht-x
den	ART.Def.Acc.Sg.Masc	die-x
Bedarf	N.Reg.Acc.Sg.Masc	Bedarf-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Attr.Acc.Pl.Fem	einige-p
Einschränkungen	N.Reg.Acc.Pl.Fem	Einschränkung-n
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
Modifikationen	N.Reg.Nom.Pl.Fem	Modifikation-n
vorgenommen	VPP.Full.Psp	vornehmen-v
werden	VINF.Aux	werden-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
werfen	VFIN.Full.3.Pl.Pres.Ind	werfen-v
keine	PRO.Indef.Attr.Acc.Pl.Neut	keine-p
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
auf	PART.Verb	auf-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Anforderungen	N.Reg.Nom.Pl.Fem	Anforderung-n
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Copyright-Hinweis	N.Reg.Acc.Sg.Masc	Copyright-Hinweis-n
des	ART.Def.Gen.Sg.Masc	die-x
Originalautors	N.Reg.Gen.Sg.Masc	Originalautor-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Fem	die-x
Vertriebsbedingungen	N.Reg.Acc.Pl.Fem	Vertriebsbedingung-n
oder	CONJ.Coord	oder-c
die	ART.Def.Acc.Sg.Fem	die-x
Autorenliste	N.Reg.Acc.Sg.Fem	Autorenliste-n
anzugeben	VINF.Full.zu	angeben-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
Ordnung	N.Reg.Dat.Sg.Fem	Ordnung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
auch	ADV	auch-a
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
zu	PART.Zu	zu-x
verlangen	VINF.Full	verlangen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
modifizierte	ADJA.Pos.Nom.Pl.Fem	modifiziert-j
Versionen	N.Reg.Nom.Pl.Fem	Version-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Hinweis	N.Reg.Acc.Sg.Masc	Hinweis-n
enthalten	VFIN.Full.3.Pl.Pres.Ind	enthalten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
modifiziert	VPP.Full.Psp	modifizieren-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ebenso	ADV	ebenso-a
wie	CONJ.Comp	wie-c
ganze	ADJA.Pos.Acc.Pl.Masc	ganz-j
Abschnitte	N.Reg.Acc.Pl.Masc	Abschnitt-n
vor	APPR	vor-i
dem	ART.Def.Dat.Sg.Neut	die-x
Löschen	N.Reg.Dat.Sg.Neut	Löschen-n
oder	CONJ.Coord	oder-c
Verändern	N.Reg.Dat.Sg.Neut	Verändern-n
zu	PART.Zu	zu-x
schützen	VINF.Full	schützen-v
<g/>
,	SYM.Pun.Comma	,-x
solange	CONJ.SubFin	solange-c
diese	PRO.Dem.Attr.Nom.Pl.Masc	diese-p
Abschnitte	N.Reg.Nom.Pl.Masc	Abschnitt-n
nichttechnische	ADJA.Pos.Acc.Pl.Neut	nichttechnisch-j
Themen	N.Reg.Acc.Pl.Neut	Thema-n
behandeln	VINF.Full	behandeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
Beschränkungen	N.Reg.Nom.Pl.Fem	Beschränkung-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
gewissenhaften	ADJA.Pos.Acc.Sg.Masc	gewissenhaft-j
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
nicht	PART.Neg	nicht-x
davon	PROADV.Dem	davon-x
abhalten	VINF.Full	abhalten-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Handbuch	N.Reg.Acc.Sg.Neut	Handbuch-n
dem	ART.Def.Dat.Sg.Neut	die-x
modifizierten	ADJA.Pos.Dat.Sg.Neut	modifiziert-j
Programm	N.Reg.Dat.Sg.Neut	Programm-n
anzupassen	VINF.Full.zu	anpassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Worten	N.Reg.Dat.Pl.Neut	Wort-n
halten	VFIN.Full.3.Pl.Pres.Ind	halten-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Freie-Software-Gemeinschaft	N.Reg.Acc.Sg.Fem	Freie-Software-Gemeinschaft-n
nicht	PART.Neg	nicht-x
davon	PROADV.Dem	davon-x
ab	PART.Verb	ab-x
<g/>
,	SYM.Pun.Comma	,-x
vollen	ADJA.Pos.Acc.Sg.Masc	voll-j
Gebrauch	N.Reg.Acc.Sg.Masc	Gebrauch-n
vom	APPRART.Dat.Sg.Neut	von-i
Handbuch	N.Reg.Dat.Sg.Neut	Handbuch-n
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Jedoch	ADV	jedoch-a
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
möglich	ADJD.Pos	möglich-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
ganzen	ADJA.Pos.Acc.Sg.Masc	ganz-j
technischen	ADJA.Pos.Acc.Sg.Masc	technisch-j
Inhalt	N.Reg.Acc.Sg.Masc	Inhalt-n
des	ART.Def.Gen.Sg.Neut	die-x
Handbuchs	N.Reg.Gen.Sg.Neut	Handbuch-n
zu	PART.Zu	zu-x
modifizieren	VINF.Full	modifizieren-v
und	CONJ.Coord	und-c
das	ART.Def.Acc.Sg.Neut	die-x
Ergebnis	N.Reg.Acc.Sg.Neut	Ergebnis-n
mit	APPR	mit-i
allen	PRO.Indef.Attr.Dat.Pl.Neut	alle-p
gängigen	ADJA.Pos.Dat.Pl.Neut	gängig-j
Medien	N.Reg.Dat.Pl.Neut	Medium-n
und	CONJ.Coord	und-c
üblichen	ADJA.Pos.Dat.Pl.Masc	üblich-j
Kanälen	N.Reg.Dat.Pl.Masc	Kanal-n
zu	PART.Zu	zu-x
verbreiten	VINF.Full	verbreiten-v
<g/>
;	SYM.Pun.Sent	;-x
andernfalls	ADV	andernfalls-a
behindern	VFIN.Full.3.Pl.Pres.Ind	behindern-v
die	ART.Def.Nom.Pl.Fem	die-x
Beschränkungen	N.Reg.Nom.Pl.Fem	Beschränkung-n
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
Handbuch	N.Reg.Nom.Sg.Neut	Handbuch-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
unfrei	ADJD.Pos	unfrei-j
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
brauchen	VFIN.Full.1.Pl.Pres.Ind	brauchen-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
anderes	ADJA.Pos.Acc.Sg.Neut	ander-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
Freie-Software-Entwickler	N.Name.Nom.Sg.*	Freie-Software-Entwickler-n
das	ART.Def.Acc.Sg.Neut	die-x
Bewusstsein	N.Reg.Acc.Sg.Neut	Bewusstsein-n
und	CONJ.Coord	und-c
die	ART.Def.Acc.Sg.Fem	die-x
Entschlossenheit	N.Reg.Acc.Sg.Fem	Entschlossenheit-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
breites	ADJA.Pos.Acc.Sg.Neut	breit-j
Spektrum	N.Reg.Acc.Sg.Neut	Spektrum-n
von	APPR	von-i
freien	ADJA.Pos.Dat.Pl.Neut	frei-j
Handbüchern	N.Reg.Dat.Pl.Neut	Handbuch-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Noch	ADV	noch-a
einmal	ADV	einmal-a
hängt	VFIN.Full.3.Sg.Pres.Ind	hängen-v
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Zukunft	N.Reg.Acc.Sg.Fem	Zukunft-n
von	APPR	von-i
Philosophie	N.Reg.Dat.Sg.Fem	Philosophie-n
ab	PART.Verb	ab-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
sprechen	VINF.Full	sprechen-v
</s>
</align>
<align>
<s>
Nach	APPR	nach-i
heutigen	ADJA.Pos.Dat.Pl.Fem	heutig-j
Schätzungen	N.Reg.Dat.Pl.Fem	Schätzung-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zehn	CARD	zehn-m
Millionen	N.Reg.Acc.Pl.Fem	Million-n
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systemen	N.Reg.Dat.Pl.Neut	Linux-System-n
wie	CONJ.Comp	wie-c
Debian	N.Name.Nom.Sg.Neut	Debian-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
Red	N.Name.*.*.*	Red-n
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
solche	PRO.Indef.Attr.Acc.Pl.Masc	solche-p
praktische	ADJA.Pos.Acc.Pl.Masc	praktisch-j
Vorteile	N.Reg.Acc.Pl.Masc	Vorteil-n
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
aus	APPR	aus-i
rein	ADJD.Pos	rein-j
praktischen	ADJA.Pos.Dat.Pl.Fem	praktisch-j
Erwägungen	N.Reg.Dat.Pl.Fem	Erwägung-n
zuströmen	VINF.Full	zuströmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
guten	ADJA.Pos.Nom.Pl.Fem	gut-j
Konsequenzen	N.Reg.Nom.Pl.Fem	Konsequenz-n
daraus	PROADV.Dem	daraus-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
offensichtlich	ADJD.Pos	offensichtlich-j
<g/>
:	SYM.Pun.Colon	:-x
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Interesse	N.Reg.Acc.Sg.Neut	Interesse-n
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Kunden	N.Reg.Acc.Pl.Masc	Kunde-n
für	APPR	für-i
Geschäfte	N.Reg.Acc.Pl.Neut	Geschäft-n
mit	APPR	mit-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
und	CONJ.Coord	und-c
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
Unternehmen	N.Reg.Acc.Pl.Neut	Unternehmen-n
zu	PART.Zu	zu-x
ermutigen	VINF.Full	ermutigen-v
<g/>
,	SYM.Pun.Comma	,-x
kommerzielle	ADJA.Pos.Nom.Sg.Fem	kommerziell-j
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
anstelle	APPR	anstelle-i
proprietärer	ADJA.Pos.Gen.Pl.Neut	proprietär-j
Softwareprodukte	N.Reg.Gen.Pl.Neut	Softwareprodukt-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	ART.Def.Nom.Sg.Neut	die-x
Interesse	N.Reg.Nom.Sg.Neut	Interesse-n
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Software	N.Reg.Dat.Sg.Fem	Software-n
wächst	VFIN.Full.3.Sg.Pres.Ind	wachsen-v
schneller	ADJD.Comp	schnell-j
als	CONJ.Comp	als-c
das	ART.Def.Nom.Sg.Neut	die-x
Bewusstsein	N.Reg.Nom.Sg.Neut	Bewusstsein-n
der	ART.Def.Gen.Sg.Fem	die-x
Philosophie	N.Reg.Gen.Sg.Fem	Philosophie-n
<g/>
,	SYM.Pun.Comma	,-x
auf	APPR	auf-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
basiert	VFIN.Full.3.Sg.Pres.Ind	basieren-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
führt	VFIN.Full.3.Sg.Pres.Ind	führen-v
zu	APPR	zu-i
Problemen	N.Reg.Dat.Pl.Neut	Problem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unsere	PRO.Poss.Attr.Nom.Pl.Fem	unsre-p
Möglichkeiten	N.Reg.Nom.Pl.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Dem.Subst.Acc.Sg.Masc	die-p
o.	CONJ.Coord	o.-c
a.	APPR	a.-i
Herausforderungen	N.Reg.Dat.Pl.Fem	Herausforderung-n
und	CONJ.Coord	und-c
Bedrohungen	N.Reg.Dat.Pl.Fem	Bedrohung-n
zu	PART.Zu	zu-x
entsprechen	VINF.Full	entsprechen-v
<g/>
,	SYM.Pun.Comma	,-x
hängt	VFIN.Full.3.Sg.Pres.Ind	hängen-v
vom	APPRART.Dat.Sg.Masc	von-i
Willen	N.Reg.Dat.Sg.Masc	Wille-n
ab	PART.Verb	ab-x
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
feste	ADJA.Pos.Acc.Sg.Fem	fest-j
Haltung	N.Reg.Acc.Sg.Fem	Haltung-n
für	APPR	für-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
einzunehmen	VINF.Full.zu	einnehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Um	CONJ.SubInf	um-c
sicherzugehen	VINF.Full.zu	sichergehen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Willen	N.Reg.Acc.Sg.Masc	Wille-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Gedanken	N.Reg.Acc.Sg.Masc	Gedanke-n
an	APPR	an-i
neue	ADJA.Pos.Acc.Pl.Masc	neu-j
Nutzer	N.Reg.Acc.Pl.Masc	Nutzer-n
verbreiten	VINF.Full	verbreiten-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
kommen	VFIN.Full.3.Pl.Pres.Ind	kommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
versagen	VFIN.Full.1.Pl.Pres.Ind	versagen-v
dabei	PROADV.Dem	dabei-x
<g/>
:	SYM.Pun.Colon	:-x
die	ART.Def.Acc.Pl.Fem	die-x
Bemühungen	N.Reg.Acc.Pl.Fem	Bemühung-n
<g/>
,	SYM.Pun.Comma	,-x
neue	ADJA.Pos.Acc.Pl.Masc	neu-j
Benutzer	N.Reg.Acc.Pl.Masc	Benutzer-n
für	APPR	für-i
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
zu	PART.Zu	zu-x
gewinnen	VINF.Full	gewinnen-v
<g/>
,	SYM.Pun.Comma	,-x
übersteigen	VFIN.Full.3.Pl.Pres.Ind	übersteigen-v
bei	APPR	bei-i
weitem	N.Reg.Dat.Sg.*	weitem-n
die	ART.Def.Nom.Pl.Fem	die-x
Bemühungen	N.Reg.Nom.Pl.Fem	Bemühung-n
<g/>
,	SYM.Pun.Comma	,-x
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
die	ART.Def.Acc.Pl.Fem	die-x
Pflichten	N.Reg.Acc.Pl.Fem	Pflicht-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
zu	PART.Zu	zu-x
lehren	VINF.Full	lehren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
beides	PRO.Indef.Subst.Acc.Sg.Neut	beide-p
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
beide	PRO.Indef.Attr.Acc.Pl.Fem	beide-p
Bemühungen	N.Reg.Acc.Pl.Fem	Bemühung-n
im	APPRART.Dat.Sg.Neut	in-i
Gleichgewicht	N.Reg.Dat.Sg.Neut	Gleichgewicht-n
halten	VINF.Full	halten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Open	FM	Open-x
Source	FM	Source-x
<g/>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Neuen	ADJA.Pos.Dat.Pl.Masc	neu-j
Benutzern	N.Reg.Dat.Pl.Masc	Benutzer-n
etwas	ADV	etwas-a
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
lehren	VINF.Full	lehren-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
1998	CARD	[number]-m
schwieriger	ADJD.Comp	schwierig-j
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
beschloss	VFIN.Full.3.Sg.Past.Ind	beschließen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
stattdessen	ADV	stattdessen-a
"	SYM.Quot.Left	"-x
<g/>
Open-Source	N.Name.Nom.Sg.*	Open-Source-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
bevorzugten	VFIN.Full.3.Pl.Past.Ind	bevorzugen-v
<g/>
,	SYM.Pun.Comma	,-x
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
zum	APPRART.Dat.Sg.Neut	zu-i
Ziel	N.Reg.Dat.Sg.Neut	Ziel-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Verwechslung	N.Reg.Acc.Sg.Fem	Verwechslung-n
von	APPR	von-i
frei	ADJD.Pos	frei-j
mit	APPR	mit-i
gratis	ADV	gratis-a
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
-	SYM.Pun.Hyph	--x
ein	ART.Indef.Nom.Sg.Neut	eine-x
zulässiges	ADJA.Pos.Nom.Sg.Neut	zulässig-j
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Andere	PRO.Indef.Subst.Nom.Pl.*	andere-p
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
jedoch	ADV	jedoch-a
zum	APPRART.Dat.Sg.Neut	zu-i
Ziel	N.Reg.Dat.Sg.Neut	Ziel-n
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Geist	N.Reg.Acc.Sg.Masc	Geist-n
des	ART.Def.Gen.Sg.Neut	die-x
Prinzips	N.Reg.Gen.Sg.Neut	Prinzip-n
ins	APPRART.Acc.Sg.Neut	in-i
Abseits	N.Reg.Acc.Sg.Neut	Abseits-n
zu	PART.Zu	zu-x
drängen	VINF.Full	drängen-v
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Acc.Sg.Fem	Freie-Software-Bewegung-n
und	CONJ.Coord	und-c
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Projekt	N.Reg.Acc.Sg.Neut	GNU-Projekt-n
motivierte	VFIN.Full.3.Sg.Past.Ind	motivieren-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
stattdessen	ADV	stattdessen-a
an	APPR	an-i
Führungskräfte	N.Reg.Acc.Pl.Fem	Führungskraft-n
und	CONJ.Coord	und-c
Geschäftskunden	N.Reg.Acc.Pl.Masc	Geschäftskunde-n
zu	PART.Zu	zu-x
appellieren	VINF.Full	appellieren-v
<g/>
,	SYM.Pun.Comma	,-x
von	APPR	von-i
denen	PRO.Rel.Subst.Dat.Pl.*	die-p
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Ideologie	N.Reg.Acc.Sg.Fem	Ideologie-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
Gewinn	N.Reg.Acc.Sg.Masc	Gewinn-n
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
über	APPR	über-i
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
und	CONJ.Coord	und-c
über	APPR	über-i
Prinzipien	N.Reg.Acc.Pl.Neut	Prinzip-n
stellt	VFIN.Full.3.Sg.Pres.Ind	stellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
So	ADV	so-a
konzentriert	VFIN.Full.3.Sg.Pres.Ind	konzentrieren-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
die	ART.Def.Nom.Sg.Fem	die-x
Rhetorik	N.Reg.Nom.Sg.Fem	Rhetorik-n
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Open	FM	Open-x
Source	FM	Source-x
<g/>
"	SYM.Quot.Left	"-x
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
Potenzial	N.Reg.Acc.Sg.Neut	Potenzial-n
<g/>
,	SYM.Pun.Comma	,-x
qualitativ	ADJD.Pos	qualitativ-j
hochwertige	ADJA.Pos.Acc.Pl.Fem	hochwertig-j
und	CONJ.Coord	und-c
leistungsfähige	ADJA.Pos.Acc.Pl.Fem	leistungsfähig-j
Software	N.Reg.Acc.Pl.Fem	Software-n
herzustellen	VINF.Full.zu	herstellen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
die	ART.Def.Acc.Pl.Fem	die-x
Ideen	N.Reg.Acc.Pl.Fem	Idee-n
von	APPR	von-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
und	CONJ.Coord	und-c
Prinzip	N.Reg.Dat.Sg.Neut	Prinzip-n
meidet	VFIN.Full.3.Sg.Pres.Ind	meiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Fachzeitschriften	N.Reg.Nom.Pl.Fem	Fachzeitschrift-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
eindeutiges	ADJA.Pos.Nom.Sg.Neut	eindeutig-j
Beispiel	N.Reg.Nom.Sg.Neut	Beispiel-n
dafür	PROADV.Dem	dafür-x
-	SYM.Pun.Hyph	--x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
mit	APPR	mit-i
Werbung	N.Reg.Dat.Sg.Fem	Werbung-n
für	APPR	für-i
proprietäre	ADJA.Pos.Acc.Sg.Fem	proprietär-j
Software	N.Reg.Acc.Sg.Fem	Software-n
gefüllt	VPP.Full.Psp	füllen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
funktioniert	VFIN.Full.3.Sg.Pres.Ind	funktionieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
das	ART.Def.Nom.Sg.Neut	die-x
nächste	ADJA.Sup.Nom.Sg.Neut	nah-j
Motif	N.Reg.Nom.Sg.Neut	Motif-n
oder	CONJ.Coord	oder-c
Qt	N.Reg.Nom.Sg.Masc	Qt-n
erscheint	VFIN.Full.3.Sg.Pres.Ind	erscheinen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Magazine	N.Reg.Nom.Pl.Neut	Magazin-n
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
warnen	VINF.Full	warnen-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
davon	PROADV.Dem	davon-x
fernzuhalten	VINF.Full.zu	fernhalten-v
oder	CONJ.Coord	oder-c
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
dafür	PROADV.Dem	dafür-x
werben	VINF.Full	werben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Unterstützung	N.Reg.Nom.Sg.Fem	Unterstützung-n
des	ART.Def.Gen.Sg.Neut	die-x
Geschäfts	N.Reg.Gen.Sg.Neut	Geschäft-n
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
in	APPR	in-i
vielerlei	PRO.Indef.Attr.*.*.*	vielerlei-p
Hinsicht	N.Reg.Dat.Sg.Fem	Hinsicht-n
zur	APPRART.Dat.Sg.Fem	zu-i
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
beitragen	VINF.Full	beitragen-v
<g/>
;	SYM.Pun.Sent	;-x
unter	APPR	unter-i
sonst	ADV	sonst-a
gleichen	ADJA.Pos.Dat.Pl.Fem	gleich-j
Bedingungen	N.Reg.Dat.Pl.Fem	Bedingung-n
'	SYM.Quot.Right	'-x
<g/>
Ceteris	N.Name.Nom.Sg.Masc	Ceteris-n
Paribus	N.Name.Gen.Sg.Masc	Paribus-n
<g/>
'	SYM.Quot.Right	'-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nützlich	ADJD.Pos	nützlich-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Unterstützung	N.Reg.Acc.Sg.Fem	Unterstützung-n
zu	PART.Zu	zu-x
gewinnen	VINF.Full	gewinnen-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
noch	ADV	noch-a
weniger	ADV	weniger-a
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Prinzipien	N.Reg.Acc.Pl.Neut	Prinzip-n
spricht	VFIN.Full.3.Sg.Pres.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
katastrophal	ADJD.Pos	katastrophal-j
sein	VINF.Aux	sein-v
<g/>
;	SYM.Pun.Sent	;-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
das	ART.Def.Acc.Sg.Neut	die-x
vorherige	ADJA.Pos.Acc.Sg.Neut	vorherig-j
Ungleichgewicht	N.Reg.Acc.Sg.Neut	Ungleichgewicht-n
zwischen	APPR	zwischen-i
sozialem	ADJA.Pos.Dat.Sg.Neut	sozial-j
Engagement	N.Reg.Dat.Sg.Neut	Engagement-n
und	CONJ.Coord	und-c
politischer	ADJA.Pos.Dat.Sg.Fem	politisch-j
Bildung	N.Reg.Dat.Sg.Fem	Bildung-n
noch	ADV	noch-a
schlimmer	ADJD.Comp	schlimm-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
und	CONJ.Coord	und-c
Open	FM	Open-x
Source	FM	Source-x
beschreiben	VFIN.Full.3.Pl.Pres.Ind	beschreiben-v
mehr	ADV	mehr-a
oder	CONJ.Coord	oder-c
weniger	ADV	weniger-a
die	ART.Def.Acc.Sg.Fem	die-x
gleiche	ADJA.Pos.Acc.Sg.Fem	gleich-j
Softwarekategorie	N.Reg.Acc.Sg.Fem	Softwarekategorie-n
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
verschiedene	ADJA.Pos.Nom.Pl.Neut	verschieden-j
Dinge	N.Reg.Nom.Pl.Neut	Ding-n
über	APPR	über-i
Software	N.Reg.Acc.Pl.Fem	Software-n
und	CONJ.Coord	und-c
Werte	N.Reg.Acc.Pl.Masc	Wert-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
verwendet	VFIN.Full.3.Sg.Pres.Ind	verwenden-v
weiterhin	ADV	weiterhin-a
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
um	APPR	um-i
die	ART.Def.Acc.Sg.Fem	die-x
Idee	N.Reg.Acc.Sg.Fem	Idee-n
zum	APPRART.Dat.Sg.Masc	zu-i
Ausdruck	N.Reg.Dat.Sg.Masc	Ausdruck-n
zu	PART.Zu	zu-x
bringen	VINF.Full	bringen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
Technik	N.Reg.Nom.Sg.Fem	Technik-n
<g/>
,	SYM.Pun.Comma	,-x
wichtig	ADJD.Pos	wichtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Testen	VFIN.Full.3.Pl.Pres.Ind	testen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Yodas	N.Name.Gen.Sg.*	Yodas-n
Aphorismus	N.Reg.Nom.Sg.Masc	Aphorismus-n
(	SYM.Paren.Left	(-x
<g/>
"	SYM.Quot.Left	"-x
<g/>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
"	SYM.Quot.Left	"-x
<g/>
Versuchen	N.Reg.Dat.Pl.Masc	Versuch-n
<g/>
""	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
klingt	VFIN.Full.3.Sg.Pres.Ind	klingen-v
nett	ADJD.Pos	nett-j
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
funktioniert	VFIN.Full.3.Sg.Pres.Ind	funktionieren-v
nicht	PART.Neg	nicht-x
für	APPR	für-i
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
die	ART.Def.Acc.Pl.Masc	die-x
meisten	PRO.Indef.Subst.Acc.Pl.Masc	meiste-p
meiner	PRO.Poss.Attr.Gen.Pl.Fem	meine-p
Aufgaben	N.Reg.Gen.Pl.Fem	Aufgabe-n
geleistet	VPP.Full.Psp	leisten-v
<g/>
,	SYM.Pun.Comma	,-x
während	CONJ.SubFin	während-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
besorgt	ADJD.Pos	besorgt-j
war	VFIN.Aux.1.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
sie	PRO.Pers.Subst.3.Acc.*.*	sie-p
erledigen	VINF.Full	erledigen-v
kann	VFIN.Mod.1.Sg.Pres.Ind	können-v
und	CONJ.Coord	und-c
unsicher	ADJD.Pos	unsicher-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ausreichen	VINF.Full	ausreichen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
um	CONJ.SubInf	um-c
das	ART.Def.Acc.Sg.Neut	die-x
Ziel	N.Reg.Acc.Sg.Neut	Ziel-n
zu	PART.Zu	zu-x
erreichen	VINF.Full	erreichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
versuchte	VFIN.Full.3.Sg.Past.Ind	versuchen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
trotzdem	PROADV.Dem	trotzdem-x
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gab	VFIN.Full.3.Sg.Past.Ind	geben-v
niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
außer	APPR	außer-i
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
zwischen	APPR	zwischen-i
dem	ART.Def.Dat.Sg.Masc	die-x
Feind	N.Reg.Dat.Sg.Masc	Feind-n
und	CONJ.Coord	und-c
meiner	PRO.Poss.Attr.Dat.Sg.Fem	meine-p
Stadt	N.Reg.Dat.Sg.Fem	Stadt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Selbst	ADV	selbst-a
überrascht	VPP.Full.Psp	überraschen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
manchmal	ADV	manchmal-a
gelungen	VPP.Full.Psp	gelingen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Manchmal	ADV	manchmal-a
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
versagt	VPP.Full.Psp	versagen-v
<g/>
;	SYM.Pun.Sent	;-x
einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
meiner	PRO.Poss.Attr.Gen.Pl.Fem	meine-p
Städte	N.Reg.Gen.Pl.Fem	Stadt-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
gefallen	VPP.Full.Psp	fallen|gefallen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
fand	VFIN.Full.1.Sg.Past.Ind	finden-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
andere	ADJA.Pos.Acc.Sg.Fem	ander-j
bedrohte	ADJA.Pos.Acc.Sg.Fem	bedroht-j
Stadt	N.Reg.Acc.Sg.Fem	Stadt-n
und	CONJ.Coord	und-c
machte	VFIN.Full.1.Sg.Past.Ind	machen-v
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
für	APPR	für-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
andere	ADJA.Pos.Acc.Sg.Fem	ander-j
Schlacht	N.Reg.Acc.Sg.Fem	Schlacht-n
bereit	PART.Verb	bereit-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Laufe	N.Reg.Dat.Sg.Masc	Lauf-n
der	ART.Def.Gen.Sg.Fem	die-x
Zeit	N.Reg.Gen.Sg.Fem	Zeit-n
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
gelernt	VPP.Full.Psp	lernen-v
<g/>
,	SYM.Pun.Comma	,-x
nach	APPR	nach-i
Bedrohungen	N.Reg.Dat.Pl.Fem	Bedrohung-n
Ausschau	N.Reg.Acc.Sg.Fem	Ausschau-n
zu	PART.Zu	zu-x
halten	VINF.Full	halten-v
und	CONJ.Coord	und-c
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
selbst	ADV	selbst-a
zwischen	APPR	zwischen-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
und	CONJ.Coord	und-c
meine	PRO.Poss.Attr.Acc.Sg.Fem	meine-p
Stadt	N.Reg.Acc.Sg.Fem	Stadt-n
zu	PART.Zu	zu-x
stellen	VINF.Full	stellen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
rief	VFIN.Full.3.Sg.Past.Ind	rufen-v
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Hacker	N.Reg.Acc.Pl.Masc	Hacker-n
auf	PART.Verb	auf-x
<g/>
,	SYM.Pun.Comma	,-x
zu	PART.Zu	zu-x
kommen	VINF.Full	kommen-v
und	CONJ.Coord	und-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
anzuschließen	VINF.Full.zu	anschließen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heutzutage	ADV	heutzutage-a
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
oft	ADV	oft-a
nicht	PART.Neg	nicht-x
der	ART.Def.Nom.Sg.Masc	die-x
einzige	PRO.Indef.Subst.Nom.Sg.Masc	einzige-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Erleichterung	N.Reg.Nom.Sg.Fem	Erleichterung-n
und	CONJ.Coord	und-c
Freude	N.Reg.Nom.Sg.Fem	Freude-n
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
sehe	VFIN.Full.1.Sg.Pres.Ind	sehen-v
wie	PROADV.Inter	wie-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
Regiment	N.Reg.Nom.Sg.Neut	Regiment-n
von	APPR	von-i
Hackern	N.Reg.Dat.Pl.Masc	Hacker-n
eingräbt	VFIN.Full.3.Sg.Pres.Ind	eingraben-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
Stellung	N.Reg.Acc.Sg.Fem	Stellung-n
zu	PART.Zu	zu-x
halten	VINF.Full	halten-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
weiß	VFIN.Full.3.Sg.Pres.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Stadt	N.Reg.Nom.Sg.Fem	Stadt-n
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
überleben	VINF.Full	überleben-v
-	SYM.Pun.Hyph	--x
im	APPRART.Dat.Sg.Masc	in-i
Moment	N.Reg.Dat.Sg.Masc	Moment-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
die	ART.Def.Nom.Pl.Fem	die-x
Gefahren	N.Reg.Nom.Pl.Fem	Gefahr-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
jedes	PRO.Indef.Attr.Acc.Sg.Neut	jede-p
Jahr	N.Reg.Acc.Sg.Neut	Jahr-n
größer	ADJD.Comp	groß-j
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
nun	ADV	nun-a
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
Microsoft	N.Name.Nom.Sg.*	Microsoft-n
klar	ADJD.Pos	klar-j
gegen	APPR	gegen-i
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
ausgerichtet	VPP.Full.Psp	ausrichten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
die	ART.Def.Acc.Sg.Fem	die-x
zukünftige	ADJA.Pos.Acc.Sg.Fem	zukünftig-j
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
nicht	PART.Neg	nicht-x
für	APPR	für-i
selbstverständlich	ADJD.Pos	selbstverständlich-j
halten	VFIN.Full.3.Pl.Pres.Ind	halten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Halten	VFIN.Full.3.Pl.Pres.Ind	halten-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
für	APPR	für-i
selbstverständlich	ADJD.Pos	selbstverständlich-j
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
behalten	VINF.Full	behalten-v
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
bereit	ADJD.Pos	bereit-j
sein	VINF.Aux	sein-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
zu	PART.Zu	zu-x
verteidigen	VINF.Full	verteidigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
1.	ADV	1.-a
Die	ART.Def.Nom.Sg.Fem	die-x
Verwendung	N.Reg.Nom.Sg.Fem	Verwendung-n
von	APPR	von-i
Hacker	N.Reg.Dat.Sg.Masc	Hacker-n
im	APPRART.Dat.Sg.Masc	in-i
Sinne	N.Reg.Dat.Sg.Masc	Sinn-n
von	APPR	von-i
Sicherheitsbrecher	N.Reg.Dat.Sg.Masc	Sicherheitsbrecher-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Irreführung	N.Reg.Nom.Sg.Fem	Irreführung-n
seitens	APPR	seitens-i
der	ART.Def.Gen.Pl.Neut	die-x
Massenmedien	N.Reg.Gen.Pl.Neut	Massenmedium-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Hacker	N.Reg.Acc.Pl.Masc	Hacker-n
weigern	VFIN.Full.1.Pl.Pres.Ind	weigern-v
uns	PRO.Refl.Subst.1.Acc.Pl.*	sie-p
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Bedeutung	N.Reg.Acc.Sg.Fem	Bedeutung-n
anzuerkennen	VINF.Full.zu	anerkennen-v
und	CONJ.Coord	und-c
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Wort	N.Reg.Acc.Sg.Neut	Wort-n
weiterhin	ADV	weiterhin-a
in	APPR	in-i
seiner	PRO.Poss.Attr.Dat.Sg.Fem	seine-p
Bedeutung	N.Reg.Dat.Sg.Fem	Bedeutung-n
dahingehend	ADJD.Pos	dahingehend-j
für	APPR	für-i
jemanden	PRO.Indef.Subst.Acc.Sg.Masc	jemand-p
der	ART.Def.Gen.Pl.Masc	die-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
liebt	VFIN.Full.3.Sg.Pres.Ind	lieben-v
zu	PART.Zu	zu-x
programmieren	VINF.Full	programmieren-v
<g/>
,	SYM.Pun.Comma	,-x
jemanden	PRO.Indef.Subst.Acc.Sg.Masc	jemand-p
der	ART.Def.Dat.Sg.Fem	die-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
spielerischer	ADJA.Pos.Dat.Sg.Fem	spielerisch-j
Klugheit	N.Reg.Dat.Sg.Fem	Klugheit-n
erfreut	VFIN.Full.3.Sg.Pres.Ind	erfreuen-v
oder	CONJ.Coord	oder-c
die	ART.Def.Acc.Sg.Fem	die-x
Kombination	N.Reg.Acc.Sg.Fem	Kombination-n
von	APPR	von-i
beiden	PRO.Indef.Subst.Dat.Pl.*	beide-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
auch	ADV	auch-a
meinen	PRO.Poss.Attr.Acc.Sg.Masc	meine-p
Artikel	N.Reg.Acc.Sg.Masc	Artikel-n
Auf	APPR	auf-i
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
Hacken	VINF.Full	hacken-v
(	SYM.Paren.Left	(-x
<g/>
engl.	VIMP.Full.2.Sg	engl.-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
2.	ADV	2.-a
Als	APPR	als-i
Atheist	N.Reg.Acc.Sg.Masc	Atheist-n
folge	VFIN.Full.1.Sg.Pres.Ind	folgen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
keinen	PRO.Indef.Attr.Dat.Pl.Masc	keine-p
Religionsführern	N.Reg.Dat.Pl.Masc	Religionsführer-n
<g/>
,	SYM.Pun.Comma	,-x
stelle	VFIN.Full.1.Sg.Pres.Ind	stellen-v
aber	ADV	aber-a
manchmal	ADV	manchmal-a
fest	PART.Verb	fest-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
bewundere	VFIN.Full.1.Sg.Pres.Ind	bewundern-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
einer	PRO.Indef.Subst.Nom.Sg.Masc	eine-p
von	APPR	von-i
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
gesagt	VPP.Full.Psp	sagen-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
3.	ADV	3.-a
1984	CARD	[number]-m
oder	CONJ.Coord	oder-c
1985	CARD	[number]-m
schickte	VFIN.Full.3.Sg.Past.Ind	schicken-v
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
Don	N.Name.Nom.Sg.Masc	Don-n
Hopkins	N.Name.Nom.Sg.*	Hopkins-n
(	SYM.Paren.Left	(-x
<g/>
ein	ART.Indef.Nom.Sg.Masc	eine-x
sehr	ADV	sehr-a
einfallsreicher	ADJA.Pos.Nom.Sg.Masc	einfallsreich-j
Bursche	N.Reg.Nom.Sg.Masc	Bursche-n
<g/>
)	SYM.Paren.Right	)-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Brief	N.Reg.Acc.Sg.Masc	Brief-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
den	ART.Def.Acc.Sg.Masc	die-x
Umschlag	N.Reg.Acc.Sg.Masc	Umschlag-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
etliche	PRO.Indef.Attr.Acc.Pl.Masc	etliche-p
amüsante	ADJA.Pos.Acc.Pl.Masc	amüsant-j
Sprüche	N.Reg.Acc.Pl.Masc	Spruch-n
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
unter	APPR	unter-i
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
diesen	PRO.Dem.Attr.Dat.Pl.Fem	diese-p
<g/>
:	SYM.Pun.Colon	:-x
Copyleft	N.Name.Dat.Sg.*	Copyleft-n
-	SYM.Pun.Hyph	--x
All	N.Name.*.*.*	All-n
Rights	N.Name.*.*.*	Rights-n
Reversed	N.Name.*.*.*	Reversed-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
Copyleft	N.Reg.Nom.Sg.Neut	Copyleft-n
-	SYM.Pun.Hyph	--x
Alle	PRO.Indef.Attr.Acc.Pl.Neut	alle-p
Rechte	N.Reg.Acc.Pl.Neut	Recht-n
vertauscht	VPP.Full.Psp	vertauschen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
'	SYM.Quot.Right	'-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nutzte	VFIN.Full.1.Sg.Past.Ind	nutzen-v
das	ART.Def.Acc.Sg.Neut	die-x
Wort	N.Reg.Acc.Sg.Neut	Wort-n
Copyleft	N.Reg.Nom.Sg.Neut	Copyleft-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
das	ART.Def.Acc.Sg.Neut	die-x
Vertriebskonzept	N.Reg.Acc.Sg.Neut	Vertriebskonzept-n
zu	PART.Zu	zu-x
benennen	VINF.Full	benennen-v
<g/>
,	SYM.Pun.Comma	,-x
welches	PRO.Rel.Subst.Acc.Sg.Neut	welche-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
gerade	ADV	gerade-a
entwickelte	VFIN.Full.1.Sg.Past.Ind	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
4.	ADV	4.-a
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
verwenden	VFIN.Full.1.Pl.Pres.Ind	verwenden-v
nun	ADV	nun-a
die	ART.Def.Acc.Sg.Fem	die-x
GNU	N.Name.Acc.Sg.Fem	GNU-n
Free	N.Name.*.*.*	Free-n
Documentation	N.Name.*.*.*	Documentation-n
License	N.Name.Acc.Sg.Fem	License-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Dokumentation	N.Reg.Acc.Sg.Fem	Dokumentation-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
5.	ADJA.Pos.Nom.Sg.Masc	[number]-j
Bourne	N.Name.*.*.*	Bourne-n
Again	N.Name.*.*.*	Again-n
Shell	N.Name.Nom.Sg.*	Shell-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Wortspiel	N.Reg.Nom.Sg.Neut	Wortspiel-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
Namen	N.Reg.Dat.Sg.Masc	Name-n
Bourne	N.Name.*.*.*	Bourne-n
Shell	N.Name.Nom.Sg.*	Shell-n
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Rel.Subst.Nom.Sg.Fem	welche-p
die	ART.Def.Acc.Sg.Fem	die-x
übliche	ADJA.Pos.Acc.Sg.Fem	üblich-j
Shell	N.Name.Acc.Sg.Fem	Shell-n
unter	APPR	unter-i
Unix	N.Name.Dat.Sg.*	Unix-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
6.	ADV	6.-a
Diese	PRO.Dem.Subst.Nom.Sg.Fem	diese-p
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
in	APPR	in-i
1998	CARD	[number]-m
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
2009	CARD	[number]-m
pflegen	VFIN.Full.1.Pl.Pres.Ind	pflegen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
lange	ADJA.Pos.Acc.Sg.Fem	lang-j
Aufgabenliste	N.Reg.Acc.Sg.Fem	Aufgabenliste-n
mehr	ADV	mehr-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
entwickelt	VFIN.Full.3.Sg.Pres.Ind	entwickeln-v
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
so	ADV	so-a
schnell	ADJD.Pos	schnell-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
einmal	ADV	einmal-a
jede	PRO.Indef.Attr.Acc.Sg.Fem	jede-p
im	APPRART.Dat.Sg.Neut	in-i
Auge	N.Reg.Dat.Sg.Neut	Auge-n
behalten	VINF.Full	behalten-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Stattdessen	PROADV.Dem	Stattdessen-x
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Projekte	N.Reg.Acc.Pl.Neut	Projekt-n
mit	APPR	mit-i
hoher	ADJA.Pos.Dat.Sg.Fem	hoch-j
Priorität	N.Reg.Dat.Sg.Fem	Priorität-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Nom.Sg.Fem	eine-x
viel	ADV	viel-a
kürzere	ADJA.Comp.Nom.Sg.Fem	kurz-j
Projektliste	N.Reg.Nom.Sg.Fem	Projektliste-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
wirklich	ADJD.Pos	wirklich-j
ermutigen	VINF.Full	ermutigen-v
möchten	VFIN.Mod.1.Pl.Past.Subj	mögen-v
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
[	SYM.Paren.Left	[-x
<g/>
Siehe	VIMP.Full.2.Sg	siehe-v
auch	ADV	auch-a
die	ART.Def.Nom.Sg.Fem	die-x
ursprüngliche	ADJA.Pos.Nom.Sg.Fem	ursprünglich-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
Task	N.Name.*.*.*	Task-n
List	N.Reg.Nom.Sg.Fem	List-n
von	APPR	von-i
1998	CARD	[number]-m
<g/>
,	SYM.Pun.Comma	,-x
A.	SYM.Other.XY	A.-x
d.	PRO.Dem.Subst.Nom.Sg.Neut	d.-p
Ü.	N.Name.Nom.Sg.*	Ü.-n
<g/>
]	SYM.Paren.Right	]-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
7.	ADV	7.-a
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Lizenz	N.Reg.Nom.Sg.Fem	Lizenz-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
heute	ADV	heute-a
GNU	N.Name.Nom.Sg.Fem	GNU-n
Lesser	N.Name.Nom.Sg.Fem	Lesser-n
General	FM	General-x
Public	FM	Public-x
License	FM	License-x
(	SYM.Paren.Left	(-x
<g/>
LGPL	N.Name.Nom.Sg.*	LGPL-n
<g/>
)	SYM.Paren.Right	)-x
genannt	VPP.Full.Psp	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
Idee	N.Reg.Acc.Sg.Fem	Idee-n
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
für	APPR	für-i
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
Bibliotheken	N.Reg.Acc.Pl.Fem	Bibliothek-n
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
Warum	PROADV.Inter	warum-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
die	ART.Def.Acc.Pl.Neut	die-x
Lesser	N.Reg.Acc.Pl.Neut	Lesser-n
GPL	N.Name.Nom.Sg.Neut	GPL-n
nicht	PART.Neg	nicht-x
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
nächste	ADJA.Sup.Acc.Sg.Fem	nah-j
Bibliothek	N.Reg.Acc.Sg.Fem	Bibliothek-n
verwenden	VINF.Full	verwenden-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Anmerkungen	N.Reg.Nom.Pl.Fem	Anmerkung-n
des	ART.Def.Gen.Sg.Masc	die-x
Autors	N.Reg.Gen.Sg.Masc	Autor-n
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
*	SYM.Other.Aster	*-x
<g/>
)	SYM.Paren.Right	)-x
Patente	ADJA.Pos.Nom.Sg.Fem	patent-j
auf	APPR	auf-i
den	ART.Def.Acc.Sg.Masc	die-x
LZW-Komprimierungsalgorithmus	N.Reg.Acc.Sg.Masc	LZW-Komprimierungsalgorithmus-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
seit	APPR	seit-i
2009	CARD	[number]-m
erloschen	VPP.Full.Psp	erlöschen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
**	TRUNC.Noun	**-x
<g/>
)	SYM.Paren.Right	)-x
Patente	N.Reg.Nom.Pl.Neut	Patent-n
auf	APPR	auf-i
komprimiertes	ADJA.Pos.Acc.Sg.Neut	komprimiert-j
MP3-Audio	N.Reg.Acc.Sg.Neut	MP3-Audio-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
seit	APPR	seit-i
2017	CARD	[number]-m
erloschen	VPP.Full.Psp	erlöschen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beachte	VIMP.Full.2.Sg	beachten-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
lange	ADV	lange-a
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
warten	VINF.Full	warten-v
mussten	VFIN.Mod.1.Pl.Past.Ind	müssen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/initial-announcement.html	N.Name	[url]-n
Neue	ADJA.Pos.Nom.Sg.Fem	neu-j
Unix-Implementierung	N.Reg.Nom.Sg.Fem	Unix-Implementierung-n
<g/>
:	SYM.Pun.Colon	:-x
Ursprüngliche	ADJA.Pos.Nom.Sg.Fem	ursprünglich-j
Ankündigung	N.Reg.Nom.Sg.Fem	Ankündigung-n
[	SYM.Paren.Left	[-x
<g/>
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
<g/>
]	SYM.Paren.Right	]-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
ursprüngliche	ADJA.Pos.Nom.Sg.Fem	ursprünglich-j
Ankündigung	N.Reg.Nom.Sg.Fem	Ankündigung-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
geschrieben	VPP.Full.Psp	schreiben-v
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
am	APPRART.Dat.Sg.Masc	an-i
27.	ADJA.Pos.Dat.Sg.Masc	[number]-j
September	N.Reg.Dat.Sg.Masc	September-n
1983.	CARD	[number]-m
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
tatsächliche	ADJA.Pos.Nom.Sg.Fem	tatsächlich-j
Geschichte	N.Reg.Nom.Sg.Fem	Geschichte-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
unterscheidet	VFIN.Full.3.Sg.Pres.Ind	unterscheiden-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
in	APPR	in-i
vielerlei	PRO.Indef.Attr.*.*.*	vielerlei-p
Hinsicht	N.Reg.Dat.Sg.Fem	Hinsicht-n
vom	APPRART.Dat.Sg.Neut	von-i
anfänglichen	ADJA.Pos.Dat.Sg.Neut	anfänglich-j
Vorhaben	N.Reg.Dat.Sg.Neut	Vorhaben-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
verzögerte	VFIN.Full.3.Sg.Past.Ind	verzögern-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
der	ART.Def.Nom.Sg.Masc	die-x
Beginn	N.Reg.Nom.Sg.Masc	Beginn-n
bis	APPR	bis-i
Januar	N.Reg.*.Sg.Masc	Januar-n
1984.	CARD	[number]-m
Mehrere	PRO.Indef.Attr.Nom.Pl.Neut	mehrere-p
philosophische	ADJA.Pos.Nom.Pl.Neut	philosophisch-j
Freie-Software-Konzepte	N.Reg.Nom.Pl.Neut	Freie-Software-Konzept-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
erst	ADV	erst-a
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
später	ADJD.Comp	später-j
geklärt	VPP.Full.Psp	klären-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freies	ADJA.Pos.Nom.Sg.Neut	frei-j
Unix	N.Reg.Nom.Sg.Neut	Unix-n
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Ab	APPR	ab-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Thanksgiving	N.Reg.Dat.Sg.Neut	Thanksgiving-n
<g/>
[	SYM.Paren.Left	[-x
<g/>
*	SYM.Other.Aster	*-x
<g/>
]	SYM.Paren.Right	]-x
werde	VFIN.Aux.1.Sg.Pres.Ind	werden-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
vollständig	ADJD.Pos	vollständig-j
unixkompatibles	ADJA.Pos.Acc.Sg.Neut	unixkompatibel-j
Softwaresystem	N.Reg.Acc.Sg.Neut	Softwaresystem-n
namens	APPR	namens-i
GNU	N.Name.Nom.Sg.Masc	GNU-n
(	SYM.Paren.Left	(-x
<g/>
für	APPR	für-i
Gnu	FM	Gnu-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Nicht	PART.Neg	nicht-x
Unix	FM	Unix-x
<g/>
)	SYM.Paren.Right	)-x
schreiben	VINF.Full	schreiben-v
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
an	APPR	an-i
jedermann	PRO.Indef.Subst.*.*.*	jedermann-p
frei	ADJD.Pos	frei-j
weggeben	VINF.Full	weggeben-v
<g/>
(	SYM.Paren.Left	(-x
<g/>
1	CARD	1-m
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
benutzen	VINF.Full	benutzen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beiträge	N.Reg.Nom.Pl.Masc	Beitrag-n
in	APPR	in-i
Form	N.Reg.Dat.Sg.Fem	Form-n
von	APPR	von-i
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
<g/>
,	SYM.Pun.Comma	,-x
Geld	N.Reg.Dat.Sg.Neut	Geld-n
<g/>
,	SYM.Pun.Comma	,-x
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
und	CONJ.Coord	und-c
Ausrüstung	N.Reg.Dat.Sg.Fem	Ausrüstung-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
dringend	ADJD.Pos	dringend-j
erforderlich	ADJD.Pos	erforderlich-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zunächst	ADV	zunächst-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
GNU	ADJD.Pos	GNU-j
ein	ART.Indef.Nom.Sg.Masc	eine-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
mit	APPR	mit-i
allen	PRO.Indef.Attr.Dat.Pl.Neut	alle-p
benötigten	ADJA.Pos.Dat.Pl.Neut	benötigt-j
Dienstprogrammen	N.Reg.Dat.Pl.Neut	Dienstprogramm-n
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
C-Programme	N.Reg.Acc.Pl.Neut	C-Programm-n
schreiben	VINF.Full	schreiben-v
und	CONJ.Coord	und-c
ausführen	VINF.Full	ausführen-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
:	SYM.Pun.Colon	:-x
Editor	N.Reg.Nom.Sg.Masc	Editor-n
<g/>
,	SYM.Pun.Comma	,-x
Kommandozeileninterpreter	N.Reg.Nom.Pl.Masc	Kommandozeileninterpreter-n
<g/>
,	SYM.Pun.Comma	,-x
C-Compiler	N.Reg.Nom.Pl.Masc	C-Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
Linker	N.Reg.Nom.Pl.Masc	Linker-n
<g/>
,	SYM.Pun.Comma	,-x
Assembler	N.Reg.Nom.Pl.Masc	Assembler-n
und	CONJ.Coord	und-c
noch	ADV	noch-a
ein	ART.Indef.*.*.*	eine-x
paar	PRO.Indef.Attr.*.*.*	paar-p
andere	ADJA.Pos.Acc.Pl.Neut	ander-j
Dinge	N.Reg.Acc.Pl.Neut	Ding-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Danach	PROADV.Dem	danach-x
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Textformatierer	N.Reg.Acc.Sg.Masc	Textformatierer-n
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
YACC	N.Reg.Acc.Sg.Masc	YACC-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
Empire-Spiel	N.Reg.Acc.Sg.Neut	Empire-Spiel-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Tabellenkalkulation	N.Reg.Acc.Sg.Fem	Tabellenkalkulation-n
und	CONJ.Coord	und-c
Hunderte	N.Reg.Acc.Pl.Neut	Hundert-n
anderer	ADJA.Pos.Gen.Pl.Neut	ander-j
Dinge	N.Reg.Gen.Pl.Neut	Ding-n
hinzufügen	VFIN.Full.3.Pl.Pres.Ind	hinzufügen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hoffen	VFIN.Full.1.Pl.Pres.Ind	hoffen-v
<g/>
,	SYM.Pun.Comma	,-x
letztendlich	ADV	letztendlich-a
<g/>
,	SYM.Pun.Comma	,-x
alles	PRO.Indef.Attr.Acc.Sg.Neut	alle-p
Nützliche	N.Reg.Acc.Sg.Neut	Nützliche-n
anzubieten	VINF.Full.zu	anbieten-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
normalerweise	ADV	normalerweise-a
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Unix-System	N.Reg.Dat.Sg.Neut	Unix-System-n
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
alles	PRO.Indef.Subst.Acc.Sg.Neut	alle-p
sonst	ADV	sonst-a
nützliche	ADJA.Pos.Nom.Pl.Neut	nützlich-j
<g/>
,	SYM.Pun.Comma	,-x
einschließlich	APPR	einschließlich-i
Onlinedokumentation	N.Reg.Dat.Sg.Fem	Onlinedokumentation-n
und	CONJ.Coord	und-c
gedruckter	ADJA.Pos.Dat.Sg.Fem	gedruckt-j
Dokumentation	N.Reg.Dat.Sg.Fem	Dokumentation-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
Unix-Programme	N.Reg.Acc.Pl.Neut	Unix-Programm-n
ausführen	VINF.Full	ausführen-v
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
identisch	ADJD.Pos	identisch-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
Verbesserungen	N.Reg.Acc.Pl.Fem	Verbesserung-n
vornehmen	VINF.Full	vornehmen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
auf	APPR	auf-i
Grundlage	N.Reg.Acc.Sg.Fem	Grundlage-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Erfahrung	N.Reg.Gen.Sg.Fem	Erfahrung-n
mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Betriebssystemen	N.Reg.Dat.Pl.Neut	Betriebssystem-n
zweckmäßig	ADJD.Pos	zweckmäßig-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Besonderen	ADJA.Pos.Dat.Sg.Neut	besonder-j
beabsichtigen	VFIN.Full.1.Pl.Pres.Ind	beabsichtigen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
längere	ADJA.Comp.Acc.Pl.Masc	lang-j
Dateinamen	N.Reg.Acc.Pl.Masc	Dateiname-n
<g/>
,	SYM.Pun.Comma	,-x
Dateiversionsnummern	N.Reg.Acc.Pl.Fem	Dateiversionsnummer-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
absturzsicheres	ADJA.Comp.Acc.Sg.Neut	absturzsicher-j
Dateisystem	N.Reg.Acc.Sg.Neut	Dateisystem-n
<g/>
,	SYM.Pun.Comma	,-x
vielleicht	ADV	vielleicht-a
die	ART.Def.Acc.Sg.Fem	die-x
Vervollständigung	N.Reg.Acc.Sg.Fem	Vervollständigung-n
von	APPR	von-i
Dateinamen	N.Reg.Dat.Pl.Masc	Dateiname-n
<g/>
,	SYM.Pun.Comma	,-x
rechnerunabhängige	ADJA.Pos.Nom.Sg.Fem	rechnerunabhängig-j
Bildschirmunterstützung	N.Reg.Nom.Sg.Fem	Bildschirmunterstützung-n
und	CONJ.Coord	und-c
schließlich	ADV	schließlich-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
auf	APPR	auf-i
Lisp	N.Reg.Acc.Sg.Masc	Lisp-n
basierendes	ADJA.Pos.Nom.Sg.Neut	basierend-j
Fenstersystem	N.Reg.Nom.Sg.Neut	Fenstersystem-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
dem	PRO.Rel.Subst.Dat.Sg.Neut	die-p
verschiedene	ADJA.Pos.Nom.Pl.Fem	verschieden-j
Lisp	N.Reg.Nom.Pl.Fem	Lisp-n
<g/>
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
gewöhnliche	ADJA.Pos.Nom.Pl.Neut	gewöhnlich-j
Unix-Programme	N.Reg.Nom.Pl.Neut	Unix-Programm-n
Bildschirminhalte	N.Reg.Acc.Pl.Masc	Bildschirminhalt-n
gemeinsam	ADJD.Pos	gemeinsam-j
nutzen	VINF.Full	nutzen-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sowohl	CONJ.Coord	sowohl-c
C	N.Name.Nom.Sg.*	C-n
als	CONJ.Coord	als-c
auch	ADV	auch-a
Lisp	N.Name.Nom.Sg.*	Lisp-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
als	APPR	als-i
Systemprogrammsprachen	N.Reg.Nom.Pl.Fem	Systemprogrammsprache-n
verfügbar	ADJD.Pos	verfügbar-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
Netzwerksoftware	N.Reg.Nom.Sg.Fem	Netzwerksoftware-n
<g/>
,	SYM.Pun.Comma	,-x
basierend	ADJD.Pos	basierend-j
auf	APPR	auf-i
dem	ART.Def.Dat.Sg.Neut	die-x
MIT	N.Name.Dat.Sg.Neut	MIT-n
Chaosnet-Protokoll	N.Name.*.*.*	Chaosnet-Protokoll-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
Unix	N.Reg.Dat.Sg.Masc	Unix-n
to	FM	to-x
Unix	FM	Unix-x
Copy	FM	Copy-x
Protocol	FM	Protocol-x
(	SYM.Paren.Left	(-x
<g/>
UUCP	N.Name.Nom.Sg.*	UUCP-n
<g/>
)	SYM.Paren.Right	)-x
weit	ADJD.Pos	weit-j
überlegen	VINF.Full	überlegen-v
<g/>
,	SYM.Pun.Comma	,-x
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Möglicherweise	ADV	möglicherweise-a
auch	ADV	auch-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
mit	APPR	mit-i
UUCP	N.Name.Dat.Sg.*	UUCP-n
kompatibel	ADJD.Pos	kompatibel-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Nom.Sg.Masc	Stallman-n
<g/>
,	SYM.Pun.Comma	,-x
Erfinder	N.Reg.Nom.Sg.Masc	Erfinder-n
des	ART.Def.Gen.Sg.Neut	die-x
ursprünglichen	ADJA.Pos.Gen.Sg.Neut	ursprünglich-j
und	CONJ.Coord	und-c
vielfach	ADV	vielfach-a
imitierten	ADJA.Pos.Gen.Sg.Masc	imitiert-j
EMACS-Editors	N.Reg.Gen.Sg.Masc	EMACS-Editor-n
<g/>
,	SYM.Pun.Comma	,-x
nun	ADV	nun-a
am	APPRART.Dat.Sg.Neut	an-i
Labor	N.Reg.Dat.Sg.Neut	Labor-n
für	APPR	für-i
künstliche	ADJA.Pos.Acc.Sg.Fem	künstlich-j
Intelligenz	N.Reg.Acc.Sg.Fem	Intelligenz-n
des	ART.Def.Gen.Sg.Neut	die-x
MIT	N.Name.Gen.Sg.Neut	MIT-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
ausgiebig	ADJD.Pos	ausgiebig-j
an	APPR	an-i
Compilern	N.Reg.Dat.Pl.Masc	Compiler-n
<g/>
,	SYM.Pun.Comma	,-x
Editoren	N.Reg.Dat.Pl.Masc	Editor-n
<g/>
,	SYM.Pun.Comma	,-x
Debuggern	N.Reg.Dat.Pl.Masc	Debuggern-n
<g/>
,	SYM.Pun.Comma	,-x
Kommandointerpretern	N.Reg.Dat.Pl.Masc	Kommandointerpretern-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Neut	die-x
interaktiven	ADJA.Pos.Dat.Sg.Neut	interaktiv-j
Mehrbenutzersystem	N.Reg.Dat.Sg.Neut	Mehrbenutzersystem-n
ITS	N.Name.Nom.Sg.Fem	ITS-n
und	CONJ.Coord	und-c
dem	ART.Def.Dat.Sg.Neut	die-x
Lisp-Rechner-Betriebssystem	N.Reg.Dat.Sg.Neut	Lisp-Rechner-Betriebssystem-n
gearbeitet	VPP.Full.Psp	arbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
leistete	VFIN.Full.1.Sg.Past.Ind	leisten-v
Pionierarbeit	N.Reg.Acc.Sg.Fem	Pionierarbeit-n
für	APPR	für-i
rechnerunabhängige	ADJA.Pos.Acc.Sg.Fem	rechnerunabhängig-j
Bildschirmunterstützung	N.Reg.Acc.Sg.Fem	Bildschirmunterstützung-n
im	APPRART.Dat.Sg.Neut	in-i
ITS	N.Name.Nom.Sg.Fem	ITS-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Darüber	PROADV.Dem	darüber-x
hinaus	APZR	hinaus-x
implementierte	VFIN.Full.1.Sg.Past.Ind	implementieren-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
absturzsicheres	ADJA.Comp.Acc.Sg.Neut	absturzsicher-j
Dateisystem	N.Reg.Acc.Sg.Neut	Dateisystem-n
und	CONJ.Coord	und-c
zwei	CARD	zwei-m
Fenstersysteme	N.Reg.Acc.Pl.Neut	Fenstersystem-n
für	APPR	für-i
Lisp-Rechner	N.Reg.Acc.Pl.Masc	Lisp-Rechner-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
GNU	ADJD.Pos	GNU-j
schreiben	VINF.Full	schreiben-v
muss	VFIN.Mod.1.Sg.Pres.Ind	müssen-v
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
denke	VFIN.Full.1.Sg.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Goldene	ADJA.Pos.Nom.Sg.Fem	golden-j
Regel	N.Reg.Nom.Sg.Fem	Regel-n
verlangt	VFIN.Full.3.Sg.Pres.Ind	verlangen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
mag	VFIN.Mod.1.Sg.Pres.Ind	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mit	APPR	mit-i
Anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
gemeinsam	ADJD.Pos	gemeinsam-j
nutzen	VINF.Full	nutzen-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mögen	VFIN.Full.3.Pl.Pres.Ind	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
kann	VFIN.Mod.1.Sg.Pres.Ind	können-v
nicht	PART.Neg	nicht-x
guten	ADJA.Pos.Gen.Sg.Neut	gut-j
Gewissens	N.Reg.Gen.Sg.Neut	Gewissen-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Vertraulichkeits	N.Reg.Acc.Sg.Neut	Vertraulichkeits-n
<g/>
-	SYM.Pun.Hyph	--x
oder	CONJ.Coord	oder-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
Softwarelizenzvereinbarung	N.Reg.Acc.Sg.Fem	Softwarelizenzvereinbarung-n
unterzeichnen	VINF.Full	unterzeichnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Damit	CONJ.SubFin	damit-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
weiterhin	ADV	weiterhin-a
Rechner	N.Reg.Acc.Pl.Masc	Rechner-n
nutzen	VINF.Full	nutzen-v
kann	VFIN.Mod.1.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
meine	PRO.Poss.Attr.Acc.Pl.Neut	meine-p
Prinzipien	N.Reg.Acc.Pl.Neut	Prinzip-n
zu	PART.Zu	zu-x
verletzen	VINF.Full	verletzen-v
<g/>
,	SYM.Pun.Comma	,-x
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
entschieden	VPP.Full.Psp	entscheiden-v
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
ausreichende	ADJA.Pos.Acc.Sg.Fem	ausreichend-j
Sammlung	N.Reg.Acc.Sg.Fem	Sammlung-n
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
zusammenzustellen	VINF.Full.zu	zusammenstellen-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
sein	VINF.Aux	sein-v
werde	VFIN.Aux.1.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
jegliche	PRO.Indef.Attr.Acc.Sg.Fem	jegliche-p
unfreie	ADJA.Pos.Acc.Sg.Fem	unfrei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
auszukommen	VINF.Full.zu	auskommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
beitragen	VINF.Full	beitragen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
bitte	VFIN.Full.1.Sg.Pres.Ind	bitten-v
Rechnerhersteller	N.Reg.Acc.Pl.Masc	Rechnerhersteller-n
um	APPR	um-i
Rechner	N.Reg.Acc.Pl.Masc	Rechner-n
<g/>
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
Geldspenden	N.Reg.Acc.Pl.Fem	Geldspende-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einzelpersonen	N.Reg.Acc.Pl.Fem	Einzelperson-n
bitte	VFIN.Full.1.Sg.Pres.Ind	bitten-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
um	APPR	um-i
Programmspenden	N.Reg.Acc.Pl.Fem	Programmspende-n
und	CONJ.Coord	und-c
deren	PRO.Dem.Subst.Gen.Pl.Fem	die-p
Arbeitskraft	N.Reg.Nom.Sg.Fem	Arbeitskraft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Rechnerhersteller	N.Reg.Nom.Sg.Masc	Rechnerhersteller-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
bereits	ADV	bereits-a
angeboten	VPP.Full.Psp	anbieten-v
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
bereitzustellen	VINF.Full.zu	bereitstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
könnten	VFIN.Mod.1.Pl.Past.Subj	können-v
mehr	ADV	mehr-a
gebrauchen	VINF.Full	gebrauchen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
spenden	VFIN.Full.3.Pl.Pres.Ind	spenden-v
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
erwarten	VINF.Full	erwarten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GNU	N.Name.Nom.Sg.Neut	GNU-n
darauf	PROADV.Dem	darauf-x
schon	ADV	schon-a
frühzeitig	ADJD.Pos	frühzeitig-j
ausgeführt	VPP.Full.Psp	ausführen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Rechner	N.Reg.Nom.Sg.Masc	Rechner-n
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Wohngebiet	N.Reg.Dat.Sg.Neut	Wohngebiet-n
nutzbar	ADJD.Pos	nutzbar-j
sein	VINF.Aux	sein-v
und	CONJ.Coord	und-c
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
aufwendige	ADJA.Pos.Acc.Sg.Fem	aufwendig-j
Kühlung	N.Reg.Acc.Sg.Fem	Kühlung-n
oder	CONJ.Coord	oder-c
Stromversorgung	N.Reg.Acc.Sg.Fem	Stromversorgung-n
benötigen	VINF.Full	benötigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einzelne	ADJA.Pos.Nom.Pl.Masc	einzeln-j
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
beitragen	VINF.Full	beitragen-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
kompatibles	ADJA.Pos.Acc.Sg.Neut	kompatibel-j
Duplikat	N.Reg.Acc.Sg.Neut	Duplikat-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Unix-Dienstprogramms	N.Reg.Gen.Sg.Neut	Unix-Dienstprogramm-n
schreiben	VINF.Full	schreiben-v
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
geben	VINF.Full	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
die	ART.Def.Acc.Pl.Neut	die-x
meisten	PRO.Indef.Attr.Acc.Pl.Neut	meiste-p
Projekte	N.Reg.Acc.Pl.Neut	Projekt-n
dürfte	VFIN.Mod.3.Sg.Past.Subj	dürfen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
solche	PRO.Indef.Attr.Acc.Pl.Fem	solche-p
teilzeitlich	ADJD.Pos	teilzeitlich-j
verteilte	ADJA.Pos.Acc.Sg.Fem	verteilt-j
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
schwierig	ADJD.Pos	schwierig-j
zu	PART.Zu	zu-x
koordinieren	VINF.Full	koordinieren-v
sein	VINF.Aux	sein-v
<g/>
;	SYM.Pun.Sent	;-x
die	ART.Def.Nom.Pl.Masc	die-x
unabhängig	ADJD.Pos	unabhängig-j
geschriebenen	ADJA.Pos.Nom.Pl.Masc	geschrieben-j
Teile	N.Reg.Nom.Pl.Masc	Teil-n
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
nicht	PART.Neg	nicht-x
zusammenarbeiten	VINF.Full	zusammenarbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
für	APPR	für-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
besondere	ADJA.Pos.Acc.Sg.Fem	besonder-j
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
<g/>
,	SYM.Pun.Comma	,-x
Unix	N.Reg.Acc.Sg.Masc	Unix-n
zu	PART.Zu	zu-x
ersetzen	VINF.Full	ersetzen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
nicht	PART.Neg	nicht-x
vorhanden	ADJD.Pos	vorhanden-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Fem	meiste-p
Schnittstellenspezifikationen	N.Reg.Nom.Pl.Fem	Schnittstellenspezifikation-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
durch	APPR	durch-i
Unix-Kompatibilität	N.Reg.Acc.Sg.Fem	Unix-Kompatibilität-n
geregelt	VPP.Full.Psp	regeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
jeder	PRO.Indef.Attr.Nom.Sg.Masc	jede-p
Beitrag	N.Reg.Nom.Sg.Masc	Beitrag-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
Rest	N.Reg.Dat.Sg.Masc	Rest-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
arbeitet	VFIN.Full.3.Sg.Pres.Ind	arbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
arbeitet	VFIN.Full.3.Sg.Pres.Ind	arbeiten-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
vermutlich	ADV	vermutlich-a
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
Rest	N.Reg.Dat.Sg.Masc	Rest-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
Geldspenden	N.Reg.Acc.Pl.Fem	Geldspende-n
erhalte	VFIN.Full.1.Sg.Pres.Ind	erhalten-v
<g/>
,	SYM.Pun.Comma	,-x
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
möglicherweise	ADV	möglicherweise-a
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
einige	PRO.Indef.Attr.Acc.Pl.*	einige-p
Leute	N.Reg.Acc.Pl.*	Leute-n
Voll	PART.Verb	voll-x
<g/>
-	SYM.Pun.Hyph	--x
oder	CONJ.Coord	oder-c
Teilzeit	N.Reg.Acc.Sg.Fem	Teilzeit-n
einzustellen	VINF.Full.zu	einstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Gehalt	N.Reg.Nom.Sg.Neut	Gehalt-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
nicht	PART.Neg	nicht-x
hoch	ADJD.Pos	hoch-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
suche	VFIN.Full.1.Sg.Pres.Ind	suchen-v
Leute	N.Reg.Acc.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
bei	APPR	bei-i
denen	PRO.Rel.Subst.Dat.Pl.Fem	die-p
das	ART.Def.Nom.Sg.Neut	die-x
Wissen	N.Reg.Nom.Sg.Neut	Wissen-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
der	ART.Def.Dat.Sg.Fem	die-x
Menschheit	N.Reg.Dat.Sg.Fem	Menschheit-n
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
<g/>
,	SYM.Pun.Comma	,-x
so	ADV	so-a
wichtig	ADJD.Pos	wichtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
wie	CONJ.Comp	wie-c
Geld	N.Reg.Acc.Sg.Neut	Geld-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
betrachte	VFIN.Full.1.Sg.Pres.Ind	betrachten-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
als	APPR	als-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
engagierten	ADJA.Pos.Dat.Pl.Fem	engagiert-j
Leuten	N.Reg.Dat.Pl.Fem	Leute-n
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
<g/>
,	SYM.Pun.Comma	,-x
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
ganzen	ADJA.Pos.Acc.Pl.Fem	ganz-j
Energien	N.Reg.Acc.Pl.Fem	Energie-n
der	ART.Def.Gen.Sg.Fem	die-x
Arbeit	N.Reg.Gen.Sg.Fem	Arbeit-n
an	APPR	an-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
zu	PART.Zu	zu-x
widmen	VINF.Full	widmen-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Notwendigkeit	N.Reg.Acc.Sg.Fem	Notwendigkeit-n
erspare	VFIN.Full.1.Sg.Pres.Ind	ersparen-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Lebensunterhalt	N.Reg.Acc.Sg.Masc	Lebensunterhalt-n
auf	APPR	auf-i
andere	ADJA.Pos.Acc.Sg.Fem	ander-j
Weise	N.Reg.Acc.Sg.Fem	Weise-n
zu	PART.Zu	zu-x
bestreiten	VINF.Full	bestreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Kontaktieren	VFIN.Full.3.Pl.Pres.Ind	kontaktieren-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
für	APPR	für-i
weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Informationen	N.Reg.Acc.Pl.Fem	Information-n
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
via	APPR	via-i
ARPANET-E-Mail	N.Reg.Nom.Sg.Masc	ARPANET-E-Mail-n
<g/>
:	SYM.Pun.Colon	:-x
RMS@MIT-MC.ARPA	N.Name.Acc.Sg.*	RMS@MIT-MC.ARPA-n
</s>
</align>
<align>
<s>
via	APPR	via-i
Usenet	N.Reg.Acc.Sg.Neut	Usenet-n
<g/>
:	SYM.Pun.Colon	:-x
...	SYM.Pun.Cont	...-x
<g/>
!	SYM.Pun.Sent	!-x
<g/>
mit-eddie	N.Name.Nom.Sg.*	mit-eddie-n
<g/>
!	SYM.Pun.Sent	!-x
</s>
<g/>
<s>
RMS	N.Name.Nom.Sg.Fem	RMS-n
<g/>
@	SYM.Other.XY	@-x
<g/>
OZ	N.Name.Nom.Sg.Neut	OZ-n
...	SYM.Pun.Cont	...-x
<g/>
!	SYM.Pun.Sent	!-x
<g/>
mit-vax	ADJD.Pos	mit-vax-j
<g/>
!	SYM.Pun.Sent	!-x
</s>
<g/>
<s>
RMS	N.Name.Nom.Sg.Fem	RMS-n
<g/>
@	SYM.Other.XY	@-x
<g/>
OZ	N.Name.Nom.Sg.Fem	OZ-n
</s>
</align>
<align>
<s>
US-Briefpost	N.Reg.Nom.Sg.Masc	US-Briefpost-n
<g/>
:	SYM.Pun.Colon	:-x
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.*.*.*	Stallman-n
166	CARD	[number]-m
Prospect	N.Name.*.*.*	Prospect-n
St	N.Name.*.Sg.Neut	Sankt-n
Cambridge	N.Name.*.*.Neut	Cambridge-n
<g/>
,	SYM.Pun.Comma	,-x
MA	N.Name.Nom.Sg.Neut	MA-n
02139	CARD	[number]-m
Nachtrag	N.Reg.Acc.Sg.Masc	Nachtrag-n
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
1	CARD	1-m
<g/>
)	SYM.Paren.Right	)-x
Schlechte	ADJA.Pos.Nom.Sg.Fem	schlecht-j
Wortwahl	N.Reg.Nom.Sg.Fem	Wortwahl-n
um	PART.Verb	um-x
'	SYM.Quot.Right	'-x
<g/>
frei	PART.Verb	frei-x
<g/>
'	SYM.Quot.Right	'-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Formulierung	N.Reg.Nom.Sg.Fem	Formulierung-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ein	ART.Indef.*.*.*	eine-x
wenig	PRO.Indef.Attr.*.*.*	wenig-p
sorglos	ADJD.Pos	sorglos-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Absicht	N.Reg.Nom.Sg.Fem	Absicht-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Berechtigung	N.Reg.Acc.Sg.Fem	Berechtigung-n
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
zahlen	VINF.Full	zahlen-v
müssen	VINF.Mod	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
benutzen	VINF.Full	benutzen-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
die	ART.Def.Nom.Pl.Neut	die-x
Wörter	N.Reg.Nom.Pl.Neut	Wort-n
verdeutlichen	VFIN.Full.3.Pl.Pres.Ind	verdeutlichen-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
nicht	PART.Neg	nicht-x
und	CONJ.Coord	und-c
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
häufig	ADJD.Pos	häufig-j
mit	APPR	mit-i
Kopien	N.Reg.Dat.Pl.Fem	Kopie-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
immer	ADV	immer-a
mit	APPR	mit-i
geringen	ADJA.Pos.Dat.Pl.Fem	gering-j
Kosten	N.Reg.Dat.Pl.Fem	Kosten-n
oder	CONJ.Coord	oder-c
kostenlos	ADJD.Pos	kostenlos-j
verbreitet	ADJD.Pos	verbreitet-j
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
interpretiert	VPP.Full.Psp	interpretieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
nie	ADV	nie-a
die	ART.Def.Nom.Sg.Fem	die-x
Absicht	N.Reg.Nom.Sg.Fem	Absicht-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/manifesto.html	N.Name	[url]-n
GNU-Manifest	N.Reg.Nom.Sg.Masc	GNU-Manifest-n
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
nachstehende	ADJA.Pos.Nom.Sg.Neut	nachstehend-j
GNU-Manifest	N.Reg.Nom.Sg.Neut	GNU-Manifest-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
1985	CARD	[number]-m
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
um	APPR	um-i
Unterstützung	N.Reg.Acc.Sg.Fem	Unterstützung-n
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
des	ART.Def.Gen.Sg.Neut	die-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
zu	PART.Zu	zu-x
bitten	VINF.Full	bitten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Masc	die-x
Textes	N.Reg.Gen.Sg.Masc	Text-n
stammt	VFIN.Full.3.Sg.Pres.Ind	stammen-v
aus	APPR	aus-i
der	ART.Def.Dat.Sg.Fem	die-x
ursprünglichen	ADJA.Pos.Dat.Sg.Fem	ursprünglich-j
Ankündigung	N.Reg.Dat.Sg.Fem	Ankündigung-n
von	APPR	von-i
1983	CARD	[number]-m
und	CONJ.Coord	und-c
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
bis	APPR	bis-i
1987	CARD	[number]-m
geringfügig	ADJD.Pos	geringfügig-j
angepasst	ADJD.Pos	angepasst-j
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
neue	ADJA.Pos.Acc.Pl.Fem	neu-j
Entwicklungen	N.Reg.Acc.Pl.Fem	Entwicklung-n
zu	PART.Zu	zu-x
berücksichtigen	VINF.Full	berücksichtigen-v
<g/>
;	SYM.Pun.Sent	;-x
seither	ADV	seither-a
scheint	VFIN.Full.3.Sg.Pres.Ind	scheinen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
am	PART.Deg	am-x
besten	ADJD.Sup	besten-j
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Text	N.Reg.Acc.Sg.Masc	Text-n
unverändert	ADJD.Pos	unverändert-j
zu	PART.Zu	zu-x
belassen	VINF.Full	belassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Seit	APPR	seit-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
von	APPR	von-i
einigen	PRO.Indef.Attr.Dat.Pl.Fem	einige-p
häufigen	ADJA.Pos.Dat.Pl.Fem	häufig-j
Missverständnissen	N.Reg.Dat.Pl.Fem	Missverständnis-n
erfahren	VINF.Full	erfahren-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
durch	APPR	durch-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
andere	ADJA.Pos.Acc.Sg.Fem	ander-j
Wortwahl	N.Reg.Acc.Sg.Fem	Wortwahl-n
hätten	VFIN.Aux.3.Pl.Past.Subj	haben-v
vermieden	VPP.Full.Psp	vermeiden-v
werden	VINF.Aux	werden-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Seit	APPR	seit-i
1993	CARD	[number]-m
hinzugefügte	ADJA.Pos.Nom.Pl.Masc	hinzugefügt-j
Kommentare	N.Reg.Nom.Pl.Masc	Kommentar-n
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
diese	PRO.Dem.Attr.Acc.Pl.Masc	diese-p
Punkte	N.Reg.Acc.Pl.Masc	Punkt-n
zu	PART.Zu	zu-x
klären	VINF.Full	klären-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
installieren	VINF.Full	installieren-v
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
empfehlen	VFIN.Full.3.Pl.Pres.Ind	empfehlen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
eines	PRO.Indef.Subst.Acc.Sg.Neut	eine-p
der	ART.Def.Gen.Pl.Neut	die-x
100	CARD	[number]-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
Freie-Software-Distributionen	N.Reg.Acc.Pl.Fem	Freie-Software-Distribution-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
verwenden	VINF.Full	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Weitere	ADJA.Comp.Nom.Pl.Fem	weit-j
Informationen	N.Reg.Nom.Pl.Fem	Information-n
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
zu	APPR	zu-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
beitragen	VINF.Full	beitragen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
siehe	VIMP.Full.2.Sg	siehe-v
http://www.gnu.org/help/.	N.Name	[url]-n
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Gen.Sg.Fem	Freie-Software-Bewegung-n
<g/>
,	SYM.Pun.Comma	,-x
einer	ART.Indef.Gen.Sg.Fem	eine-x
Kampagne	N.Reg.Gen.Sg.Fem	Kampagne-n
für	APPR	für-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
für	APPR	für-i
die	ART.Def.Acc.Pl.Masc	die-x
Nutzer	N.Reg.Acc.Pl.Masc	Nutzer-n
von	APPR	von-i
Software	N.Reg.Dat.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
handelt	VFIN.Full.3.Sg.Pres.Ind	handeln-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
daher	PROADV.Dem	daher-x
um	APPR	um-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Fehler	N.Reg.Acc.Sg.Masc	Fehler-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.*	GNU-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
Begriff	N.Reg.Dat.Sg.Masc	Begriff-n
"	SYM.Quot.Left	"-x
<g/>
Open	FM	Open-x
Source	FM	Source-x
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
assoziieren	VINF.Full	assoziieren-v
-	SYM.Pun.Hyph	--x
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
bereits	ADV	bereits-a
1998	CARD	[number]-m
von	APPR	von-i
Personen	N.Reg.Dat.Pl.Fem	Person-n
geprägt	VPP.Full.Psp	prägen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
mit	APPR	mit-i
den	ART.Def.Dat.Pl.Masc	die-x
ethischen	ADJA.Pos.Dat.Pl.Masc	ethisch-j
Werten	N.Reg.Dat.Pl.Masc	Wert-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Gen.Sg.Fem	Freie-Software-Bewegung-n
nicht	PART.Neg	nicht-x
übereinstimmten	VFIN.Full.3.Pl.Past.Ind	übereinstimmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
gebrauchten	VFIN.Full.3.Pl.Past.Ind	gebrauchen-v
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
unmoralischen	ADJA.Pos.Acc.Sg.Masc	unmoralisch-j
Ansatz	N.Reg.Acc.Sg.Masc	Ansatz-n
auf	APPR	auf-i
dem	ART.Def.Dat.Sg.Neut	die-x
gleichen	ADJA.Pos.Dat.Sg.Neut	gleich-j
Gebiet	N.Reg.Dat.Sg.Neut	Gebiet-n
zu	PART.Zu	zu-x
fördern	VINF.Full	fördern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNU	ADJD.Pos	GNU-j
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Gnu	N.Name.Nom.Sg.*	Gnu-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
für	APPR	für-i
Gnu	FM	Gnu-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Not	N.Reg.Nom.Sg.Fem	Not-n
Unix	FM	Unix-x
(	SYM.Paren.Left	(-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
Gnu	N.Name.Nom.Sg.*	Gnu-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
<g/>
'	SYM.Quot.Right	'-x
<g/>
)	SYM.Paren.Right	)-x
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
vollständig	ADJD.Pos	vollständig-j
unixoide	ADJA.Pos.Acc.Sg.Neut	unixoid-j
Softwaresystem	N.Reg.Acc.Sg.Neut	Softwaresystem-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
schreibe	VFIN.Full.1.Sg.Pres.Ind	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
frei	ADJD.Pos	frei-j
an	APPR	an-i
jedermann	N.Reg.Acc.Sg.Masc	jedermann-n
wegzugeben	VINF.Full.zu	weggeben-v
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
nutzen	VINF.Full	nutzen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
1	CARD	1-m
<g/>
)	SYM.Paren.Right	)-x
Einige	PRO.Indef.Attr.Nom.Pl.*	einige-p
andere	ADJA.Pos.Nom.Pl.*	ander-j
Freiwillige	N.Reg.Nom.Pl.*	Freiwillige-n
unterstützen	VFIN.Full.3.Pl.Pres.Ind	unterstützen-v
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beiträge	N.Reg.Nom.Pl.Masc	Beitrag-n
in	APPR	in-i
Form	N.Reg.Dat.Sg.Fem	Form-n
von	APPR	von-i
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
<g/>
,	SYM.Pun.Comma	,-x
Geld	N.Reg.Dat.Sg.Neut	Geld-n
<g/>
,	SYM.Pun.Comma	,-x
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
und	CONJ.Coord	und-c
Ausstattung	N.Reg.Dat.Sg.Fem	Ausstattung-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
dringend	ADJD.Pos	dringend-j
benötigt	VPP.Full.Psp	benötigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bis	APPR	bis-i
jetzt	ADV	jetzt-a
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Emacs-Texteditor	N.Reg.Acc.Sg.Masc	Emacs-Texteditor-n
nebst	APPR	nebst-i
Lisp	N.Name.Dat.Sg.*	Lisp-n
zum	APPRART.Dat.Sg.Neut	zu-i
Schreiben	N.Reg.Dat.Sg.Neut	Schreiben-n
von	APPR	von-i
Editorbefehlen	N.Reg.Dat.Pl.Fem	Editorbefehlen-n
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Quelltextdebugger	N.Reg.Acc.Sg.Masc	Quelltextdebugger-n
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Yacc-kompatiblen	ADJA.Pos.Acc.Sg.Masc	Yacc-kompatibel-j
Parsergenerator	N.Reg.Acc.Sg.Masc	Parsergenerator-n
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Linker	N.Reg.Acc.Sg.Masc	Linker-n
und	CONJ.Coord	und-c
etwa	ADV	etwa-a
35	CARD	35-m
Dienstprogramme	N.Reg.Acc.Pl.Neut	Dienstprogramm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Kommandozeileninterpreter	N.Reg.Nom.Sg.Masc	Kommandozeileninterpreter-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
beinahe	ADV	beinahe-a
fertig	ADJD.Pos	fertig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
neuer	ADJA.Pos.Nom.Sg.Masc	neu-j
portabler	ADJA.Pos.Nom.Sg.Masc	portabl-j
<g/>
,	SYM.Pun.Comma	,-x
optimierender	ADJA.Pos.Nom.Sg.Masc	optimierend-j
C-Compiler	N.Reg.Nom.Sg.Masc	C-Compiler-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
aus	APPR	aus-i
seinem	PRO.Poss.Attr.Dat.Sg.Masc	seine-p
eigenen	ADJA.Pos.Dat.Sg.Masc	eigen-j
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
kompiliert	VPP.Full.Psp	kompilieren-v
und	CONJ.Coord	und-c
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Jahr	N.Reg.Acc.Sg.Neut	Jahr-n
freigegeben	VPP.Full.Psp	freigeben-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
anfänglicher	ADJA.Pos.Nom.Sg.Masc	anfänglich-j
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
existiert	VFIN.Full.3.Sg.Pres.Ind	existieren-v
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
aber	ADV	aber-a
noch	ADV	noch-a
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
Funktionen	N.Reg.Acc.Pl.Fem	Funktion-n
benötigt	VPP.Full.Psp	benötigen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Unix	ADJD.Pos	Unix-j
emulieren	VINF.Full	emulieren-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sobald	CONJ.SubFin	sobald-c
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
und	CONJ.Coord	und-c
Compiler	N.Reg.Nom.Pl.Masc	Compiler-n
fertiggestellt	VPP.Full.Psp	fertigstellen-v
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
möglich	ADJD.Pos	möglich-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
zur	APPRART.Dat.Sg.Fem	zu-i
Programmentwicklung	N.Reg.Dat.Sg.Fem	Programmentwicklung-n
einsatzfähiges	ADJA.Pos.Acc.Sg.Neut	einsatzfähig-j
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
zu	PART.Zu	zu-x
verteilen	VINF.Full	verteilen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
TeX	N.Name.Nom.Sg.*	TeX-n
als	APPR	als-i
Textsatzsystem	N.Reg.Nom.Sg.Neut	Textsatzsystem-n
einsetzen	VINF.Full	einsetzen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
auch	ADV	auch-a
an	APPR	an-i
Nroff	N.Reg.Dat.Sg.Masc	Nroff-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
gearbeitet	VPP.Full.Psp	arbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auch	ADV	auch-a
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
freie	ADJA.Pos.Acc.Sg.Neut	frei-j
<g/>
,	SYM.Pun.Comma	,-x
portable	ADJA.Pos.Acc.Sg.Neut	portabl-j
X	SYM.Other.XY	X-x
Window	FM	Window-x
System	N.Reg.Acc.Sg.Neut	System-n
verwenden	VINF.Full	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Danach	PROADV.Dem	danach-x
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
portables	ADJA.Pos.Acc.Sg.Neut	portabl-j
Common	N.Reg.Acc.Sg.Neut	Common-n
Lisp	N.Name.Nom.Sg.*	Lisp-n
hinzufügen	VINF.Full	hinzufügen-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
Empire-Spiel	N.Reg.Acc.Sg.Neut	Empire-Spiel-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Tabellenkalkulation	N.Reg.Acc.Sg.Fem	Tabellenkalkulation-n
und	CONJ.Coord	und-c
hunderte	VFIN.Full.3.Sg.Past.Ind	hunderte-v
weiterer	ADJA.Comp.Gen.Pl.Neut	weit-j
Dinge	N.Reg.Gen.Pl.Neut	Ding-n
plus	APPR	plus-i
Online-Dokumentation	N.Reg.Acc.Sg.Fem	Online-Dokumentation-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hoffen	VFIN.Full.1.Pl.Pres.Ind	hoffen-v
<g/>
,	SYM.Pun.Comma	,-x
schließlich	ADV	schließlich-a
alles	PRO.Indef.Attr.Acc.Sg.Neut	alle-p
Nützliche	N.Reg.Acc.Sg.Neut	Nützliche-n
bereitstellen	VINF.Full	bereitstellen-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
normalerweise	ADV	normalerweise-a
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Unix-System	N.Reg.Dat.Sg.Neut	Unix-System-n
gehört	VFIN.Full.3.Sg.Pres.Ind	gehören-v
und	CONJ.Coord	und-c
vieles	PRO.Indef.Subst.Nom.Sg.Neut	viele-p
mehr	ADV	mehr-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
sein	PRO.Poss.Attr.Acc.Sg.Neut	seine-p
Unix-Programme	N.Reg.Acc.Pl.Neut	Unix-Programm-n
auszuführen	VINF.Full.zu	ausführen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
identisch	ADJD.Pos	identisch-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
Grundlage	N.Reg.Acc.Sg.Fem	Grundlage-n
unserer	PRO.Poss.Attr.Gen.Pl.Fem	unsre-p
Erfahrungen	N.Reg.Gen.Pl.Fem	Erfahrung-n
mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Betriebssystemen	N.Reg.Dat.Pl.Neut	Betriebssystem-n
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
gebräuchlichen	ADJA.Pos.Acc.Pl.Fem	gebräuchlich-j
Verbesserungen	N.Reg.Acc.Pl.Fem	Verbesserung-n
vornehmen	VINF.Full	vornehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Insbesondere	ADV	insbesondere-a
planen	VFIN.Full.1.Pl.Pres.Ind	planen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
längere	ADJA.Comp.Acc.Pl.Masc	lang-j
Dateinamen	N.Reg.Acc.Pl.Masc	Dateiname-n
<g/>
,	SYM.Pun.Comma	,-x
Datei-Versionsnummern	N.Reg.Acc.Pl.Fem	Datei-Versionsnummer-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
absturzsicheres	ADJA.Comp.Acc.Sg.Neut	absturzsicher-j
Dateisystem	N.Reg.Acc.Sg.Neut	Dateisystem-n
<g/>
,	SYM.Pun.Comma	,-x
eventuell	ADJD.Pos	eventuell-j
Dateitypendungen	N.Reg.Acc.Pl.Fem	Dateitypendung-n
<g/>
,	SYM.Pun.Comma	,-x
terminalunabhängige	ADJA.Pos.Acc.Sg.Fem	terminalunabhängig-j
Anzeigeunterstützung	N.Reg.Acc.Sg.Fem	Anzeigeunterstützung-n
und	CONJ.Coord	und-c
vielleicht	ADV	vielleicht-a
irgendwann	ADV	irgendwann-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
Lisp-basiertes	ADJA.Pos.Nom.Sg.Neut	Lisp-basiert-j
Fenstersystem	N.Reg.Nom.Sg.Neut	Fenstersystem-n
<g/>
,	SYM.Pun.Comma	,-x
durch	APPR	durch-i
welches	PRO.Rel.Subst.Acc.Sg.Neut	welche-p
mehrere	PRO.Indef.Attr.Nom.Pl.Masc	mehrere-p
Lisp	N.Reg.Nom.Pl.Masc	Lisp-n
<g/>
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
gewöhnliche	ADJA.Pos.Nom.Pl.Neut	gewöhnlich-j
Unix-Programme	N.Reg.Nom.Pl.Neut	Unix-Programm-n
sich	PRO.Refl.Subst.3.Dat.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Bildschirm	N.Reg.Acc.Sg.Masc	Bildschirm-n
teilen	VINF.Full	teilen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sowohl	CONJ.Coord	sowohl-c
C	N.Name.Nom.Sg.*	C-n
und	CONJ.Coord	und-c
Lisp	N.Name.Nom.Sg.*	Lisp-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
als	APPR	als-i
Systemprogrammiersprachen	N.Reg.Nom.Pl.Fem	Systemprogrammiersprache-n
verfügbar	ADJD.Pos	verfügbar-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Kommunikation	N.Reg.Acc.Sg.Fem	Kommunikation-n
beabsichtigen	VFIN.Full.1.Pl.Pres.Ind	beabsichtigen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
UUCP	N.Name.Nom.Sg.*	UUCP-n
<g/>
,	SYM.Pun.Comma	,-x
MIT	N.Name.Gen.Sg.Neut	MIT-n
Chaosnet	N.Reg.Acc.Sg.Neut	Chaosnet-n
sowie	CONJ.Coord	sowie-c
Internetprotokolle	N.Reg.Acc.Sg.Fem	Internetprotokolle-n
zu	PART.Zu	zu-x
unterstützen	VINF.Full	unterstützen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
richtet	VFIN.Full.3.Sg.Pres.Ind	richten-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
zunächst	ADV	zunächst-a
an	APPR	an-i
Rechner	N.Reg.Dat.Sg.Masc	Rechner-n
der	ART.Def.Gen.Pl.Masc	die-x
68000	CARD	[number]-m
<g/>
/	SYM.Pun.Slash	/-x
<g/>
16000-Klasse	N.Reg.Nom.Pl.Masc	16000-Klasse-n
mit	APPR	mit-i
virtuellem	ADJA.Pos.Dat.Sg.Masc	virtuell-j
Speicher	N.Reg.Dat.Sg.Masc	Speicher-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
auf	APPR	auf-i
diesen	PRO.Dem.Subst.Acc.Sg.Masc	diese-p
am	APPRART.Dat.Sg.Masc	an-i
leichtesten	ADJA.Sup.Dat.Sg.Masc	leicht-j
lauffähig	ADJD.Pos	lauffähig-j
gemacht	VPP.Full.Psp	machen-v
werden	VINF.Aux	werden-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Den	ART.Def.Acc.Sg.Masc	die-x
zusätzlichen	ADJA.Pos.Acc.Sg.Masc	zusätzlich-j
Aufwand	N.Reg.Acc.Sg.Masc	Aufwand-n
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
auf	APPR	auf-i
kleinere	ADJA.Comp.Acc.Pl.Masc	klein-j
Rechner	N.Reg.Acc.Pl.Masc	Rechner-n
zu	PART.Zu	zu-x
portieren	VINF.Full	portieren-v
<g/>
,	SYM.Pun.Comma	,-x
überlassen	VFIN.Full.1.Pl.Pres.Ind	überlassen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
jemandem	PRO.Indef.Subst.Dat.Sg.Masc	jemand-p
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
auf	APPR	auf-i
diesen	PRO.Dem.Subst.Acc.Sg.Masc	diese-p
verwenden	VINF.Full	verwenden-v
will	VFIN.Mod.3.Sg.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Um	CONJ.SubInf	um-c
fürchterliche	ADJA.Pos.Acc.Pl.Fem	fürchterlich-j
Verwechselungen	N.Reg.Acc.Pl.Fem	Verwechselung-n
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
sprechen	VFIN.Full.3.Pl.Pres.Ind	sprechen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
bitte	ADV	bitte-a
das	ART.Def.Acc.Sg.Neut	die-x
g	N.Reg.*.*.*	g-n
im	APPRART.Dat.Sg.Neut	in-i
Wort	N.Reg.Dat.Sg.Neut	Wort-n
GNU	N.Name.Nom.Sg.*	GNU-n
mit	APPR	mit-i
aus	PART.Verb	aus-x
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
dabei	PROADV.Dem	dabei-x
um	APPR	um-i
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
dieses	PRO.Dem.Attr.Gen.Sg.Neut	diese-p
Projekts	N.Reg.Gen.Sg.Neut	Projekt-n
handelt	VFIN.Full.3.Sg.Pres.Ind	handeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
GNU	ADJD.Pos	GNU-j
schreiben	VINF.Full	schreiben-v
muss	VFIN.Mod.1.Sg.Pres.Ind	müssen-v
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
denke	VFIN.Full.1.Sg.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Goldene	ADJA.Pos.Nom.Sg.Fem	golden-j
Regel	N.Reg.Nom.Sg.Fem	Regel-n
verlangt	VFIN.Full.3.Sg.Pres.Ind	verlangen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
mag	VFIN.Mod.1.Sg.Pres.Ind	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mit	APPR	mit-i
Anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
gemeinsam	ADJD.Pos	gemeinsam-j
nutzen	VINF.Full	nutzen-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mögen	VFIN.Full.3.Pl.Pres.Ind	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Softwareanbieter	N.Reg.Nom.Pl.Masc	Softwareanbieter-n
hingegen	ADV	hingegen-a
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
die	ART.Def.Acc.Pl.Masc	die-x
Benutzer	N.Reg.Acc.Pl.Masc	Benutzer-n
entzweien	VINF.Full	entzweien-v
und	CONJ.Coord	und-c
unterwerfen	VINF.Full	unterwerfen-v
<g/>
,	SYM.Pun.Comma	,-x
wobei	CONJ.SubFin	wobei-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
Anwender	N.Reg.Acc.Sg.Masc	Anwender-n
dazu	PROADV.Dem	dazu-x
verpflichten	VFIN.Full.3.Pl.Pres.Ind	verpflichten-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
zu	PART.Zu	zu-x
teilen	VINF.Full	teilen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
weigere	VFIN.Full.1.Sg.Pres.Ind	weigern-v
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Solidarität	N.Reg.Acc.Sg.Fem	Solidarität-n
mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
zu	PART.Zu	zu-x
brechen	VINF.Full	brechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
kann	VFIN.Mod.1.Sg.Pres.Ind	können-v
nicht	PART.Neg	nicht-x
guten	ADJA.Pos.Gen.Sg.Neut	gut-j
Gewissens	N.Reg.Gen.Sg.Neut	Gewissen-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Vertraulichkeits	N.Reg.Acc.Sg.Neut	Vertraulichkeits-n
<g/>
-	SYM.Pun.Hyph	--x
oder	CONJ.Coord	oder-c
Softwarelizenzvereinbarung	N.Reg.Acc.Sg.Fem	Softwarelizenzvereinbarung-n
unterzeichnen	VINF.Full	unterzeichnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Jahrelang	ADJD.Pos	jahrelang-j
arbeitete	VFIN.Full.1.Sg.Past.Subj	arbeiten-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
im	APPRART.Dat.Sg.Neut	in-i
Labor	N.Reg.Dat.Sg.Neut	Labor-n
für	APPR	für-i
künstliche	ADJA.Pos.Acc.Sg.Fem	künstlich-j
Intelligenz	N.Reg.Acc.Sg.Fem	Intelligenz-n
(	SYM.Paren.Left	(-x
<g/>
KI-Labor	N.Name.Nom.Sg.Neut	KI-Labor-n
<g/>
)	SYM.Paren.Right	)-x
des	ART.Def.Gen.Sg.Neut	die-x
MIT	N.Name.Gen.Sg.Neut	MIT-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
solchen	PRO.Indef.Attr.Dat.Pl.Fem	solche-p
Tendenzen	N.Reg.Dat.Pl.Fem	Tendenz-n
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
vorhandenen	ADJA.Pos.Acc.Pl.Fem	vorhanden-j
Gastfreundlichkeiten	N.Reg.Acc.Pl.Fem	Gastfreundlichkeit-n
zu	PART.Zu	zu-x
widerstehen	VINF.Full	widerstehen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
letzten	ADJA.Pos.Gen.Sg.Neut	letzt-j
Endes	N.Reg.Gen.Sg.Neut	Ende-n
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
zu	PART.Deg	zu-x
weit	ADJD.Pos	weit-j
gegangen	VPP.Full.Psp	gehen-v
<g/>
:	SYM.Pun.Colon	:-x
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
konnte	VFIN.Mod.1.Sg.Past.Ind	können-v
nicht	PART.Neg	nicht-x
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Institution	N.Reg.Dat.Sg.Fem	Institution-n
bleiben	VINF.Full	bleiben-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
solche	PRO.Indef.Attr.Nom.Pl.Neut	solche-p
Dinge	N.Reg.Nom.Pl.Neut	Ding-n
gegen	APPR	gegen-i
meinen	PRO.Poss.Attr.Acc.Sg.Masc	meine-p
Willen	N.Reg.Acc.Sg.Masc	Wille-n
geschehen	VPP.Full.Psp	geschehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Damit	CONJ.SubFin	damit-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
weiterhin	ADV	weiterhin-a
Rechner	N.Reg.Acc.Pl.Masc	Rechner-n
ohne	APPR	ohne-i
Schmach	N.Reg.Acc.Sg.Fem	Schmach-n
benutzen	VINF.Full	benutzen-v
kann	VFIN.Mod.1.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
beschlossen	VPP.Full.Psp	beschließen-v
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
genügend	ADJD.Pos	genügend-j
große	ADJA.Pos.Acc.Sg.Fem	groß-j
Sammlung	N.Reg.Acc.Sg.Fem	Sammlung-n
von	APPR	von-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
zusammenzustellen	VINF.Full.zu	zusammenstellen-v
<g/>
,	SYM.Pun.Comma	,-x
so	ADV	so-a
dass	CONJ.SubFin	dass-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
sein	VINF.Aux	sein-v
werde	VFIN.Aux.1.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
jegliche	PRO.Indef.Attr.Acc.Sg.Fem	jegliche-p
unfreie	ADJA.Pos.Acc.Sg.Fem	unfrei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
auszukommen	VINF.Full.zu	auskommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
beim	APPRART.Dat.Sg.Neut	bei-i
KI-Labor	N.Reg.Dat.Sg.Neut	KI-Labor-n
gekündigt	VPP.Full.Psp	kündigen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
dem	ART.Def.Dat.Sg.Neut	die-x
MIT	N.Name.Dat.Sg.Neut	MIT-n
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
rechtlichen	ADJA.Pos.Acc.Sg.Masc	rechtlich-j
Vorwand	N.Reg.Acc.Sg.Masc	Vorwand-n
zu	PART.Zu	zu-x
bieten	VINF.Full	bieten-v
<g/>
,	SYM.Pun.Comma	,-x
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
daran	PROADV.Dem	daran-x
zu	PART.Zu	zu-x
hindern	VINF.Full	hindern-v
<g/>
,	SYM.Pun.Comma	,-x
GNU	ADJD.Pos	GNU-j
zu	PART.Zu	zu-x
verschenken	VINF.Full	verschenken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
2	CARD	2-m
<g/>
)	SYM.Paren.Right	)-x
Warum	PROADV.Inter	warum-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
GNU	N.Name.Nom.Sg.*	GNU-n
mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
kompatibel	ADJD.Pos	kompatibel-j
sein	VINF.Aux	sein-v
</s>
</align>
<align>
<s>
Unix	N.Name.Nom.Sg.*	Unix-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
mein	PRO.Poss.Attr.Nom.Sg.Neut	meine-p
ideales	ADJA.Pos.Nom.Sg.Neut	ideal-j
System	N.Reg.Nom.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
so	ADV	so-a
übel	ADJD.Pos	übel-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
wesentlichen	ADJA.Pos.Nom.Pl.Fem	wesentlich-j
Eigenschaften	N.Reg.Nom.Pl.Fem	Eigenschaft-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
scheinen	VFIN.Full.3.Pl.Pres.Ind	scheinen-v
gute	ADJA.Pos.Nom.Pl.Fem	gut-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
denke	VFIN.Full.1.Sg.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
fehlendes	ADJA.Pos.Acc.Sg.Neut	fehlend-j
ergänzen	VINF.Full	ergänzen-v
kann	VFIN.Mod.1.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
die	ART.Def.Acc.Pl.Fem	die-x
guten	ADJA.Pos.Acc.Pl.Fem	gut-j
Eigenschaften	N.Reg.Acc.Pl.Fem	Eigenschaft-n
zu	PART.Zu	zu-x
verderben	VINF.Full	verderben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
kompatibles	ADJA.Pos.Nom.Sg.Neut	kompatibel-j
System	N.Reg.Nom.Sg.Neut	System-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
für	APPR	für-i
viele	PRO.Indef.Attr.Acc.Pl.Masc	viele-p
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
angenehm	ADJD.Pos	angenehm-j
zu	PART.Zu	zu-x
übernehmen	VINF.Full	übernehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
GNU	ADJD.Pos	GNU-j
erhältlich	ADJD.Pos	erhältlich-j
sein	VINF.Aux	sein-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Public	FM	Public-x
Domain	FM	Domain-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Jedermanm	N.Reg.Nom.Sg.Neut	Jedermanm-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
erlaubt	ADJD.Pos	erlaubt-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
GNU	ADJD.Pos	GNU-j
zu	PART.Zu	zu-x
modifizieren	VINF.Full	modifizieren-v
und	CONJ.Coord	und-c
weiterzugeben	VINF.Full.zu	weitergeben-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
keinem	PRO.Indef.Attr.Dat.Sg.Masc	keine-p
Distributor	N.Reg.Dat.Sg.Masc	Distributor-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
erlaubt	ADJD.Pos	erlaubt-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Weitergabe	N.Reg.Acc.Sg.Fem	Weitergabe-n
zu	PART.Zu	zu-x
beschränken	VINF.Full	beschränken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
D.	N.Name.Nom.Sg.*	D.-n
h.	VFIN.Full.3.Sg.Pres.Ind	h.-v
</s>
</align>
<align>
<s>
proprietäre	ADJA.Pos.Nom.Pl.Fem	proprietär-j
Modifikationen	N.Reg.Nom.Pl.Fem	Modifikation-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
nicht	PART.Neg	nicht-x
erlaubt	ADJD.Pos	erlaubt-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
möchte	VFIN.Mod.1.Sg.Past.Subj	mögen-v
damit	PROADV.Dem	damit-x
sicherstellen	VINF.Full	sicherstellen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
alle	PRO.Indef.Attr.Nom.Pl.Fem	alle-p
Varianten	N.Reg.Nom.Pl.Fem	Variante-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
frei	ADJD.Pos	frei-j
bleiben	VINF.Full	bleiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
andere	ADJA.Pos.Nom.Pl.Masc	ander-j
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
mithelfen	VINF.Full	mithelfen-v
wollen	VINF.Mod	wollen-v
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
viele	PRO.Indef.Attr.Acc.Pl.Masc	viele-p
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Programmierer	N.Reg.Acc.Pl.Masc	Programmierer-n
gefunden	VPP.Full.Psp	finden-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
begeistert	ADJD.Pos	begeistert-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
und	CONJ.Coord	und-c
helfen	VINF.Full	helfen-v
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Kommerzialisierung	N.Reg.Dat.Sg.Fem	Kommerzialisierung-n
von	APPR	von-i
Systemsoftware	N.Reg.Dat.Sg.Fem	Systemsoftware-n
unzufrieden	ADJD.Pos	unzufrieden-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mag	VFIN.Mod.3.Sg.Pres.Ind	mögen-v
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zwingt	VFIN.Full.3.Sg.Pres.Ind	zwingen-v
sie	PRO.Pers.Subst.3.Acc.*.*	sie-p
gleichzeitig	ADJD.Pos	gleichzeitig-j
<g/>
,	SYM.Pun.Comma	,-x
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Programmierer	N.Reg.Acc.Pl.Masc	Programmierer-n
im	APPRART.Dat.Sg.Neut	in-i
allgemeinen	ADJA.Pos.Dat.Sg.Neut	allgemein-j
als	APPR	als-i
Gegner	N.Reg.Acc.Sg.Masc	Gegner-n
anstatt	CONJ.SubInf	anstatt-c
als	APPR	als-i
Kameraden	N.Reg.Acc.Sg.Masc	Kamerad-n
zu	PART.Zu	zu-x
betrachten	VINF.Full	betrachten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
fundamentale	ADJA.Pos.Nom.Sg.Masc	fundamental-j
Akt	N.Reg.Nom.Sg.Masc	Akt-n
der	ART.Def.Gen.Sg.Fem	die-x
Freundschaft	N.Reg.Gen.Sg.Fem	Freundschaft-n
zwischen	APPR	zwischen-i
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
Teilen	N.Reg.Dat.Pl.Masc	Teil-n
von	APPR	von-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
<g/>
;	SYM.Pun.Sent	;-x
derzeitige	ADJA.Pos.Nom.Pl.Fem	derzeitig-j
Vermarktungspraktiken	N.Reg.Nom.Pl.Fem	Vermarktungspraktik-n
verbieten	VFIN.Full.3.Pl.Pres.Ind	verbieten-v
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
im	APPRART.Dat.Sg.Neut	in-i
wesentlichen	N.Reg.Dat.Sg.Neut	wesentlichen-n
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
gegenseitig	ADJD.Pos	gegenseitig-j
als	APPR	als-i
Freunde	N.Reg.Acc.Pl.Masc	Freund-n
zu	PART.Zu	zu-x
behandeln	VINF.Full	behandeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Käufer	N.Reg.Nom.Sg.Masc	Käufer-n
von	APPR	von-i
Software	N.Reg.Dat.Sg.Fem	Software-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
die	ART.Def.Acc.Sg.Fem	die-x
Wahl	N.Reg.Acc.Sg.Fem	Wahl-n
zwischen	APPR	zwischen-i
Freundschaft	N.Reg.Dat.Sg.Fem	Freundschaft-n
und	CONJ.Coord	und-c
Gesetzestreue	N.Reg.Dat.Sg.Fem	Gesetzestreue-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Naturgemäß	ADJD.Pos	naturgemäß-j
entscheiden	VFIN.Full.3.Pl.Pres.Ind	entscheiden-v
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Freundschaft	N.Reg.Nom.Sg.Fem	Freundschaft-n
für	APPR	für-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
wichtiger	ADJD.Comp	wichtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
diejenigen	PRO.Dem.Subst.Acc.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Rel.Subst.Nom.Pl.Fem	welche-p
an	APPR	an-i
das	ART.Def.Acc.Sg.Neut	die-x
Gesetz	N.Reg.Acc.Sg.Neut	Gesetz-n
glauben	VFIN.Full.3.Pl.Pres.Ind	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
schwere	ADJA.Pos.Acc.Sg.Fem	schwer-j
Entscheidung	N.Reg.Acc.Sg.Fem	Entscheidung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
zynisch	ADJD.Pos	zynisch-j
und	CONJ.Coord	und-c
betrachten	VFIN.Full.3.Pl.Pres.Ind	betrachten-v
Programmierung	N.Reg.Acc.Sg.Fem	Programmierung-n
nur	ADV	nur-a
noch	ADV	noch-a
als	APPR	als-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Durch	APPR	durch-i
die	ART.Def.Acc.Sg.Fem	die-x
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
an	APPR	an-i
und	CONJ.Coord	und-c
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.*	GNU-n
anstelle	APPR	anstelle-i
von	APPR	von-i
proprietären	ADJA.Pos.Dat.Pl.Neut	proprietär-j
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
gleichzeitig	ADJD.Pos	gleichzeitig-j
zu	APPR	zu-i
jedem	PRO.Indef.Attr.Dat.Sg.Masc	jede-p
gastfreundlich	ADJD.Pos	gastfreundlich-j
sein	VINF.Aux	sein-v
und	CONJ.Coord	und-c
das	ART.Def.Acc.Sg.Neut	die-x
Gesetz	N.Reg.Acc.Sg.Neut	Gesetz-n
befolgen	VINF.Full	befolgen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Außerdem	PROADV.Dem	außerdem-x
dient	VFIN.Full.3.Sg.Pres.Ind	dienen-v
GNU	N.Name.Nom.Sg.*	GNU-n
als	APPR	als-i
inspirierendes	ADJA.Pos.Nom.Sg.Neut	inspirierend-j
Beispiel	N.Reg.Nom.Sg.Neut	Beispiel-n
und	CONJ.Coord	und-c
Transparent	N.Reg.Nom.Sg.Neut	Transparent-n
<g/>
,	SYM.Pun.Comma	,-x
andere	PRO.Indef.Subst.Acc.Pl.*	andere-p
zu	PART.Zu	zu-x
versammeln	VINF.Full	versammeln-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
beim	APPRART.Dat.Sg.Neut	bei-i
Teilen	N.Reg.Dat.Pl.Neut	Teil-n
anzuschließen	VINF.Full.zu	anschließen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
vermittelt	VFIN.Full.3.Sg.Pres.Ind	vermitteln-v
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Gefühl	N.Reg.Acc.Sg.Neut	Gefühl-n
der	ART.Def.Gen.Sg.Fem	die-x
Harmonie	N.Reg.Gen.Sg.Fem	Harmonie-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
bei	APPR	bei-i
Nutzung	N.Reg.Dat.Sg.Fem	Nutzung-n
unfreier	ADJA.Pos.Gen.Pl.Fem	unfrei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
unmöglich	ADJD.Pos	unmöglich-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
rund	ADJD.Pos	rund-j
die	ART.Def.Nom.Sg.Fem	die-x
Hälfte	N.Reg.Nom.Sg.Fem	Hälfte-n
der	ART.Def.Gen.Pl.Masc	die-x
Programmierer	N.Reg.Gen.Pl.Masc	Programmierer-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
denen	PRO.Rel.Subst.Dat.Pl.Masc	die-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
sprach	VFIN.Full.1.Sg.Past.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
entscheidendes	ADJA.Pos.Nom.Sg.Neut	entscheidend-j
Glücksgefühl	N.Reg.Nom.Sg.Neut	Glücksgefühl-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
durch	APPR	durch-i
Geld	N.Reg.Acc.Sg.Neut	Geld-n
nicht	PART.Neg	nicht-x
ersetzt	VPP.Full.Psp	ersetzen-v
werden	VINF.Aux	werden-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
beitragen	VINF.Full	beitragen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
Um	CONJ.SubInf	um-c
an	APPR	an-i
aktuellen	ADJA.Pos.Dat.Pl.Fem	aktuell-j
Softwareaufgaben	N.Reg.Dat.Pl.Fem	Softwareaufgabe-n
mitzuarbeiten	VINF.Full.zu	mitarbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
siehe	VIMP.Full.2.Sg	siehe-v
Projekte	N.Reg.Nom.Pl.Neut	Projekt-n
hoher	ADJA.Pos.Gen.Sg.Fem	hoch-j
Priorität	N.Reg.Gen.Sg.Fem	Priorität-n
und	CONJ.Coord	und-c
GNU-Projekte	N.Reg.Gen.Sg.Fem	GNU-Projekte-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Hilfe	N.Reg.Acc.Sg.Fem	Hilfe-n
suchen	VFIN.Full.3.Pl.Pres.Ind	suchen-v
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Dat.Sg.Fem	die-x
allgemeinen	ADJA.Pos.Dat.Sg.Fem	allgemein-j
Aufgabenliste	N.Reg.Dat.Sg.Fem	Aufgabenliste-n
für	APPR	für-i
GNU-Software	N.Reg.Acc.Pl.Neut	GNU-Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
der	ART.Def.Gen.Sg.Fem	die-x
Hilfe	N.Reg.Gen.Sg.Fem	Hilfe-n
siehe	ADV	siehe-a
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Leitfaden	N.Reg.Nom.Sg.Masc	Leitfaden-n
zur	APPRART.Dat.Sg.Fem	zu-i
Unterstützung	N.Reg.Dat.Sg.Fem	Unterstützung-n
des	ART.Def.Gen.Sg.Neut	die-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
bitte	VFIN.Full.1.Sg.Pres.Ind	bitten-v
Rechnerhersteller	N.Reg.Acc.Pl.Masc	Rechnerhersteller-n
um	APPR	um-i
Rechner	N.Reg.Acc.Pl.Masc	Rechner-n
<g/>
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
Geldspenden	N.Reg.Acc.Pl.Fem	Geldspende-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einzelpersonen	N.Reg.Acc.Pl.Fem	Einzelperson-n
bitte	VFIN.Full.1.Sg.Pres.Ind	bitten-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
um	APPR	um-i
Spenden	N.Reg.Acc.Pl.Fem	Spende-n
in	APPR	in-i
Form	N.Reg.Dat.Sg.Fem	Form-n
von	APPR	von-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
und	CONJ.Coord	und-c
Mitwirkung	N.Reg.Dat.Sg.Fem	Mitwirkung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
uns	PRO.Refl.Subst.3.Dat.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
zur	APPRART.Dat.Sg.Fem	zu-i
Verfügung	N.Reg.Dat.Sg.Fem	Verfügung-n
stellen	VFIN.Full.3.Pl.Pres.Ind	stellen-v
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
damit	PROADV.Dem	damit-x
rechnen	VINF.Full	rechnen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GNU	N.Name.Nom.Sg.*	GNU-n
relativ	ADJD.Pos	relativ-j
früh	ADJD.Pos	früh-j
darauf	PROADV.Dem	darauf-x
laufen	VINF.Full	laufen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
Rechner	N.Reg.Nom.Pl.Masc	Rechner-n
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
komplette	ADJA.Pos.Nom.Pl.Neut	komplett-j
<g/>
,	SYM.Pun.Comma	,-x
gebrauchsfertige	ADJA.Pos.Nom.Pl.Neut	gebrauchsfertig-j
Systeme	N.Reg.Nom.Pl.Neut	System-n
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Wohnung	N.Reg.Dat.Sg.Fem	Wohnung-n
benutzt	VPP.Full.Psp	benutzen-v
werden	VINF.Aux	werden-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
und	CONJ.Coord	und-c
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
außergewöhnliche	ADJA.Pos.Acc.Sg.Fem	außergewöhnlich-j
Kühlung	N.Reg.Acc.Sg.Fem	Kühlung-n
oder	CONJ.Coord	oder-c
Stromversorgung	N.Reg.Acc.Sg.Fem	Stromversorgung-n
benötigen	VINF.Full	benötigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
sehr	ADV	sehr-a
viele	PRO.Indef.Attr.Acc.Pl.Masc	viele-p
Programmierer	N.Reg.Acc.Pl.Masc	Programmierer-n
gefunden	VPP.Full.Psp	finden-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
bereitwillig	ADJD.Pos	bereitwillig-j
in	APPR	in-i
Teilzeit	N.Reg.Dat.Sg.Fem	Teilzeit-n
zu	APPR	zu-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
beitragen	VINF.Full	beitragen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
die	ART.Def.Acc.Pl.Neut	die-x
meisten	PRO.Indef.Attr.Acc.Pl.Neut	meiste-p
Projekte	N.Reg.Acc.Pl.Neut	Projekt-n
dürfte	VFIN.Mod.3.Sg.Past.Subj	dürfen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
solche	PRO.Indef.Attr.Acc.Pl.Fem	solche-p
teilzeitlich	ADJD.Pos	teilzeitlich-j
verteilte	ADJA.Pos.Acc.Sg.Fem	verteilt-j
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
schwierig	ADJD.Pos	schwierig-j
zu	PART.Zu	zu-x
koordinieren	VINF.Full	koordinieren-v
sein	VINF.Aux	sein-v
<g/>
;	SYM.Pun.Sent	;-x
die	ART.Def.Nom.Pl.Masc	die-x
unabhängig	ADJD.Pos	unabhängig-j
geschriebenen	ADJA.Pos.Nom.Pl.Masc	geschrieben-j
Teile	N.Reg.Nom.Pl.Masc	Teil-n
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
nicht	PART.Neg	nicht-x
zusammenarbeiten	VINF.Full	zusammenarbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
für	APPR	für-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
besondere	ADJA.Pos.Acc.Sg.Fem	besonder-j
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
<g/>
,	SYM.Pun.Comma	,-x
Unix	N.Reg.Acc.Sg.Masc	Unix-n
zu	PART.Zu	zu-x
ersetzen	VINF.Full	ersetzen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
nicht	PART.Neg	nicht-x
vorhanden	ADJD.Pos	vorhanden-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
komplettes	ADJA.Pos.Nom.Sg.Neut	komplett-j
Unix-System	N.Reg.Nom.Sg.Neut	Unix-System-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
hunderte	N.Reg.Acc.Pl.Masc	hunderte-n
von	APPR	von-i
Dienstprogrammen	N.Reg.Dat.Pl.Neut	Dienstprogramm-n
<g/>
,	SYM.Pun.Comma	,-x
von	APPR	von-i
denen	PRO.Rel.Subst.Dat.Pl.Neut	die-p
jedes	PRO.Indef.Subst.Nom.Sg.Neut	jede-p
separat	ADJD.Pos	separat-j
dokumentiert	VPP.Full.Psp	dokumentieren-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Fem	meiste-p
Schnittstellenspezifikationen	N.Reg.Nom.Pl.Fem	Schnittstellenspezifikation-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
durch	APPR	durch-i
Unix-Kompatibilität	N.Reg.Acc.Sg.Fem	Unix-Kompatibilität-n
geregelt	VPP.Full.Psp	regeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
jeder	PRO.Indef.Attr.Nom.Sg.Masc	jede-p
Mitwirkende	N.Reg.Nom.Sg.Masc	Mitwirkend-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
kompatiblen	ADJA.Pos.Acc.Sg.Masc	kompatibel-j
Ersatz	N.Reg.Acc.Sg.Masc	Ersatz-n
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
einzelnes	ADJA.Pos.Acc.Sg.Neut	einzeln-j
Unix-Dienstprogramm	N.Reg.Acc.Sg.Neut	Unix-Dienstprogramm-n
schreiben	VINF.Full	schreiben-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
und	CONJ.Coord	und-c
dafür	PROADV.Dem	dafür-x
sorgt	VFIN.Full.3.Sg.Pres.Ind	sorgen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
anstelle	APPR	anstelle-i
des	ART.Def.Gen.Sg.Neut	die-x
Originals	N.Reg.Gen.Sg.Neut	Original-n
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Unix-System	N.Reg.Dat.Sg.Neut	Unix-System-n
funktioniert	VFIN.Full.3.Sg.Pres.Ind	funktionieren-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Dienstprogramme	N.Reg.Nom.Pl.Neut	Dienstprogramm-n
direkt	ADJD.Pos	direkt-j
zusammenarbeiten	VINF.Full	zusammenarbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Selbst	ADV	selbst-a
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Murphy	N.Name.Acc.Sg.*	Murphy-n
erlauben	VFIN.Full.1.Pl.Pres.Ind	erlauben-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.*.*.*	eine-x
paar	PRO.Indef.Attr.*.*.*	paar-p
unerwartete	ADJA.Pos.Acc.Pl.Neut	unerwartet-j
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
zu	PART.Zu	zu-x
schaffen	VINF.Full	schaffen-v
<g/>
,	SYM.Pun.Comma	,-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
das	ART.Def.Nom.Sg.Neut	die-x
Zusammensetzen	N.Reg.Nom.Sg.Neut	Zusammensetzen-n
dieser	PRO.Dem.Attr.Gen.Pl.Fem	diese-p
Komponenten	N.Reg.Gen.Pl.Fem	Komponente-n
eine	ART.Indef.Nom.Sg.Fem	eine-x
durchführbare	ADJA.Pos.Nom.Sg.Fem	durchführbar-j
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
sein	VINF.Aux	sein-v
(	SYM.Paren.Left	(-x
<g/>
der	ART.Def.Nom.Sg.Masc	die-x
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
erfordert	VFIN.Full.3.Sg.Pres.Ind	erfordern-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
genauere	ADJA.Comp.Acc.Sg.Fem	genau-j
Kommunikation	N.Reg.Acc.Sg.Fem	Kommunikation-n
und	CONJ.Coord	und-c
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
von	APPR	von-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
kleinen	ADJA.Pos.Dat.Sg.Fem	klein-j
<g/>
,	SYM.Pun.Comma	,-x
festen	ADJA.Pos.Dat.Sg.Fem	fest-j
Gruppe	N.Reg.Dat.Sg.Fem	Gruppe-n
bearbeitet	VPP.Full.Psp	bearbeiten-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
Geldspenden	N.Reg.Acc.Pl.Fem	Geldspende-n
erhalten	VFIN.Full.1.Pl.Pres.Ind	erhalten-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
diese	PRO.Dem.Subst.Nom.Pl.Masc	diese-p
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Lage	N.Reg.Acc.Sg.Fem	Lage-n
versetzen	VINF.Full	versetzen-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.*.*.*	eine-x
paar	PRO.Indef.Attr.*.*.*	paar-p
Personen	N.Reg.Acc.Pl.Fem	Person-n
in	APPR	in-i
Voll	ADJD.Pos	voll-j
<g/>
-	SYM.Pun.Hyph	--x
oder	CONJ.Coord	oder-c
Teilzeitarbeit	N.Reg.Acc.Sg.Fem	Teilzeitarbeit-n
einzustellen	VINF.Full.zu	einstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
Gehälter	N.Reg.Nom.Pl.Neut	Gehalt-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
nicht	PART.Neg	nicht-x
dem	ART.Def.Dat.Sg.Masc	die-x
Standard	N.Reg.Dat.Sg.Masc	Standard-n
von	APPR	von-i
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
entsprechen	VINF.Full	entsprechen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
suche	VFIN.Full.1.Sg.Pres.Ind	suchen-v
Personen	N.Reg.Acc.Pl.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	PRO.Rel.Subst.Acc.Pl.Fem	die-p
das	ART.Def.Nom.Sg.Neut	die-x
Bilden	N.Reg.Nom.Sg.Neut	Bilden-n
von	APPR	von-i
Gemeinschaftsgeist	N.Reg.Dat.Sg.Masc	Gemeinschaftsgeist-n
wichtiger	ADJD.Comp	wichtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
als	CONJ.Comp	als-c
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
betrachte	VFIN.Full.1.Sg.Pres.Ind	betrachten-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
als	APPR	als-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Weg	N.Reg.Acc.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
engagierten	ADJA.Pos.Acc.Pl.Masc	engagiert-j
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
<g/>
,	SYM.Pun.Comma	,-x
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Energie	N.Reg.Acc.Sg.Fem	Energie-n
der	ART.Def.Gen.Sg.Fem	die-x
Arbeit	N.Reg.Gen.Sg.Fem	Arbeit-n
an	APPR	an-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
zu	PART.Zu	zu-x
widmen	VINF.Full	widmen-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Notwendigkeit	N.Reg.Dat.Sg.Fem	Notwendigkeit-n
freimache	VFIN.Full.1.Sg.Pres.Ind	freimachen-v
<g/>
,	SYM.Pun.Comma	,-x
ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Lebensunterhalt	N.Reg.Acc.Sg.Masc	Lebensunterhalt-n
auf	APPR	auf-i
andere	ADJA.Pos.Acc.Sg.Fem	ander-j
Weise	N.Reg.Acc.Sg.Fem	Weise-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
alle	PRO.Indef.Attr.Nom.Pl.Masc	alle-p
Rechnerbenutzer	N.Reg.Nom.Pl.Masc	Rechnerbenutzer-n
profitieren	VINF.Full	profitieren-v
</s>
</align>
<align>
<s>
Sobald	CONJ.SubFin	sobald-c
GNU	N.Name.Nom.Sg.*	GNU-n
geschrieben	VPP.Full.Psp	schreiben-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
jedermann	PRO.Indef.Subst.*.*.*	jedermann-p
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
gute	ADJA.Pos.Acc.Sg.Fem	gut-j
Systemsoftware	N.Reg.Acc.Sg.Fem	Systemsoftware-n
frei	ADJD.Pos	frei-j
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
<g/>
,	SYM.Pun.Comma	,-x
so	ADV	so-a
wie	CONJ.Comp	wie-c
Luft	N.Reg.Acc.Sg.Fem	Luft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
3	CARD	3-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
mehr	ADV	mehr-a
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
nur	ADV	nur-a
jedem	PRO.Indef.Subst.Dat.Sg.Masc	jede-p
den	ART.Def.Acc.Sg.Masc	die-x
Preis	N.Reg.Acc.Sg.Masc	Preis-n
für	APPR	für-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Unix-Lizenz	N.Reg.Acc.Sg.Fem	Unix-Lizenz-n
einzusparen	VINF.Full.zu	einsparen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
viel	PRO.Indef.Attr.*.*.*	viel-p
unnötige	ADJA.Pos.Acc.Sg.Fem	unnötig-j
Doppelarbeit	N.Reg.Acc.Sg.Fem	Doppelarbeit-n
an	APPR	an-i
System-Programmieraufwand	N.Name.Acc.Sg.*	System-Programmieraufwand-n
vermieden	VPP.Full.Psp	vermeiden-v
werden	VINF.Aux	werden-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
Anstrengungen	N.Reg.Nom.Pl.Fem	Anstrengung-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
stattdessen	PROADV.Dem	stattdessen-x
eingesetzt	VPP.Full.Psp	einsetzen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
den	ART.Def.Acc.Sg.Masc	die-x
Stand	N.Reg.Acc.Sg.Masc	Stand-n
der	ART.Def.Gen.Sg.Fem	die-x
Technik	N.Reg.Gen.Sg.Fem	Technik-n
voranzubringen	VINF.Full.zu	voranbringen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
komplette	ADJA.Pos.Nom.Sg.Masc	komplett-j
Quelltext	N.Reg.Nom.Sg.Masc	Quelltext-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
für	APPR	für-i
jedermann	PRO.Indef.Subst.*.*.*	jedermann-p
verfügbar	ADJD.Pos	verfügbar-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	APPR	als-i
Ergebnis	N.Reg.Nom.Sg.Neut	Ergebnis-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
jeder	PRO.Indef.Attr.Nom.Sg.Masc	jede-p
Benutzer	N.Reg.Nom.Sg.Masc	Benutzer-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
im	APPRART.Dat.Sg.Neut	in-i
System	N.Reg.Dat.Sg.Neut	System-n
machen	VINF.Full	machen-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Subst.Acc.Pl.*	diese-p
selbst	ADV	selbst-a
vorzunehmen	VINF.Full.zu	vornehmen-v
<g/>
,	SYM.Pun.Comma	,-x
oder	CONJ.Coord	oder-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
oder	CONJ.Coord	oder-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
Firma	N.Reg.Acc.Sg.Fem	Firma-n
damit	PROADV.Dem	damit-x
beauftragt	VPP.Full.Psp	beauftragen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
nicht	PART.Neg	nicht-x
länger	ADJD.Comp	lang-j
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Gnade	N.Reg.Dat.Sg.Fem	Gnade-n
einzelner	ADJA.Pos.Gen.Pl.Masc	einzeln-j
Programmierer	N.Reg.Gen.Pl.Masc	Programmierer-n
oder	CONJ.Coord	oder-c
Unternehmen	N.Reg.Gen.Pl.Neut	Unternehmen-n
abhängig	ADJD.Pos	abhängig-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Rel.Subst.Nom.Pl.Neut	welche-p
den	ART.Def.Acc.Sg.Masc	die-x
Quelltext	N.Reg.Acc.Sg.Masc	Quelltext-n
besitzen	VFIN.Full.3.Pl.Pres.Ind	besitzen-v
und	CONJ.Coord	und-c
daher	PROADV.Dem	daher-x
als	APPR	als-i
einzige	PRO.Indef.Subst.Nom.Sg.Fem	einzige-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
vornehmen	VINF.Full	vornehmen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Schulen	N.Reg.Nom.Pl.Fem	Schule-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
viel	ADV	viel-a
besseres	ADJA.Comp.Acc.Sg.Neut	gut-j
pädagogisches	ADJA.Pos.Acc.Sg.Neut	pädagogisch-j
Umfeld	N.Reg.Acc.Sg.Neut	Umfeld-n
bieten	VINF.Full	bieten-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Pl.Masc	die-x
Schüler	N.Reg.Acc.Pl.Masc	Schüler-n
dazu	PROADV.Dem	dazu-x
anhalten	VFIN.Full.3.Pl.Pres.Ind	anhalten-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Code	N.Reg.Acc.Sg.Masc	Code-n
des	ART.Def.Gen.Sg.Neut	die-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
untersuchen	VINF.Full	untersuchen-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
verbessern	VINF.Full	verbessern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Harvards	N.Name.Gen.Sg.Neut	Harvard-n
Rechnerraum	N.Reg.Nom.Sg.Neut	Rechnerraum-n
verlangte	VFIN.Full.3.Sg.Past.Ind	verlangen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Richtlinie	N.Reg.Acc.Sg.Fem	Richtlinie-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Programm	N.Reg.Nom.Sg.Neut	Programm-n
im	APPRART.Dat.Sg.Neut	in-i
System	N.Reg.Dat.Sg.Neut	System-n
installiert	VPP.Full.Psp	installieren-v
werden	VINF.Aux	werden-v
durfte	VFIN.Mod.3.Sg.Past.Ind	dürfen-v
<g/>
,	SYM.Pun.Comma	,-x
dessen	PRO.Rel.Attr.Gen.Sg.Neut	die-p
Quelltext	N.Reg.Nom.Sg.Masc	Quelltext-n
nicht	PART.Neg	nicht-x
öffentlich	ADJD.Pos	öffentlich-j
zugänglich	ADJD.Pos	zugänglich-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
hielten	VFIN.Full.3.Pl.Past.Ind	halten-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
aufrecht	PART.Verb	aufrecht-x
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
bestimmte	ADJA.Pos.Nom.Pl.Neut	bestimmt-j
Programme	N.Reg.Nom.Pl.Neut	Programm-n
tatsächlich	ADJD.Pos	tatsächlich-j
nicht	PART.Neg	nicht-x
installiert	VPP.Full.Psp	installieren-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
war	VFIN.Aux.1.Sg.Past.Ind	sein-v
sehr	ADV	sehr-a
begeistert	ADJD.Pos	begeistert-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
schließlich	ADV	schließlich-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
auch	ADV	auch-a
der	ART.Def.Nom.Sg.Masc	die-x
Verwaltungsaufwand	N.Reg.Nom.Sg.Masc	Verwaltungsaufwand-n
vermieden	VPP.Full.Psp	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
zu	PART.Zu	zu-x
überlegen	VINF.Full	überlegen-v
<g/>
,	SYM.Pun.Comma	,-x
wem	PRO.Inter.Subst.Dat.Sg.Masc	wem-p
die	ART.Def.Acc.Sg.Fem	die-x
Systemsoftware	N.Reg.Acc.Sg.Fem	Systemsoftware-n
gehört	VFIN.Full.3.Sg.Pres.Ind	gehören-v
und	CONJ.Coord	und-c
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
damit	PROADV.Dem	damit-x
tun	VINF.Full	tun-v
darf	VFIN.Mod.3.Sg.Pres.Ind	dürfen-v
und	CONJ.Coord	und-c
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Durch	APPR	durch-i
Vorkehrungen	N.Reg.Acc.Pl.Fem	Vorkehrung-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
einschließlich	APPR	einschließlich-i
der	ART.Def.Gen.Sg.Fem	die-x
Lizenzierung	N.Reg.Gen.Sg.Fem	Lizenzierung-n
von	APPR	von-i
Kopien	N.Reg.Dat.Pl.Fem	Kopie-n
<g/>
,	SYM.Pun.Comma	,-x
zahlen	VINF.Full	zahlen-v
zu	PART.Zu	zu-x
lassen	VINF.Full	lassen-v
<g/>
,	SYM.Pun.Comma	,-x
entstehen	VFIN.Full.3.Pl.Pres.Ind	entstehen-v
immer	ADV	immer-a
gewaltige	ADJA.Pos.Acc.Pl.Fem	gewaltig-j
Kosten	N.Reg.Acc.Pl.Fem	Kosten-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Gesellschaft	N.Reg.Acc.Sg.Fem	Gesellschaft-n
durch	APPR	durch-i
den	ART.Def.Acc.Sg.Masc	die-x
schwerfälligen	ADJA.Pos.Acc.Sg.Masc	schwerfällig-j
Mechanismus	N.Reg.Acc.Sg.Masc	Mechanismus-n
notwendig	ADJD.Pos	notwendig-j
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
herauszufinden	VINF.Full.zu	herausfinden-v
für	APPR	für-i
wie	CONJ.Comp	wie-c
viel	ADV	viel-a
(	SYM.Paren.Left	(-x
<g/>
d.	PRO.Dem.Subst.Nom.Sg.Neut	d.-p
h.	VFIN.Full.3.Sg.Pres.Ind	h.-v
für	APPR	für-i
welche	PRO.Inter.Attr.Acc.Pl.Neut	welche-p
Programme	N.Reg.Acc.Pl.Neut	Programm-n
<g/>
)	SYM.Paren.Right	)-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Person	N.Reg.Acc.Sg.Fem	Person-n
zahlen	VINF.Full	zahlen-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
nur	ADV	nur-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Polizeistaat	N.Reg.Nom.Sg.Masc	Polizeistaat-n
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
jeden	PRO.Indef.Subst.Acc.Sg.Masc	jede-p
dazu	PROADV.Dem	dazu-x
zwingen	VINF.Full	zwingen-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
befolgen	VINF.Full	befolgen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Stellen	VFIN.Full.3.Pl.Pres.Ind	stellen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sich	PRO.Refl.Subst.3.Dat.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Raumstation	N.Reg.Acc.Sg.Fem	Raumstation-n
vor	PART.Verb	vor-x
<g/>
,	SYM.Pun.Comma	,-x
wo	PROADV.Inter	wo-x
die	ART.Def.Nom.Sg.Fem	die-x
Luft	N.Reg.Nom.Sg.Fem	Luft-n
mit	APPR	mit-i
großem	ADJA.Pos.Dat.Sg.Masc	groß-j
Aufwand	N.Reg.Dat.Sg.Masc	Aufwand-n
hergestellt	VPP.Full.Psp	herstellen-v
werden	VINF.Aux	werden-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
:	SYM.Pun.Colon	:-x
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mag	VFIN.Mod.3.Sg.Pres.Ind	mögen-v
fair	ADJD.Pos	fair-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
Atemluft	N.Reg.Acc.Sg.Fem	Atemluft-n
pro	APPR	pro-i
verbrauchten	ADJA.Pos.Acc.Pl.Masc	verbraucht-j
Liter	N.Reg.Acc.Pl.Masc	Liter-n
zu	PART.Zu	zu-x
berechnen	VINF.Full	berechnen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
die	ART.Def.Acc.Sg.Fem	die-x
gebührenpflichtige	ADJA.Pos.Acc.Sg.Fem	gebührenpflichtig-j
Gasmaske	N.Reg.Acc.Sg.Fem	Gasmaske-n
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
ganzen	ADJA.Pos.Acc.Sg.Masc	ganz-j
Tag	N.Reg.Acc.Sg.Masc	Tag-n
und	CONJ.Coord	und-c
die	ART.Def.Acc.Sg.Fem	die-x
ganze	ADJA.Pos.Acc.Sg.Fem	ganz-j
Nacht	N.Reg.Acc.Sg.Fem	Nacht-n
tragend	ADJD.Pos	tragend-j
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
unerträglich	ADJD.Pos	unerträglich-j
<g/>
,	SYM.Pun.Comma	,-x
selbst	ADV	selbst-a
wenn	CONJ.SubFin	wenn-c
für	APPR	für-i
jeden	PRO.Indef.Subst.Acc.Sg.Masc	jede-p
die	ART.Def.Nom.Sg.Fem	die-x
Berechnung	N.Reg.Nom.Sg.Fem	Berechnung-n
der	ART.Def.Gen.Sg.Fem	die-x
Luft	N.Reg.Gen.Sg.Fem	Luft-n
erschwinglich	ADJD.Pos	erschwinglich-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
allgegenwärtige	ADJA.Pos.Nom.Pl.Fem	allgegenwärtig-j
Fernsehkameras	N.Reg.Nom.Pl.Fem	Fernsehkamera-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
überwachen	VFIN.Full.3.Pl.Pres.Ind	überwachen-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
jemand	PRO.Indef.Subst.Nom.Sg.*	jemand-p
die	ART.Def.Acc.Sg.Fem	die-x
Maske	N.Reg.Acc.Sg.Fem	Maske-n
abnimmt	VFIN.Full.3.Sg.Pres.Ind	abnehmen-v
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
ungeheuerlich	ADJD.Pos	ungeheuerlich-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
besser	ADJD.Comp	gut-j
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Luftanlage	N.Reg.Acc.Sg.Fem	Luftanlage-n
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Pro-Kopf-Steuer	N.Reg.Dat.Sg.Fem	Pro-Kopf-Steuer-n
zu	PART.Zu	zu-x
finanzieren	VINF.Full	finanzieren-v
und	CONJ.Coord	und-c
die	ART.Def.Acc.Pl.Fem	die-x
Masken	N.Reg.Acc.Pl.Fem	Maske-n
wegzuwerfen	VINF.Full.zu	wegwerfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Kopieren	N.Reg.Nom.Sg.Neut	Kopieren-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
oder	CONJ.Coord	oder-c
Teile	N.Reg.Acc.Pl.Masc	Teil-n
davon	PROADV.Dem	davon-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
für	APPR	für-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
ebenso	ADV	ebenso-a
selbstverständlich	ADJD.Pos	selbstverständlich-j
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
Atmen	N.Reg.Nom.Sg.Neut	Atmen-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
genauso	ADV	genauso-a
nutzbringend	ADJD.Pos	nutzbringend-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
genauso	ADV	genauso-a
frei	ADJD.Pos	frei-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Attr.Nom.Pl.Fem	einige-p
leicht	ADJD.Pos	leicht-j
zu	ADV	zu-a
entkräftende	ADJA.Pos.Acc.Pl.Masc	entkräftend-j
Einwände	N.Reg.Acc.Pl.Masc	Einwand-n
gegen	APPR	gegen-i
die	ART.Def.Acc.Pl.Neut	die-x
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
benutzen	VINF.Full	benutzen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
umsonst	ADV	umsonst-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
nicht	PART.Neg	nicht-x
auf	APPR	auf-i
Unterstützung	N.Reg.Acc.Sg.Fem	Unterstützung-n
verlassen	VINF.Full	verlassen-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
etwas	ADV	etwas-a
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
berechnen	VINF.Full	berechnen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Unterstützung	N.Reg.Acc.Sg.Fem	Unterstützung-n
anbieten	VINF.Full	anbieten-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
für	APPR	für-i
GNU	N.Name.Acc.Sg.Masc	GNU-n
mit	APPR	mit-i
Dienstleistung	N.Reg.Dat.Sg.Fem	Dienstleistung-n
eher	ADV	eher-a
bezahlen	VINF.Full	bezahlen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
als	CONJ.Comp	als-c
GNU	ADJD.Pos	GNU-j
ohne	APPR	ohne-i
Dienstleistung	N.Reg.Acc.Sg.Fem	Dienstleistung-n
umsonst	ADV	umsonst-a
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
<g/>
,	SYM.Pun.Comma	,-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Dienstleistung	N.Reg.Nom.Sg.Fem	Dienstleistung-n
speziell	ADJD.Pos	speziell-j
für	APPR	für-i
Personen	N.Reg.Acc.Pl.Fem	Person-n
anbietet	VFIN.Full.3.Sg.Pres.Ind	anbieten-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
GNU	N.Name.Acc.Sg.Fem	GNU-n
umsonst	ADV	umsonst-a
erhalten	VPP.Full.Psp	erhalten-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
profitabel	ADJD.Pos	profitabel-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
4	CARD	4-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
zwischen	APPR	zwischen-i
Unterstützung	N.Reg.Dat.Sg.Fem	Unterstützung-n
in	APPR	in-i
Form	N.Reg.Dat.Sg.Fem	Form-n
von	APPR	von-i
echter	ADJA.Pos.Dat.Sg.Fem	echt-j
Programmierarbeit	N.Reg.Dat.Sg.Fem	Programmierarbeit-n
und	CONJ.Coord	und-c
Händchenhalten	N.Reg.Dat.Sg.Neut	Händchenhalten-n
unterscheiden	VINF.Full	unterscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ersteres	PRO.Indef.Subst.Nom.Sg.Neut	erstere-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
von	APPR	von-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Softwarehändler	N.Reg.Dat.Sg.Masc	Softwarehändler-n
erwarten	VINF.Full	erwarten-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Ihr	PRO.Poss.Attr.Nom.Sg.Neut	ihre-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
nicht	PART.Neg	nicht-x
von	APPR	von-i
genügend	PRO.Indef.Attr.*.*.*	genügend-p
Personen	N.Reg.Dat.Pl.Fem	Person-n
geteilt	VPP.Full.Psp	teilen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
der	ART.Def.Nom.Sg.Masc	die-x
Händler	N.Reg.Nom.Sg.Masc	Händler-n
Ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
hätten	VFIN.Aux.3.Pl.Past.Subj	haben-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
verlaufen	VPP.Full.Psp	verlaufen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Ihr	PRO.Poss.Attr.Nom.Sg.Neut	ihre-p
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
darauf	PROADV.Dem	darauf-x
angewiesen	ADJD.Pos	angewiesen-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auf	APPR	auf-i
Unterstützung	N.Reg.Acc.Sg.Fem	Unterstützung-n
zu	PART.Zu	zu-x
verlassen	VINF.Full	verlassen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
einzige	ADJA.Pos.Nom.Sg.Masc	einzig-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
alle	PRO.Indef.Attr.Acc.Pl.*	alle-p
notwendigen	ADJA.Pos.Acc.Pl.*	notwendig-j
Quelltexte	N.Reg.Acc.Pl.Masc	Quelltext-n
und	CONJ.Coord	und-c
Werkzeuge	N.Reg.Acc.Pl.Neut	Werkzeug-n
vorliegen	VINF.Full	vorliegen-v
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
jede	PRO.Indef.Attr.Acc.Sg.Fem	jede-p
verfügbare	ADJA.Pos.Acc.Sg.Fem	verfügbar-j
Person	N.Reg.Acc.Sg.Fem	Person-n
beauftragen	VINF.Full	beauftragen-v
<g/>
,	SYM.Pun.Comma	,-x
Ihr	PRO.Poss.Attr.Acc.Sg.Neut	ihre-p
Problem	N.Reg.Acc.Sg.Neut	Problem-n
zu	PART.Zu	zu-x
lösen	VINF.Full	lösen-v
<g/>
;	SYM.Pun.Sent	;-x
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
Einzelnen	N.Reg.Dat.Sg.Masc	Einzelnen-n
ausgeliefert	VPP.Full.Psp	ausliefern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
Unix	N.Name.Dat.Sg.*	Unix-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
infolge	APPR	infolge-i
des	ART.Def.Gen.Sg.Masc	die-x
hohen	ADJA.Pos.Gen.Sg.Masc	hoch-j
Preises	N.Reg.Gen.Sg.Masc	Preis-n
der	ART.Def.Gen.Pl.Masc	die-x
Quelltexte	N.Reg.Gen.Pl.Masc	Quelltext-n
für	APPR	für-i
die	ART.Def.Acc.Pl.Neut	die-x
meisten	PRO.Indef.Attr.Acc.Pl.Neut	meiste-p
Unternehmen	N.Reg.Acc.Pl.Neut	Unternehmen-n
unerschwinglich	ADJD.Pos	unerschwinglich-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
GNU	N.Name.Dat.Sg.*	GNU-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
leicht	ADJD.Pos	leicht-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
zwar	ADV	zwar-a
immer	ADV	immer-a
noch	ADV	noch-a
möglich	ADJD.Pos	möglich-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
kompetente	ADJA.Pos.Nom.Sg.Fem	kompetent-j
Person	N.Reg.Nom.Sg.Fem	Person-n
zur	APPRART.Dat.Sg.Fem	zu-i
Verfügung	N.Reg.Dat.Sg.Fem	Verfügung-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
dies	PRO.Dem.Attr.Nom.Sg.Neut	dies-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
liegt	VFIN.Full.3.Sg.Pres.Ind	liegen-v
dann	ADV	dann-a
nicht	PART.Neg	nicht-x
an	APPR	an-i
den	ART.Def.Dat.Pl.Fem	die-x
Vertriebsbedingungen	N.Reg.Dat.Pl.Fem	Vertriebsbedingung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
beseitigt	VFIN.Full.3.Sg.Pres.Ind	beseitigen-v
nicht	PART.Neg	nicht-x
alle	PRO.Indef.Attr.Acc.Pl.Neut	alle-p
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
der	ART.Def.Gen.Sg.Fem	die-x
Welt	N.Reg.Gen.Sg.Fem	Welt-n
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
nur	ADV	nur-a
bestimmte	VFIN.Full.3.Sg.Past.Ind	bestimmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gleichzeitig	ADJD.Pos	gleichzeitig-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Anwender	N.Reg.Nom.Pl.Masc	Anwender-n
ohne	APPR	ohne-i
Rechnerwissen	N.Reg.Acc.Pl.Fem	Rechnerwissen-n
auf	APPR	auf-i
Hilfe	N.Reg.Acc.Sg.Fem	Hilfe-n
angewiesen	VPP.Full.Psp	anweisen-v
<g/>
:	SYM.Pun.Colon	:-x
Dinge	N.Reg.Acc.Pl.Neut	Ding-n
erledigen	VINF.Full	erledigen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
leicht	ADJD.Pos	leicht-j
selbst	ADV	selbst-a
tun	VINF.Full	tun-v
könnten	VFIN.Mod.3.Pl.Past.Subj	können-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
wissen	VINF.Full	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Solche	PRO.Indef.Attr.Nom.Pl.Fem	solche-p
Dienstleistungen	N.Reg.Nom.Pl.Fem	Dienstleistung-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
von	APPR	von-i
Unternehmen	N.Reg.Dat.Pl.Neut	Unternehmen-n
angeboten	VPP.Full.Psp	anbieten-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
gerade	ADV	gerade-a
solche	PRO.Indef.Attr.Acc.Pl.Fem	solche-p
Benutzerhilfen	N.Reg.Acc.Pl.Fem	Benutzerhilfe-n
und	CONJ.Coord	und-c
Reparaturdienste	N.Reg.Acc.Pl.Masc	Reparaturdienst-n
anbieten	VINF.Full	anbieten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
stimmt	VFIN.Full.3.Sg.Pres.Ind	stimmen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
vorziehen	VFIN.Full.3.Pl.Pres.Ind	vorziehen-v
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Produkt	N.Reg.Acc.Sg.Neut	Produkt-n
mit	APPR	mit-i
Dienstleistung	N.Reg.Dat.Sg.Fem	Dienstleistung-n
zu	PART.Zu	zu-x
bezahlen	VINF.Full	bezahlen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
auch	ADV	auch-a
bereit	ADJD.Pos	bereit-j
sein	VINF.Aux	sein-v
die	ART.Def.Acc.Sg.Fem	die-x
Dienstleistung	N.Reg.Acc.Sg.Fem	Dienstleistung-n
zu	PART.Zu	zu-x
bezahlen	VINF.Full	bezahlen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Produkt	N.Reg.Acc.Sg.Neut	Produkt-n
umsonst	ADV	umsonst-a
erhalten	VPP.Full.Psp	erhalten-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
Dienstleistungsunternehmen	N.Reg.Nom.Pl.Neut	Dienstleistungsunternehmen-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
in	APPR	in-i
Qualität	N.Reg.Acc.Sg.Fem	Qualität-n
und	CONJ.Coord	und-c
Preis	N.Reg.Acc.Sg.Masc	Preis-n
miteinander	ADV	miteinander-a
konkurrieren	VFIN.Full.3.Pl.Pres.Ind	konkurrieren-v
<g/>
;	SYM.Pun.Sent	;-x
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
nicht	PART.Neg	nicht-x
an	APPR	an-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
bestimmtes	ADJA.Pos.Acc.Sg.Neut	bestimmt-j
gebunden	VPP.Full.Psp	binden-v
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Zwischenzeit	N.Reg.Dat.Sg.Fem	Zwischenzeit-n
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
diejenigen	PRO.Dem.Subst.Nom.Pl.*	diejenige-p
von	APPR	von-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Dienstleistung	N.Reg.Acc.Sg.Fem	Dienstleistung-n
nicht	PART.Neg	nicht-x
benötigen	VFIN.Full.3.Pl.Pres.Ind	benötigen-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
die	ART.Def.Acc.Sg.Fem	die-x
Dienstleistung	N.Reg.Acc.Sg.Fem	Dienstleistung-n
bezahlen	VINF.Full	bezahlen-v
zu	PART.Zu	zu-x
müssen	VINF.Mod	müssen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Ohne	APPR	ohne-i
Werbung	N.Reg.Acc.Sg.Fem	Werbung-n
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
viele	PRO.Indef.Attr.Acc.Pl.Masc	viele-p
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
erreichen	VINF.Full	erreichen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
etwas	ADV	etwas-a
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
berechnen	VINF.Full	berechnen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
bringt	VFIN.Full.3.Sg.Pres.Ind	bringen-v
nichts	PRO.Indef.Attr.*.*.Neut	nichts-p
Werbung	N.Reg.Acc.Sg.Fem	Werbung-n
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
umsonst	ADV	umsonst-a
bekommen	VINF.Full	bekommen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
Formen	N.Reg.Acc.Pl.Fem	Form-n
kostenloser	ADJA.Pos.Gen.Sg.Fem	kostenlos-j
oder	CONJ.Coord	oder-c
kostengünstiger	ADJA.Pos.Gen.Sg.Fem	kostengünstig-j
Werbung	N.Reg.Gen.Sg.Fem	Werbung-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
dazu	PROADV.Dem	dazu-x
dienen	VINF.Full	dienen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Rechnerbenutzer	N.Reg.Nom.Pl.Masc	Rechnerbenutzer-n
über	APPR	über-i
so	ADV	so-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
wie	CONJ.Comp	wie-c
GNU	N.Name.Nom.Sg.*	GNU-n
zu	PART.Zu	zu-x
informieren	VINF.Full	informieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mag	VFIN.Mod.3.Sg.Pres.Ind	mögen-v
stimmen	VINF.Full	stimmen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Benutzer	N.Reg.Acc.Pl.Masc	Benutzer-n
von	APPR	von-i
Kleinrechnern	N.Reg.Dat.Pl.Masc	Kleinrechner-n
durch	APPR	durch-i
Werbung	N.Reg.Acc.Sg.Fem	Werbung-n
erreichen	VINF.Full	erreichen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
wirklich	ADJD.Pos	wirklich-j
so	ADV	so-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Dienstleistung	N.Reg.Acc.Sg.Fem	Dienstleistung-n
wirbt	VFIN.Full.3.Sg.Pres.Ind	werben-v
<g/>
,	SYM.Pun.Comma	,-x
GNU	ADJD.Pos	GNU-j
gegen	APPR	gegen-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gebühr	N.Reg.Acc.Sg.Fem	Gebühr-n
zu	PART.Zu	zu-x
kopieren	VINF.Full	kopieren-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
versenden	VINF.Full	versenden-v
<g/>
,	SYM.Pun.Comma	,-x
erfolgreich	ADJD.Pos	erfolgreich-j
genug	ADV	genug-a
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
um	APPR	um-i
damit	CONJ.SubFin	damit-c
seine	PRO.Poss.Attr.Nom.Sg.Fem	seine-p
Werbung	N.Reg.Nom.Sg.Fem	Werbung-n
und	CONJ.Coord	und-c
mehr	PRO.Indef.Subst.*.*.*	mehr-p
zu	PART.Zu	zu-x
bezahlen	VINF.Full	bezahlen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
bezahlen	VFIN.Full.3.Pl.Pres.Ind	bezahlen-v
nur	ADV	nur-a
die	ART.Def.Nom.Pl.Masc	die-x
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Werbung	N.Reg.Dat.Sg.Fem	Werbung-n
profitieren	VFIN.Full.3.Pl.Pres.Ind	profitieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
andererseits	ADV	andererseits-a
viele	PRO.Indef.Attr.Nom.Pl.Fem	viele-p
Personen	N.Reg.Nom.Pl.Fem	Person-n
GNU	ADJD.Pos	GNU-j
von	APPR	von-i
ihren	PRO.Poss.Attr.Dat.Pl.Masc	ihre-p
Freunden	N.Reg.Dat.Pl.Masc	Freund-n
erhalten	VPP.Full.Psp	erhalten-v
und	CONJ.Coord	und-c
solche	PRO.Indef.Attr.Nom.Pl.Neut	solche-p
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Erfolg	N.Reg.Acc.Sg.Masc	Erfolg-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
zeigt	VFIN.Full.3.Sg.Pres.Ind	zeigen-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Werbung	N.Reg.Nom.Sg.Fem	Werbung-n
in	APPR	in-i
Wirklichkeit	N.Reg.Dat.Sg.Fem	Wirklichkeit-n
gar	ADV	gar-a
nicht	PART.Neg	nicht-x
nötig	ADJD.Pos	nötig-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
GNU	ADJD.Pos	GNU-j
zu	PART.Zu	zu-x
verbreiten	VINF.Full	verbreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
die	ART.Def.Nom.Pl.Masc	die-x
Befürworter	N.Reg.Nom.Pl.Masc	Befürworter-n
der	ART.Def.Gen.Sg.Fem	die-x
freien	ADJA.Pos.Gen.Sg.Fem	frei-j
Marktwirtschaft	N.Reg.Gen.Sg.Fem	Marktwirtschaft-n
nicht	PART.Neg	nicht-x
den	ART.Def.Acc.Sg.Masc	die-x
freien	ADJA.Pos.Acc.Sg.Masc	frei-j
Markt	N.Reg.Acc.Sg.Masc	Markt-n
darüber	PROADV.Dem	darüber-x
entscheiden	VINF.Full	entscheiden-v
lassen	VINF.Full	lassen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
5	CARD	5-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Mein	PRO.Poss.Attr.Nom.Sg.Neut	meine-p
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
benötigt	VFIN.Full.3.Sg.Pres.Ind	benötigen-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
proprietäres	ADJA.Pos.Acc.Sg.Neut	proprietär-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
Wettbewerbsvorteil	N.Reg.Acc.Sg.Masc	Wettbewerbsvorteil-n
zu	PART.Zu	zu-x
bekommen	VINF.Full	bekommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Betriebssystemsoftware	N.Reg.Acc.Sg.Fem	Betriebssystemsoftware-n
aus	APPR	aus-i
dem	ART.Def.Dat.Sg.Masc	die-x
Wettbewerb	N.Reg.Dat.Sg.Masc	Wettbewerb-n
entfernen	VINF.Full	entfernen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Vorteil	N.Reg.Acc.Sg.Masc	Vorteil-n
auf	APPR	auf-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Gebiet	N.Reg.Dat.Sg.Neut	Gebiet-n
erzielen	VINF.Full	erzielen-v
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
umgekehrt	ADJD.Pos	umgekehrt-j
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
auch	ADV	auch-a
Ihre	PRO.Poss.Attr.Nom.Sg.Fem	ihre-p
Konkurrenz	N.Reg.Nom.Sg.Fem	Konkurrenz-n
Sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
übervorteilen	VINF.Full	übervorteilen-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
auf	APPR	auf-i
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Gebieten	N.Reg.Dat.Pl.Neut	Gebiet-n
in	APPR	in-i
Wettbewerb	N.Reg.Acc.Sg.Masc	Wettbewerb-n
treten	VFIN.Full.3.Pl.Pres.Ind	treten-v
<g/>
,	SYM.Pun.Comma	,-x
während	CONJ.SubFin	während-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
auf	APPR	auf-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Gebiet	N.Reg.Dat.Sg.Neut	Gebiet-n
voneinander	ADV	voneinander-a
profitieren	VINF.Full	profitieren-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Ihr	PRO.Poss.Attr.Nom.Sg.Neut	ihre-p
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
vom	APPRART.Dat.Sg.Masc	von-i
Verkauf	N.Reg.Dat.Sg.Masc	Verkauf-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
lebt	VFIN.Full.3.Sg.Pres.Ind	leben-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
GNU	ADJD.Pos	GNU-j
nicht	PART.Neg	nicht-x
mögen	VINF.Mod	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Ihr	PRO.Poss.Attr.Nom.Sg.Neut	ihre-p
Problem	N.Reg.Nom.Sg.Neut	Problem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Ihr	PRO.Poss.Attr.Nom.Sg.Neut	ihre-p
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
anders	ADV	anders-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
GNU	N.Name.Nom.Sg.*	GNU-n
Sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
davor	PROADV.Dem	davor-x
bewahren	VINF.Full	bewahren-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
das	ART.Def.Acc.Sg.Neut	die-x
teure	ADJA.Pos.Acc.Sg.Neut	teuer-j
Geschäft	N.Reg.Acc.Sg.Neut	Geschäft-n
gedrängt	VPP.Full.Psp	drängen-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
Betriebssysteme	N.Reg.Acc.Pl.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
verkaufen	VINF.Full	verkaufen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
würde	VFIN.Aux.1.Sg.Past.Subj	werden-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
gerne	ADV	gerne-a
sehen	VINF.Full	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Hersteller	N.Reg.Nom.Pl.Masc	Hersteller-n
und	CONJ.Coord	und-c
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
die	ART.Def.Acc.Sg.Fem	die-x
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
durch	APPR	durch-i
Spenden	N.Reg.Acc.Pl.Fem	Spende-n
unterstützen	VINF.Full	unterstützen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Pl.*	die-x
Kosten	N.Reg.Acc.Pl.*	Kosten-n
für	APPR	für-i
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
einzelnen	ADJA.Pos.Acc.Sg.Masc	einzeln-j
zu	PART.Zu	zu-x
senken	VINF.Full	senken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
(	SYM.Paren.Left	(-x
<g/>
6	CARD	6-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Verdienen	VFIN.Full.3.Pl.Pres.Ind	verdienen-v
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
nicht	PART.Neg	nicht-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Belohnung	N.Reg.Acc.Sg.Fem	Belohnung-n
für	APPR	für-i
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Kreativität	N.Reg.Acc.Sg.Fem	Kreativität-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
irgendetwas	PRO.Indef.Subst.*.*.Neut	irgendetwas-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Belohnung	N.Reg.Acc.Sg.Fem	Belohnung-n
verdient	VFIN.Full.3.Sg.Pres.Ind	verdienen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sozialer	ADJA.Pos.Nom.Sg.Masc	sozial-j
Beitrag	N.Reg.Nom.Sg.Masc	Beitrag-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Kreativität	N.Reg.Acc.Sg.Fem	Kreativität-n
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
sozialer	ADJA.Pos.Nom.Sg.Masc	sozial-j
Beitrag	N.Reg.Nom.Sg.Masc	Beitrag-n
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nur	ADV	nur-a
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Sg.Fem	die-x
Gesellschaft	N.Reg.Nom.Sg.Fem	Gesellschaft-n
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Neut	die-x
Resultate	N.Reg.Acc.Pl.Neut	Resultat-n
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Programmierer	N.Reg.Nom.Sg.Masc	Programmierer-n
eine	ART.Indef.Nom.Sg.Fem	eine-x
Belohnung	N.Reg.Nom.Sg.Fem	Belohnung-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
Schreiben	N.Reg.Acc.Sg.Neut	Schreiben-n
innovativer	ADJA.Pos.Gen.Pl.Neut	innovativ-j
Programme	N.Reg.Gen.Pl.Neut	Programm-n
verdienen	VFIN.Full.3.Pl.Pres.Ind	verdienen-v
<g/>
,	SYM.Pun.Comma	,-x
müssten	VFIN.Mod.3.Pl.Past.Subj	müssen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
aus	APPR	aus-i
demselben	PRO.Dem.Attr.Dat.Sg.Masc	dieselbe-p
Grunde	N.Reg.Dat.Sg.Masc	Grund-n
bestraft	VPP.Full.Psp	bestrafen-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
dieser	PRO.Dem.Attr.Gen.Pl.Neut	diese-p
Programme	N.Reg.Gen.Pl.Neut	Programm-n
einschränken	VINF.Full	einschränken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
Programmierer	N.Reg.Nom.Sg.Masc	Programmierer-n
nicht	PART.Neg	nicht-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Belohnung	N.Reg.Acc.Sg.Fem	Belohnung-n
für	APPR	für-i
seine	PRO.Poss.Attr.Acc.Sg.Fem	seine-p
Kreativität	N.Reg.Acc.Sg.Fem	Kreativität-n
verlangen	VINF.Full	verlangen-v
dürfen	VINF.Mod	dürfen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nichts	PRO.Indef.Attr.*.*.Neut	nichts-p
Schlechtes	N.Reg.Acc.Sg.Neut	Schlechte-n
daran	PROADV.Dem	daran-x
für	APPR	für-i
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
bezahlt	VPP.Full.Psp	bezahlen-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
oder	CONJ.Coord	oder-c
sein	PRO.Poss.Attr.Acc.Sg.Neut	seine-p
Einkommen	N.Reg.Acc.Sg.Neut	Einkommen-n
maximieren	VINF.Full	maximieren-v
zu	PART.Zu	zu-x
wollen	VINF.Mod	wollen-v
<g/>
,	SYM.Pun.Comma	,-x
solange	CONJ.SubFin	solange-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
destruktiv	ADJD.Pos	destruktiv-j
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
zur	APPRART.Dat.Sg.Fem	zu-i
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
auf	APPR	auf-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Gebiet	N.Reg.Dat.Sg.Neut	Gebiet-n
gebräuchlichen	ADJA.Pos.Nom.Pl.Neut	gebräuchlich-j
Mittel	N.Reg.Nom.Pl.Neut	Mittel-n
basieren	VFIN.Full.3.Pl.Pres.Ind	basieren-v
auf	APPR	auf-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Form	N.Reg.Dat.Sg.Fem	Form-n
von	APPR	von-i
Zerstörung	N.Reg.Dat.Sg.Fem	Zerstörung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Geld	N.Reg.Acc.Sg.Neut	Geld-n
von	APPR	von-i
Benutzern	N.Reg.Dat.Pl.Masc	Benutzer-n
zu	PART.Zu	zu-x
kassieren	VINF.Full	kassieren-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
den	ART.Def.Acc.Sg.Masc	die-x
Gebrauch	N.Reg.Acc.Sg.Masc	Gebrauch-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
einschränkt	VFIN.Full.3.Sg.Pres.Ind	einschränken-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
destruktiv	ADJD.Pos	destruktiv-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
die	ART.Def.Nom.Pl.Fem	die-x
Beschränkungen	N.Reg.Nom.Pl.Fem	Beschränkung-n
die	ART.Def.Acc.Sg.Fem	die-x
Häufigkeit	N.Reg.Acc.Sg.Fem	Häufigkeit-n
und	CONJ.Coord	und-c
die	ART.Def.Acc.Pl.Masc	die-x
Wege	N.Reg.Acc.Pl.Masc	Weg-n
reduziert	VPP.Full.Psp	reduzieren-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
denen	PRO.Rel.Subst.Dat.Pl.Masc	die-p
das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
genutzt	VPP.Full.Psp	nutzen-v
werden	VINF.Aux	werden-v
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
reduziert	VFIN.Full.3.Sg.Pres.Ind	reduzieren-v
den	ART.Def.Acc.Sg.Masc	die-x
Reichtum	N.Reg.Acc.Sg.Masc	Reichtum-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
die	ART.Def.Nom.Sg.Fem	die-x
Menschheit	N.Reg.Nom.Sg.Fem	Menschheit-n
aus	APPR	aus-i
dem	ART.Def.Dat.Sg.Neut	die-x
Programm	N.Reg.Dat.Sg.Neut	Programm-n
leitet	VFIN.Full.3.Sg.Pres.Ind	leiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Beschränkung	N.Reg.Nom.Sg.Fem	Beschränkung-n
eine	ART.Indef.Nom.Sg.Fem	eine-x
bewusste	ADJA.Pos.Nom.Sg.Fem	bewusst-j
Entscheidung	N.Reg.Nom.Sg.Fem	Entscheidung-n
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
die	ART.Def.Nom.Pl.Fem	die-x
schädlichen	ADJA.Pos.Nom.Pl.Fem	schädlich-j
Auswirkungen	N.Reg.Nom.Pl.Fem	Auswirkung-n
absichtliche	ADJA.Pos.Acc.Sg.Fem	absichtlich-j
Zerstörung	N.Reg.Acc.Sg.Fem	Zerstörung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
weshalb	PROADV.Inter	weshalb-x
ein	ART.Indef.Nom.Sg.Masc	eine-x
guter	ADJA.Pos.Nom.Sg.Masc	gut-j
Bürger	N.Reg.Nom.Sg.Masc	Bürger-n
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
solche	PRO.Indef.Attr.Acc.Pl.Neut	solche-p
destruktiven	ADJA.Pos.Acc.Pl.Neut	destruktiv-j
Mittel	N.Reg.Acc.Pl.Neut	Mittel-n
anwendet	VFIN.Full.3.Sg.Pres.Ind	anwenden-v
um	CONJ.SubInf	um-c
reicher	ADJD.Comp	reich-j
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
jeder	PRO.Indef.Subst.Nom.Sg.Masc	jede-p
täte	VFIN.Full.3.Sg.Past.Subj	tun-v
<g/>
,	SYM.Pun.Comma	,-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
alle	PRO.Indef.Subst.Nom.Pl.*	alle-p
durch	APPR	durch-i
die	ART.Def.Acc.Sg.Fem	die-x
gegenseitige	ADJA.Pos.Acc.Sg.Fem	gegenseitig-j
Destruktivität	N.Reg.Acc.Sg.Fem	Destruktivität-n
ärmer	ADJD.Comp	arm-j
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Kantische	ADJA.Pos.Nom.Sg.Fem	kantisch-j
Ethik	N.Reg.Nom.Sg.Fem	Ethik-n
<g/>
,	SYM.Pun.Comma	,-x
oder	CONJ.Coord	oder-c
die	ART.Def.Nom.Sg.Fem	die-x
Goldene	ADJA.Pos.Nom.Sg.Fem	golden-j
Regel	N.Reg.Nom.Sg.Fem	Regel-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
mir	PRO.Pers.Subst.1.Dat.Sg.*	sie-p
die	ART.Def.Acc.Pl.Fem	die-x
enstehenden	ADJA.Pos.Acc.Pl.Fem	enstehend-j
Konsequenzen	N.Reg.Acc.Pl.Fem	Konsequenz-n
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
jeder	PRO.Indef.Subst.Nom.Sg.Masc	jede-p
Information	N.Reg.Acc.Sg.Fem	Information-n
hortet	VFIN.Full.3.Sg.Pres.Ind	horten-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
gefallen	VINF.Full	gefallen-v
<g/>
,	SYM.Pun.Comma	,-x
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
verpflichtet	ADJD.Pos	verpflichtet-j
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
für	APPR	für-i
falsch	ADJD.Pos	falsch-j
zu	PART.Zu	zu-x
betrachten	VINF.Full	betrachten-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
einer	PRO.Indef.Subst.Nom.Sg.Masc	eine-p
so	ADV	so-a
verhält	VFIN.Full.3.Sg.Pres.Ind	verhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Insbesondere	ADV	insbesondere-a
der	ART.Def.Nom.Sg.Masc	die-x
Wunsch	N.Reg.Nom.Sg.Masc	Wunsch-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
eigene	ADJA.Pos.Acc.Sg.Fem	eigen-j
Kreativität	N.Reg.Acc.Sg.Fem	Kreativität-n
belohnt	VPP.Full.Psp	belohnen-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
rechtfertigt	VFIN.Full.3.Sg.Pres.Ind	rechtfertigen-v
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Sg.Fem	die-x
Welt	N.Reg.Acc.Sg.Fem	Welt-n
im	APPRART.Dat.Sg.Neut	in-i
allgemeinen	ADJA.Pos.Dat.Sg.Neut	allgemein-j
von	APPR	von-i
allen	PRO.Indef.Attr.Dat.Pl.Fem	alle-p
oder	CONJ.Coord	oder-c
einem	ART.Indef.Dat.Sg.Masc	eine-x
Teil	N.Reg.Dat.Sg.Masc	Teil-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Kreativität	N.Reg.Gen.Sg.Fem	Kreativität-n
zu	PART.Zu	zu-x
berauben	VINF.Full	berauben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
nicht	PART.Neg	nicht-x
verhungern	VINF.Full	verhungern-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
könnte	VFIN.Mod.1.Sg.Past.Subj	können-v
antworten	VINF.Full	antworten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
gezwungen	VPP.Full.Psp	zwingen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Nom.Sg.Masc	eine-x
Programmierer	N.Reg.Nom.Sg.Masc	Programmierer-n
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
von	APPR	von-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
könnten	VFIN.Mod.3.Pl.Past.Subj	können-v
nicht	PART.Neg	nicht-x
davon	PROADV.Dem	davon-x
leben	VINF.Full	leben-v
auf	APPR	auf-i
der	ART.Def.Dat.Sg.Fem	die-x
Straße	N.Reg.Dat.Sg.Fem	Straße-n
zu	PART.Zu	zu-x
stehen	VINF.Full	stehen-v
und	CONJ.Coord	und-c
Grimassen	N.Reg.Acc.Pl.Fem	Grimasse-n
zu	PART.Zu	zu-x
schneiden	VINF.Full	schneiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
deswegen	PROADV.Dem	deswegen-x
noch	ADV	noch-a
lange	ADV	lange-a
nicht	PART.Neg	nicht-x
dazu	PROADV.Dem	dazu-x
verurteilt	VPP.Full.Psp	verurteilen-v
<g/>
,	SYM.Pun.Comma	,-x
unser	PRO.Poss.Attr.Acc.Sg.Neut	unsre-p
Leben	N.Reg.Acc.Sg.Neut	Leben-n
stehend	ADJD.Pos	stehend-j
auf	APPR	auf-i
der	ART.Def.Dat.Sg.Fem	die-x
Straße	N.Reg.Dat.Sg.Fem	Straße-n
zu	PART.Zu	zu-x
verbringen	VINF.Full	verbringen-v
<g/>
,	SYM.Pun.Comma	,-x
Grimassen	N.Reg.Acc.Pl.Fem	Grimasse-n
schneidend	ADJD.Pos	schneidend-j
und	CONJ.Coord	und-c
verhungernd	ADJD.Pos	verhungernd-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
tun	VFIN.Full.1.Pl.Pres.Ind	tun-v
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
anderes	PRO.Indef.Subst.Acc.Sg.Neut	andere-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
falsche	ADJA.Pos.Nom.Sg.Fem	falsch-j
Antwort	N.Reg.Nom.Sg.Fem	Antwort-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
implizite	ADJA.Pos.Acc.Sg.Fem	implizit-j
Annahme	N.Reg.Acc.Sg.Fem	Annahme-n
des	ART.Def.Gen.Sg.Masc	die-x
Fragestellers	N.Reg.Gen.Sg.Masc	Fragesteller-n
akzeptiert	VPP.Full.Psp	akzeptieren-v
<g/>
:	SYM.Pun.Colon	:-x
dass	CONJ.SubFin	dass-c
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
ohne	APPR	ohne-i
Eigentum	N.Reg.Acc.Sg.Neut	Eigentum-n
an	APPR	an-i
Software	N.Reg.Dat.Sg.Fem	Software-n
möglicherweise	ADV	möglicherweise-a
kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
Cent	N.Reg.Nom.Sg.Masc	Cent-n
bezahlt	VPP.Full.Psp	bezahlen-v
werden	VINF.Aux	werden-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Vermeintlich	ADJD.Pos	vermeintlich-j
Alles	PRO.Indef.Subst.Nom.Sg.Neut	alle-p
oder	CONJ.Coord	oder-c
Nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
wahre	ADJA.Pos.Nom.Sg.Masc	wahr-j
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
nicht	PART.Neg	nicht-x
verhungern	VINF.Full	verhungern-v
werden	VINF.Aux	werden-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
für	APPR	für-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
immer	ADV	immer-a
noch	ADV	noch-a
möglich	ADJD.Pos	möglich-j
sein	VINF.Aux	sein-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
Programmierung	N.Reg.Acc.Sg.Fem	Programmierung-n
bezahlt	VPP.Full.Psp	bezahlen-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
;	SYM.Pun.Sent	;-x
nur	ADV	nur-a
halt	ADV	halt-a
nicht	PART.Neg	nicht-x
ganz	ADV	ganz-a
so	ADV	so-a
viel	PRO.Indef.Subst.*.*.*	viel-p
wie	CONJ.Comp	wie-c
jetzt	ADV	jetzt-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eingeschränktes	ADJA.Pos.Nom.Sg.Neut	eingeschränkt-j
Kopieren	N.Reg.Nom.Sg.Neut	Kopieren-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
die	ART.Def.Nom.Sg.Fem	die-x
einzige	ADJA.Pos.Nom.Sg.Fem	einzig-j
Grundlage	N.Reg.Nom.Sg.Fem	Grundlage-n
für	APPR	für-i
geschäftliche	ADJA.Pos.Acc.Sg.Fem	geschäftlich-j
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
üblichste	ADJA.Sup.Nom.Sg.Fem	üblich-j
Basis	N.Reg.Nom.Sg.Fem	Basis-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
7	CARD	7-m
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
am	PART.Deg	am-x
meisten	PRO.Indef.Attr.*.*.*	meiste-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
einbringt	VFIN.Full.3.Sg.Pres.Ind	einbringen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
verboten	VPP.Full.Psp	verbieten-v
oder	CONJ.Coord	oder-c
durch	APPR	durch-i
Kunden	N.Reg.Acc.Pl.Masc	Kunde-n
abgelehnt	VPP.Full.Psp	ablehnen-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
das	ART.Def.Nom.Sg.Neut	die-x
Softwaregeschäft	N.Reg.Nom.Sg.Neut	Softwaregeschäft-n
auf	APPR	auf-i
andere	ADJA.Pos.Acc.Pl.Fem	ander-j
organisatorische	ADJA.Pos.Acc.Pl.Fem	organisatorisch-j
Grundlagen	N.Reg.Acc.Pl.Fem	Grundlage-n
bewegen	VINF.Full	bewegen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
zur	APPRART.Dat.Sg.Fem	zu-i
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
weniger	ADV	weniger-a
häufig	ADJD.Pos	häufig-j
verwendet	VPP.Full.Psp	verwenden-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
immer	ADV	immer-a
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
Geschäfte	N.Reg.Acc.Pl.Neut	Geschäft-n
zu	PART.Zu	zu-x
organisieren	VINF.Full	organisieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Vermutlich	ADV	vermutlich-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
das	ART.Def.Nom.Sg.Neut	die-x
Programmieren	N.Reg.Nom.Sg.Neut	Programmieren-n
auf	APPR	auf-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
neuen	ADJA.Pos.Dat.Sg.Fem	neu-j
Grundlage	N.Reg.Dat.Sg.Fem	Grundlage-n
nicht	PART.Neg	nicht-x
so	ADV	so-a
lukrativ	ADJD.Pos	lukrativ-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
jetzt	ADV	jetzt-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Argument	N.Reg.Nom.Sg.Neut	Argument-n
gegen	APPR	gegen-i
die	ART.Def.Acc.Sg.Fem	die-x
Änderung	N.Reg.Acc.Sg.Fem	Änderung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
betrachtet	VFIN.Full.3.Sg.Pres.Ind	betrachten-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
im	APPRART.Dat.Sg.Neut	in-i
allgemeinen	ADJA.Pos.Dat.Sg.Neut	allgemein-j
nicht	PART.Neg	nicht-x
als	APPR	als-i
ungerecht	ADJD.Pos	ungerecht-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
VerkäuferInnen	N.Reg.Nom.Pl.Fem	Verkäuferin-n
die	ART.Def.Acc.Pl.Neut	die-x
Gehälter	N.Reg.Acc.Pl.Neut	Gehalt-n
bekommen	VFIN.Full.3.Pl.Pres.Ind	bekommen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
bekommen	VFIN.Full.3.Pl.Pres.Ind	bekommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
die	ART.Def.Nom.Pl.Neut	die-x
gleichen	ADJA.Pos.Nom.Pl.Neut	gleich-j
Gehälter	N.Reg.Nom.Pl.Neut	Gehalt-n
beziehen	VINF.Full	beziehen-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ebenfalls	ADV	ebenfalls-a
nicht	PART.Neg	nicht-x
ungerecht	ADJD.Pos	ungerecht-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
In	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Praxis	N.Reg.Dat.Sg.Fem	Praxis-n
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
auch	ADV	auch-a
weiterhin	ADV	weiterhin-a
deutlich	ADJD.Pos	deutlich-j
mehr	PRO.Indef.Subst.*.*.*	mehr-p
beziehen	VFIN.Full.3.Pl.Pres.Ind	beziehen-v
<g/>
.	SYM.Pun.Sent	.-x
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
nicht	PART.Neg	nicht-x
das	ART.Def.Acc.Sg.Neut	die-x
Recht	N.Reg.Acc.Sg.Neut	Recht-n
zu	PART.Zu	zu-x
kontrollieren	VINF.Full	kontrollieren-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
ihre	PRO.Poss.Attr.Nom.Pl.Fem	ihre-p
Ideen	N.Reg.Nom.Pl.Fem	Idee-n
verwendet	VPP.Full.Psp	verwenden-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Die	ART.Def.Nom.Sg.Fem	die-x
Kontrolle	N.Reg.Nom.Sg.Fem	Kontrolle-n
über	APPR	über-i
die	ART.Def.Acc.Sg.Fem	die-x
Verwendung	N.Reg.Acc.Sg.Fem	Verwendung-n
eigener	ADJA.Pos.Gen.Pl.Fem	eigen-j
Ideen	N.Reg.Gen.Pl.Fem	Idee-n
<g/>
"	SYM.Quot.Left	"-x
konstituiert	ADJD.Pos	konstituiert-j
in	APPR	in-i
Wirklichkeit	N.Reg.Dat.Sg.Fem	Wirklichkeit-n
die	ART.Def.Acc.Sg.Fem	die-x
Kontrolle	N.Reg.Acc.Sg.Fem	Kontrolle-n
über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
Leben	N.Reg.Acc.Sg.Neut	Leben-n
anderer	ADJA.Pos.Gen.Pl.Masc	ander-j
Menschen	N.Reg.Gen.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
i.	APPR	i.-i
d.	ART.Def.Gen.Sg.Fem	d.-x
R.	N.Name.Nom.Sg.*	R.-n
eingesetzt	VPP.Full.Psp	einsetzen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
den	ART.Def.Dat.Pl.Masc	die-x
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
das	ART.Def.Acc.Sg.Neut	die-x
Leben	N.Reg.Acc.Sg.Neut	Leben-n
zu	PART.Zu	zu-x
erschweren	VINF.Full	erschweren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Personen	N.Reg.Nom.Pl.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Frage	N.Reg.Acc.Sg.Fem	Frage-n
der	ART.Def.Gen.Pl.Neut	die-x
Rechte	N.Reg.Gen.Pl.Neut	Recht-n
am	APPRART.Dat.Sg.Neut	an-i
geistigen	ADJA.Pos.Dat.Sg.Neut	geistig-j
Eigentum	N.Reg.Dat.Sg.Neut	Eigentum-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
8	CARD	8-m
<g/>
)	SYM.Paren.Right	)-x
aufmerksam	ADJD.Pos	aufmerksam-j
untersucht	VPP.Full.Psp	untersuchen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
(	SYM.Paren.Left	(-x
<g/>
z.	APPRART.Dat.Sg.Neut	z.-i
B.	N.Reg.Dat.Sg.Neut	B.-n
Anwälte	N.Reg.Nom.Pl.Masc	Anwalt-n
<g/>
)	SYM.Paren.Right	)-x
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
intrinsisches	ADJA.Pos.Acc.Sg.Neut	intrinsisch-j
Recht	N.Reg.Acc.Sg.Neut	Recht-n
auf	APPR	auf-i
geistiges	ADJA.Pos.Acc.Sg.Neut	geistig-j
Eigentum	N.Reg.Acc.Sg.Neut	Eigentum-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Regierung	N.Reg.Dat.Sg.Fem	Regierung-n
anerkannten	ADJA.Pos.Nom.Pl.Fem	anerkannt-j
Arten	N.Reg.Nom.Pl.Fem	Art-n
angeblicher	ADJA.Pos.Gen.Pl.Masc	angeblich-j
Rechte	N.Reg.Gen.Pl.Neut	Recht-n
am	APPRART.Dat.Sg.Neut	an-i
geistigen	ADJA.Pos.Dat.Sg.Neut	geistig-j
Eigentum	N.Reg.Dat.Sg.Neut	Eigentum-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
durch	APPR	durch-i
besondere	ADJA.Pos.Acc.Pl.Fem	besonder-j
Rechtsvorschriften	N.Reg.Acc.Pl.Fem	Rechtsvorschrift-n
für	APPR	für-i
bestimmte	ADJA.Pos.Acc.Pl.Masc	bestimmt-j
Zwecke	N.Reg.Acc.Pl.Masc	Zweck-n
geschaffen	VPP.Full.Psp	schaffen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
das	ART.Def.Nom.Sg.Neut	die-x
Patentsystem	N.Reg.Nom.Sg.Neut	Patentsystem-n
etabliert	VPP.Full.Psp	etablieren-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Erfinder	N.Reg.Acc.Pl.Masc	Erfinder-n
zu	PART.Zu	zu-x
ermutigen	VINF.Full	ermutigen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Neut	die-x
Details	N.Reg.Acc.Pl.Neut	Detail-n
ihrer	PRO.Poss.Attr.Gen.Pl.Fem	ihre-p
Erfindungen	N.Reg.Gen.Pl.Fem	Erfindung-n
offen	ADJD.Pos	offen-j
zu	PART.Zu	zu-x
legen	VINF.Full	legen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Zweck	N.Reg.Nom.Sg.Masc	Zweck-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Gesellschaft	N.Reg.Nom.Sg.Fem	Gesellschaft-n
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
den	ART.Def.Dat.Pl.Masc	die-x
Erfindern	N.Reg.Dat.Pl.Masc	Erfinder-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zu	APPR	zu-i
jener	PRO.Dem.Attr.Dat.Sg.Fem	jene-p
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Lebensdauer	N.Reg.Nom.Sg.Fem	Lebensdauer-n
von	APPR	von-i
17	CARD	17-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Patent	N.Reg.Acc.Sg.Neut	Patent-n
kurz	ADJD.Pos	kurz-j
verglichen	VPP.Full.Psp	vergleichen-v
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Geschwindigkeit	N.Reg.Dat.Sg.Fem	Geschwindigkeit-n
des	ART.Def.Gen.Sg.Masc	die-x
Fortschritts	N.Reg.Gen.Sg.Masc	Fortschritt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
Patente	N.Reg.Nom.Pl.Neut	Patent-n
nur	ADV	nur-a
für	APPR	für-i
Hersteller	N.Reg.Acc.Sg.Masc	Hersteller-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
Thema	N.Reg.Acc.Sg.Neut	Thema-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	PRO.Rel.Subst.Acc.Pl.Fem	die-p
die	ART.Def.Nom.Pl.Fem	die-x
Kosten	N.Reg.Nom.Pl.Fem	Kosten-n
und	CONJ.Coord	und-c
Aufwand	N.Reg.Nom.Sg.Masc	Aufwand-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
Lizenzvertrages	N.Reg.Gen.Sg.Masc	Lizenzvertrag-n
verglichen	VPP.Full.Psp	vergleichen-v
mit	APPR	mit-i
den	ART.Def.Dat.Pl.*	die-x
Produktionskosten	N.Reg.Dat.Pl.*	Produktionskosten-n
gering	ADJD.Pos	gering-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
schaden	VFIN.Full.3.Pl.Pres.Ind	schaden-v
Patente	N.Reg.Nom.Pl.Neut	Patent-n
oft	ADV	oft-a
nicht	PART.Neg	nicht-x
viel	ADV	viel-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
behindern	VFIN.Full.3.Pl.Pres.Ind	behindern-v
die	ART.Def.Acc.Pl.Fem	die-x
meisten	PRO.Indef.Attr.Acc.Pl.Fem	meiste-p
Einzelpersonen	N.Reg.Acc.Pl.Fem	Einzelperson-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
patentierte	ADJA.Pos.Acc.Pl.Neut	patentiert-j
Produkte	N.Reg.Acc.Pl.Neut	Produkt-n
benutzen	VFIN.Full.3.Pl.Pres.Ind	benutzen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Idee	N.Reg.Nom.Sg.Fem	Idee-n
des	ART.Def.Gen.Sg.Neut	die-x
Urheberrechts	N.Reg.Gen.Sg.Neut	Urheberrecht-n
existierte	VFIN.Full.3.Sg.Past.Ind	existieren-v
früher	ADJD.Comp	früh-j
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
Autoren	N.Reg.Nom.Pl.Masc	Autor-n
häufig	ADJD.Pos	häufig-j
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Autoren	N.Reg.Acc.Pl.Masc	Autor-n
in	APPR	in-i
nicht-fiktionalen	ADJA.Pos.Dat.Pl.Neut	nicht-fiktional-j
Werken	N.Reg.Dat.Pl.Neut	Werk-n
kopierten	VFIN.Full.3.Pl.Past.Ind	kopieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Praxis	N.Reg.Nom.Sg.Fem	Praxis-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
nützlich	ADJD.Pos	nützlich-j
und	CONJ.Coord	und-c
der	ART.Def.Nom.Sg.Masc	die-x
einzige	ADJA.Pos.Nom.Sg.Masc	einzig-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
Werke	N.Reg.Nom.Pl.Neut	Werk-n
vieler	PRO.Indef.Attr.Gen.Pl.Masc	viele-p
Autoren	N.Reg.Gen.Pl.Masc	Autor-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
sogar	ADV	sogar-a
teilweise	ADV	teilweise-a
überlebt	VPP.Full.Psp	überleben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Copyright-System	N.Reg.Nom.Sg.Neut	Copyright-System-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
speziell	ADJD.Pos	speziell-j
zur	APPRART.Dat.Sg.Fem	zu-i
Förderung	N.Reg.Dat.Sg.Fem	Förderung-n
der	ART.Def.Gen.Sg.Fem	die-x
Urheberschaft	N.Reg.Gen.Sg.Fem	Urheberschaft-n
erstellt	VPP.Full.Psp	erstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
dem	ART.Def.Dat.Sg.Neut	die-x
Gebiet	N.Reg.Dat.Sg.Neut	Gebiet-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
erfunden	VPP.Full.Psp	erfinden-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
–	CARD	[number]-m
Bücher	N.Reg.Acc.Pl.Neut	Buch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
nur	ADV	nur-a
auf	APPR	auf-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Druckerpresse	N.Reg.Dat.Sg.Fem	Druckerpresse-n
ökonomisch	ADJD.Pos	ökonomisch-j
vervielfältigt	VPP.Full.Psp	vervielfältigen-v
werden	VINF.Aux	werden-v
konnten	VFIN.Mod.3.Pl.Past.Ind	können-v
-	SYM.Pun.Hyph	--x
schadete	VFIN.Full.3.Sg.Past.Ind	schaden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wenig	ADV	wenig-a
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
behindert	VFIN.Full.3.Sg.Pres.Ind	behindern-v
dadurch	PROADV.Dem	dadurch-x
die	ART.Def.Acc.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Acc.Pl.Masc	meiste-p
Leser	N.Reg.Acc.Pl.Masc	Leser-n
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Alle	PRO.Indef.Attr.Nom.Pl.Neut	alle-p
geistigen	ADJA.Pos.Nom.Pl.Neut	geistig-j
Eigentumsrechte	N.Reg.Nom.Pl.Neut	Eigentumsrecht-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nur	ADV	nur-a
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Gesellschaft	N.Reg.Dat.Sg.Fem	Gesellschaft-n
<g/>
,	SYM.Pun.Comma	,-x
zu	APPR	zu-i
Recht	N.Reg.Dat.Sg.Neut	Recht-n
oder	CONJ.Coord	oder-c
Unrecht	N.Reg.Dat.Sg.Neut	Unrecht-n
<g/>
,	SYM.Pun.Comma	,-x
gewährte	ADJA.Pos.Nom.Pl.Fem	gewährt-j
Lizenzen	N.Reg.Nom.Pl.Fem	Lizenz-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
glaubte	VFIN.Full.3.Sg.Past.Ind	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
als	APPR	als-i
Ganzes	N.Reg.Acc.Sg.Neut	Ganze-n
profitieren	VINF.Full	profitieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
bestimmten	ADJA.Pos.Dat.Sg.Fem	bestimmt-j
Situation	N.Reg.Dat.Sg.Fem	Situation-n
jedoch	CONJ.Coord	jedoch-c
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
uns	PRO.Refl.Subst.1.Acc.Pl.*	sie-p
fragen	VINF.Full	fragen-v
<g/>
:	SYM.Pun.Colon	:-x
Sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
wirklich	ADJD.Pos	wirklich-j
durch	APPR	durch-i
die	ART.Def.Acc.Sg.Fem	die-x
Gewährung	N.Reg.Acc.Sg.Fem	Gewährung-n
solcher	PRO.Indef.Attr.Gen.Pl.Fem	solche-p
Lizenzen	N.Reg.Gen.Pl.Fem	Lizenz-n
besser	ADJD.Comp	gut-j
gestellt	VPP.Full.Psp	stellen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Welche	PRO.Inter.Attr.Acc.Sg.Fem	welche-p
Art	N.Reg.Acc.Sg.Fem	Art-n
der	ART.Def.Gen.Sg.Fem	die-x
Handlung	N.Reg.Gen.Sg.Fem	Handlung-n
erlauben	VFIN.Full.1.Pl.Pres.Ind	erlauben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
einer	ART.Indef.Dat.Sg.Fem	eine-x
Person	N.Reg.Dat.Sg.Fem	Person-n
dadurch	PROADV.Dem	dadurch-x
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Fall	N.Reg.Nom.Sg.Masc	Fall-n
von	APPR	von-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
heute	ADV	heute-a
unterscheidet	VFIN.Full.3.Sg.Pres.Ind	unterscheiden-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
sehr	ADV	sehr-a
von	APPR	von-i
Büchern	N.Reg.Dat.Pl.Neut	Buch-n
von	APPR	von-i
vor	ADV	vor-a
hundert	CARD	hundert-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Tatsache	N.Reg.Nom.Sg.Fem	Tatsache-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
der	ART.Def.Nom.Sg.Masc	die-x
einfachste	ADJA.Sup.Nom.Sg.Masc	einfach-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
zu	PART.Zu	zu-x
kopieren	VINF.Full	kopieren-v
<g/>
,	SYM.Pun.Comma	,-x
von	APPR	von-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Mitmenschen	N.Reg.Dat.Sg.Masc	Mitmensch-n
zum	APPRART.Dat.Sg.Neut	zu-i
Nächsten	N.Reg.Dat.Sg.Neut	Nächste-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Tatsache	N.Reg.Nom.Sg.Fem	Tatsache-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
unterschiedlichen	ADJA.Pos.Gen.Sg.Masc	unterschiedlich-j
sowohl	CONJ.Coord	sowohl-c
Quell	N.Reg.Nom.Sg.Masc	Quell-n
<g/>
-	SYM.Pun.Hyph	--x
als	CONJ.Coord	als-c
auch	ADV	auch-a
Objektcode	N.Reg.Acc.Sg.Masc	Objektcode-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
und	CONJ.Coord	und-c
die	ART.Def.Acc.Sg.Fem	die-x
Tatsache	N.Reg.Acc.Sg.Fem	Tatsache-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
verwendet	VPP.Full.Psp	verwenden-v
statt	CONJ.Coord	statt-c
gelesen	VPP.Full.Psp	lesen-v
und	CONJ.Coord	und-c
genossen	VPP.Full.Psp	genießen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
bündeln	VFIN.Full.3.Pl.Pres.Ind	bündeln-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
Situation	N.Reg.Acc.Sg.Fem	Situation-n
zu	PART.Zu	zu-x
schaffen	VINF.Full	schaffen-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
eine	ART.Indef.Nom.Sg.Fem	eine-x
Person	N.Reg.Nom.Sg.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Urheberrecht	N.Reg.Acc.Sg.Neut	Urheberrecht-n
einfordert	VFIN.Full.3.Sg.Pres.Ind	einfordern-v
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Dat.Sg.Fem	die-x
Gesellschaft	N.Reg.Dat.Sg.Fem	Gesellschaft-n
als	APPR	als-i
Ganzes	N.Reg.Nom.Sg.Neut	Ganze-n
sowohl	CONJ.Coord	sowohl-c
materiell	ADJD.Pos	materiell-j
als	CONJ.Coord	als-c
auch	ADV	auch-a
spirituell	ADJD.Pos	spirituell-j
schadet	VFIN.Full.3.Sg.Pres.Ind	schaden-v
<g/>
;	SYM.Pun.Sent	;-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Situation	N.Reg.Acc.Sg.Fem	Situation-n
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
eine	ART.Indef.Nom.Sg.Fem	eine-x
Person	N.Reg.Nom.Sg.Fem	Person-n
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
Urheberrecht	N.Reg.Acc.Sg.Neut	Urheberrecht-n
einfordern	VINF.Full	einfordern-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
,	SYM.Pun.Comma	,-x
unabhängig	ADJD.Pos	unabhängig-j
davon	PROADV.Dem	davon-x
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Recht	N.Reg.Acc.Sg.Neut	Recht-n
ermöglicht	VFIN.Full.3.Sg.Pres.Ind	ermöglichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Wettbewerb	N.Reg.Nom.Sg.Masc	Wettbewerb-n
bringt	VFIN.Full.3.Sg.Pres.Ind	bringen-v
Dinge	N.Reg.Acc.Pl.Neut	Ding-n
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
besser	ADJD.Comp	gut-j
gemacht	VPP.Full.Psp	machen-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Paradigma	N.Reg.Nom.Sg.Neut	Paradigma-n
von	APPR	von-i
Wettbewerb	N.Reg.Dat.Sg.Masc	Wettbewerb-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Wettrennen	N.Reg.Nom.Sg.Neut	Wettrennen-n
<g/>
:	SYM.Pun.Colon	:-x
indem	CONJ.SubFin	indem-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Sieger	N.Reg.Acc.Sg.Masc	Sieger-n
belohnen	VFIN.Full.1.Pl.Pres.Ind	belohnen-v
<g/>
,	SYM.Pun.Comma	,-x
ermuntern	VFIN.Full.1.Pl.Pres.Ind	ermuntern-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
jeden	PRO.Indef.Subst.Acc.Sg.Masc	jede-p
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
schneller	ADJD.Comp	schnell-j
zu	PART.Zu	zu-x
laufen	VINF.Full	laufen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Kapitalismus	N.Reg.Nom.Sg.Masc	Kapitalismus-n
tatsächlich	ADJD.Pos	tatsächlich-j
auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
funktioniert	VFIN.Full.3.Sg.Pres.Ind	funktionieren-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
guter	ADJA.Pos.Nom.Sg.Masc	gut-j
Job	N.Reg.Nom.Sg.Masc	Job-n
<g/>
;	SYM.Pun.Sent	;-x
aber	CONJ.Coord	aber-c
seine	PRO.Poss.Attr.Nom.Pl.Masc	seine-p
Verteidiger	N.Reg.Nom.Pl.Masc	Verteidiger-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
Unrecht	N.Reg.Acc.Sg.Neut	Unrecht-n
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Annahme	N.Reg.Dat.Sg.Fem	Annahme-n
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
funktioniere	VFIN.Full.3.Sg.Pres.Subj	funktionieren-v
immer	ADV	immer-a
so	ADV	so-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Pl.Masc	die-x
Läufer	N.Reg.Nom.Pl.Masc	Läufer-n
vergessen	VPP.Full.Psp	vergessen-v
<g/>
,	SYM.Pun.Comma	,-x
weshalb	PROADV.Inter	weshalb-x
der	ART.Def.Nom.Sg.Masc	die-x
Preis	N.Reg.Nom.Sg.Masc	Preis-n
ausgesetzt	VPP.Full.Psp	aussetzen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
und	CONJ.Coord	und-c
unbedingt	ADV	unbedingt-a
<g/>
,	SYM.Pun.Comma	,-x
egal	ADV	egal-a
wie	CONJ.Coord	wie-c
<g/>
,	SYM.Pun.Comma	,-x
gewinnen	VINF.Full	gewinnen-v
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
<g/>
,	SYM.Pun.Comma	,-x
entdecken	VFIN.Full.3.Pl.Pres.Ind	entdecken-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
vielleicht	ADV	vielleicht-a
andere	ADJA.Pos.Acc.Pl.Fem	ander-j
Strategien	N.Reg.Acc.Pl.Fem	Strategie-n
-	SYM.Pun.Hyph	--x
wie	CONJ.Comp	wie-c
z.	APPRART.Dat.Sg.Neut	z.-i
B.	N.Reg.Dat.Sg.Neut	B.-n
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Läufer	N.Reg.Acc.Pl.Masc	Läufer-n
anzugreifen	VINF.Full.zu	angreifen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Pl.Masc	die-x
Läufer	N.Reg.Nom.Pl.Masc	Läufer-n
in	APPR	in-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Faustkampf	N.Reg.Acc.Sg.Masc	Faustkampf-n
geraten	VFIN.Full.3.Pl.Pres.Ind	geraten-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
alle	PRO.Indef.Subst.Nom.Pl.*	alle-p
den	ART.Def.Acc.Sg.Masc	die-x
Lauf	N.Reg.Acc.Sg.Masc	Lauf-n
später	ADJD.Comp	später-j
beenden	VINF.Full	beenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Proprietäre	N.Reg.Nom.Pl.Masc	Proprietär-n
und	CONJ.Coord	und-c
geheime	ADJA.Pos.Nom.Sg.Fem	geheim-j
Software	N.Reg.Nom.Sg.Fem	Software-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
moralische	ADJA.Pos.Nom.Sg.Neut	moralisch-j
Äquivalent	N.Reg.Nom.Sg.Neut	Äquivalent-n
zu	APPR	zu-i
Läufern	N.Reg.Dat.Pl.Masc	Läufer-n
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Faustkampf	N.Reg.Dat.Sg.Masc	Faustkampf-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Traurig	ADJD.Pos	traurig-j
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
der	ART.Def.Nom.Sg.Masc	die-x
einzige	ADJA.Pos.Nom.Sg.Masc	einzig-j
vorhandene	ADJA.Pos.Nom.Sg.Masc	vorhanden-j
Schiedsrichter	N.Reg.Nom.Sg.Masc	Schiedsrichter-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bekommen	VPP.Full.Psp	bekommen-v
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
gegen	APPR	gegen-i
die	ART.Def.Acc.Pl.Masc	die-x
Faustkämpfe	N.Reg.Acc.Pl.Masc	Faustkampf-n
einzuwenden	VINF.Full.zu	einwenden-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
;	SYM.Pun.Sent	;-x
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
reguliert	VFIN.Full.3.Sg.Pres.Ind	regulieren-v
sie	PRO.Pers.Subst.3.Acc.*.*	sie-p
lediglich	ADV	lediglich-a
(	SYM.Paren.Left	(-x
<g/>
"	SYM.Quot.Left	"-x
<g/>
Pro	N.Name.*.*.*	Pro-n
gelaufene	ADJA.Pos.Acc.Pl.Masc	gelaufen-j
zehn	CARD	zehn-m
Meter	N.Reg.Acc.Pl.Masc	Meter-n
darf	VFIN.Mod.3.Sg.Pres.Ind	dürfen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Schuss	N.Reg.Acc.Sg.Masc	Schuss-n
abfeuern	VINF.Full	abfeuern-v
<g/>
"	SYM.Quot.Left	"-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
stattdessen	PROADV.Dem	stattdessen-x
auseinanderbringen	VINF.Full	auseinanderbringen-v
und	CONJ.Coord	und-c
Läufer	N.Reg.Acc.Pl.Masc	Läufer-n
bereits	ADV	bereits-a
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
Versuch	N.Reg.Acc.Sg.Masc	Versuch-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
Angriffs	N.Reg.Gen.Sg.Masc	Angriff-n
bestrafen	VINF.Full	bestrafen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
ohne	APPR	ohne-i
finanziellen	ADJA.Pos.Acc.Sg.Masc	finanziell-j
Ansporn	N.Reg.Acc.Sg.Masc	Ansporn-n
nicht	PART.Neg	nicht-x
jeder	PRO.Indef.Subst.Dat.Sg.Fem	jede-p
aufhören	VINF.Full	aufhören-v
zu	PART.Zu	zu-x
programmieren	VINF.Full	programmieren-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Tatsächlich	ADJD.Pos	tatsächlich-j
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
absolut	ADJD.Pos	absolut-j
ohne	APPR	ohne-i
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
finanziellen	ADJA.Pos.Acc.Sg.Masc	finanziell-j
Ansporn	N.Reg.Acc.Sg.Masc	Ansporn-n
programmieren	VINF.Full	programmieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Programmierung	N.Reg.Nom.Sg.Fem	Programmierung-n
übt	VFIN.Full.3.Sg.Pres.Ind	üben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
unwiderstehliche	ADJA.Pos.Acc.Sg.Fem	unwiderstehlich-j
Anziehungskraft	N.Reg.Acc.Sg.Fem	Anziehungskraft-n
auf	APPR	auf-i
einige	PRO.Indef.Attr.Acc.Pl.Masc	einige-p
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
aus	PART.Verb	aus-x
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Regel	N.Reg.Dat.Sg.Fem	Regel-n
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
darin	PROADV.Dem	darin-x
am	PART.Deg	am-x
besten	ADJD.Sup	besten-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Mangel	N.Reg.Acc.Sg.Masc	Mangel-n
an	APPR	an-i
professionellen	ADJA.Pos.Dat.Pl.Masc	professionell-j
Musikern	N.Reg.Dat.Pl.Masc	Musiker-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
am	APPRART.Dat.Sg.Masc	an-i
Ball	N.Reg.Dat.Sg.Masc	Ball-n
bleiben	VFIN.Full.3.Pl.Pres.Ind	bleiben-v
<g/>
,	SYM.Pun.Comma	,-x
obwohl	CONJ.SubFin	obwohl-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Hoffnung	N.Reg.Acc.Sg.Fem	Hoffnung-n
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Lebensunterhalt	N.Reg.Acc.Sg.Masc	Lebensunterhalt-n
zu	PART.Zu	zu-x
bestreiten	VINF.Full	bestreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
tatsächlich	ADJD.Pos	tatsächlich-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Frage	N.Reg.Nom.Sg.Fem	Frage-n
<g/>
,	SYM.Pun.Comma	,-x
obwohl	CONJ.SubFin	obwohl-c
häufig	ADJD.Pos	häufig-j
gestellt	VPP.Full.Psp	stellen-v
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Dat.Sg.Fem	die-x
Situation	N.Reg.Dat.Sg.Fem	Situation-n
nicht	PART.Neg	nicht-x
angemessen	ADJD.Pos	angemessen-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Bezahlung	N.Reg.Nom.Sg.Fem	Bezahlung-n
für	APPR	für-i
Programmierer	N.Reg.Acc.Sg.Masc	Programmierer-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
nicht	PART.Neg	nicht-x
verschwinden	VINF.Full	verschwinden-v
<g/>
,	SYM.Pun.Comma	,-x
nur	ADV	nur-a
weniger	ADJD.Comp	weniger-j
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
richtige	ADJA.Pos.Nom.Sg.Fem	richtig-j
Frage	N.Reg.Nom.Sg.Fem	Frage-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
also	ADV	also-a
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
jemand	PRO.Indef.Subst.Nom.Sg.Masc	jemand-p
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
reduzierten	ADJA.Pos.Dat.Sg.Masc	reduziert-j
finanziellen	ADJA.Pos.Dat.Sg.Masc	finanziell-j
Ansporn	N.Reg.Dat.Sg.Masc	Ansporn-n
programmieren	VINF.Full	programmieren-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Meine	PRO.Poss.Attr.Nom.Sg.Fem	meine-p
Erfahrung	N.Reg.Nom.Sg.Fem	Erfahrung-n
zeigt	VFIN.Full.3.Sg.Pres.Ind	zeigen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Seit	APPR	seit-i
mehr	PRO.Indef.Attr.*.*.*	mehr-p
als	CONJ.Comp	als-c
zehn	CARD	zehn-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
viele	PRO.Indef.Subst.Nom.Pl.Masc	viele-p
der	ART.Def.Gen.Pl.Masc	die-x
weltweit	ADJD.Pos	weltweit-j
besten	ADJA.Sup.Gen.Pl.Masc	gut-j
Programmierer	N.Reg.Gen.Pl.Masc	Programmierer-n
im	APPRART.Dat.Sg.Neut	in-i
KI-Labor	N.Reg.Dat.Sg.Neut	KI-Labor-n
für	APPR	für-i
weit	ADJD.Pos	weit-j
weniger	PRO.Indef.Attr.*.*.*	weniger-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
gearbeitet	VPP.Full.Psp	arbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
anderswo	ADV	anderswo-a
hätten	VFIN.Aux.3.Pl.Past.Subj	haben-v
verdienen	VINF.Full	verdienen-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
erhielten	VFIN.Full.3.Pl.Past.Ind	erhalten-v
nicht-finanzielle	ADJA.Pos.Acc.Pl.Fem	nicht-finanziell-j
Belohnungen	N.Reg.Acc.Pl.Fem	Belohnung-n
<g/>
:	SYM.Pun.Colon	:-x
Ruhm	N.Reg.Acc.Sg.Masc	Ruhm-n
und	CONJ.Coord	und-c
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
<g/>
,	SYM.Pun.Comma	,-x
zum	APPRART.Dat.Sg.Neut	zu-i
Beispiel	N.Reg.Dat.Sg.Neut	Beispiel-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
Kreativität	N.Reg.Nom.Sg.Fem	Kreativität-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
auch	ADV	auch-a
Spaß	N.Reg.Nom.Sg.Masc	Spaß-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Nom.Sg.Fem	eine-x
Belohnung	N.Reg.Nom.Sg.Fem	Belohnung-n
in	APPR	in-i
sich	PRO.Refl.Subst.3.Dat.Sg.*	sie-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
gingen	VFIN.Full.3.Pl.Past.Ind	gehen-v
die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Subst.Nom.Pl.Masc	meiste-p
von	APPR	von-i
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
eine	ART.Indef.Nom.Sg.Fem	eine-x
Chance	N.Reg.Nom.Sg.Fem	Chance-n
bot	VFIN.Full.3.Sg.Past.Ind	bieten-v
<g/>
,	SYM.Pun.Comma	,-x
dieselbe	PRO.Dem.Attr.Acc.Sg.Fem	dieselbe-p
interessante	ADJA.Pos.Acc.Sg.Fem	interessant-j
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
für	APPR	für-i
viel	PRO.Indef.Attr.*.*.*	viel-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
Tatsachen	N.Reg.Nom.Pl.Fem	Tatsache-n
zeigen	VFIN.Full.3.Pl.Pres.Ind	zeigen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
aus	APPR	aus-i
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
Gründen	N.Reg.Dat.Pl.Masc	Grund-n
als	APPR	als-i
Reichtum	N.Reg.Acc.Sg.Masc	Reichtum-n
programmieren	VINF.Full	programmieren-v
<g/>
;	SYM.Pun.Sent	;-x
aber	CONJ.Coord	aber-c
wenn	CONJ.SubFin	wenn-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
eine	ART.Indef.Nom.Sg.Fem	eine-x
Chance	N.Reg.Nom.Sg.Fem	Chance-n
bietet	VFIN.Full.3.Sg.Pres.Ind	bieten-v
<g/>
,	SYM.Pun.Comma	,-x
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	APPR	zu-i
Recht	N.Reg.Dat.Sg.Neut	Recht-n
erwarten	VINF.Full	erwarten-v
und	CONJ.Coord	und-c
auch	ADV	auch-a
einfordern	VINF.Full	einfordern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Niedrig	ADJD.Pos	niedrig-j
zahlende	ADJA.Pos.Nom.Pl.Neut	zahlend-j
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
sehen	VFIN.Full.3.Pl.Pres.Ind	sehen-v
schlecht	ADJD.Pos	schlecht-j
im	APPRART.Dat.Sg.Masc	in-i
Wettbewerb	N.Reg.Dat.Sg.Masc	Wettbewerb-n
mit	APPR	mit-i
hoch	ADJD.Pos	hoch-j
zahlenden	ADJA.Pos.Dat.Sg.Neut	zahlend-j
aus	PART.Verb	aus-x
<g/>
,	SYM.Pun.Comma	,-x
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
aber	ADV	aber-a
nicht	PART.Neg	nicht-x
schlecht	ADJD.Pos	schlecht-j
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
hoch	ADJD.Pos	hoch-j
zahlende	ADJA.Pos.Acc.Pl.Masc	zahlend-j
untersagt	VPP.Full.Psp	untersagen-v
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
benötigen	VFIN.Full.1.Pl.Pres.Ind	benötigen-v
die	ART.Def.Acc.Pl.Masc	die-x
Programmierer	N.Reg.Acc.Pl.Masc	Programmierer-n
unbedingt	ADV	unbedingt-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
aufhören	VFIN.Full.1.Pl.Pres.Ind	aufhören-v
unseren	PRO.Poss.Attr.Dat.Pl.Masc	unsre-p
Mitmenschen	N.Reg.Dat.Pl.Masc	Mitmensch-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
,	SYM.Pun.Comma	,-x
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
folgen	VINF.Full	folgen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
niemals	ADV	niemals-a
so	ADV	so-a
verzweifelt	ADJD.Pos	verzweifelt-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
derartigen	ADJA.Pos.Acc.Pl.Fem	derartig-j
Forderungen	N.Reg.Acc.Pl.Fem	Forderung-n
nachgeben	VINF.Full	nachgeben-v
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Vergessen	VFIN.Full.3.Pl.Pres.Ind	vergessen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
<g/>
:	SYM.Pun.Colon	:-x
Millionen	N.Reg.Nom.Pl.Fem	Million-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Verteidigung	N.Reg.Acc.Sg.Fem	Verteidigung-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Cent	N.Reg.Acc.Sg.Masc	Cent-n
für	APPR	für-i
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
von	APPR	von-i
irgendetwas	PRO.Indef.Subst.*.*.Neut	irgendetwas-p
leben	VINF.Full	leben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Kurzfristig	ADJD.Pos	kurzfristig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
wahr	ADJD.Pos	wahr-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
jedoch	ADV	jedoch-a
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
denen	PRO.Rel.Subst.Dat.Pl.Fem	die-p
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
Ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Lebensunterhalt	N.Reg.Acc.Sg.Masc	Lebensunterhalt-n
verdienen	VINF.Full	verdienen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
den	ART.Def.Acc.Sg.Masc	die-x
Verkauf	N.Reg.Acc.Sg.Masc	Verkauf-n
von	APPR	von-i
Programmrechten	N.Reg.Dat.Pl.Neut	Programmrecht-n
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Weg	N.Reg.Nom.Sg.Masc	Weg-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
jetzt	ADV	jetzt-a
üblich	ADJD.Pos	üblich-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
und	CONJ.Coord	und-c
Geschäftsleuten	N.Reg.Dat.Pl.*	Geschäftsleute-n
das	ART.Def.Nom.Sg.Neut	die-x
meiste	ADJA.Pos.Nom.Sg.Neut	meist-j
Geld	N.Reg.Nom.Sg.Neut	Geld-n
einbringt	VFIN.Full.3.Sg.Pres.Ind	einbringen-v
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
der	ART.Def.Nom.Sg.Masc	die-x
einzige	ADJA.Pos.Nom.Sg.Masc	einzig-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
seinen	PRO.Poss.Attr.Acc.Sg.Masc	seine-p
Lebensunterhalt	N.Reg.Acc.Sg.Masc	Lebensunterhalt-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
leicht	ADJD.Pos	leicht-j
<g/>
,	SYM.Pun.Comma	,-x
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Wege	N.Reg.Acc.Pl.Masc	Weg-n
zu	PART.Zu	zu-x
finden	VINF.Full	finden-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sie	PRO.Pers.Subst.3.Acc.*.*	sie-p
finden	VINF.Full	finden-v
möchte	VFIN.Mod.3.Sg.Past.Subj	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Hier	ADV	hier-a
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
einige	PRO.Indef.Attr.Nom.Pl.Neut	einige-p
Beispiele	N.Reg.Nom.Pl.Neut	Beispiel-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Rechnerhersteller	N.Reg.Nom.Sg.Masc	Rechnerhersteller-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
neuen	ADJA.Pos.Acc.Sg.Masc	neu-j
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
einführt	VFIN.Full.3.Sg.Pres.Ind	einführen-v
<g/>
,	SYM.Pun.Comma	,-x
zahlt	VFIN.Full.3.Sg.Pres.Ind	zahlen-v
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Portierung	N.Reg.Acc.Sg.Fem	Portierung-n
des	ART.Def.Gen.Sg.Neut	die-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
neue	ADJA.Pos.Acc.Sg.Fem	neu-j
Hardware	N.Reg.Acc.Sg.Fem	Hardware-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
auch	ADV	auch-a
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Schulung	N.Reg.Dat.Sg.Fem	Schulung-n
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Dat.Sg.Fem	die-x
Benutzerhilfe	N.Reg.Dat.Sg.Fem	Benutzerhilfe-n
und	CONJ.Coord	und-c
der	ART.Def.Dat.Sg.Fem	die-x
Wartung	N.Reg.Dat.Sg.Fem	Wartung-n
beschäftigt	VPP.Full.Psp	beschäftigen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
mit	APPR	mit-i
neuen	ADJA.Pos.Dat.Pl.Fem	neu-j
Ideen	N.Reg.Dat.Pl.Fem	Idee-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
Programme	N.Reg.Acc.Pl.Neut	Programm-n
als	APPR	als-i
Freeware	N.Reg.Acc.Sg.Fem	Freeware-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
9	CARD	9-m
<g/>
)	SYM.Paren.Right	)-x
verbreiten	VFIN.Full.3.Pl.Pres.Ind	verbreiten-v
<g/>
,	SYM.Pun.Comma	,-x
zufriedene	ADJA.Pos.Nom.Pl.Masc	zufrieden-j
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
um	APPR	um-i
Spenden	N.Reg.Acc.Pl.Fem	Spende-n
bitten	VINF.Full	bitten-v
oder	CONJ.Coord	oder-c
Dienstleistungen	N.Reg.Acc.Pl.Fem	Dienstleistung-n
rentabel	ADJD.Pos	rentabel-j
anbieten	VINF.Full	anbieten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
bin	VFIN.Aux.1.Sg.Pres.Ind	sein-v
einigen	PRO.Indef.Attr.Dat.Pl.Fem	einige-p
Personen	N.Reg.Dat.Pl.Fem	Person-n
begegnet	VPP.Full.Psp	begegnen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
bereits	ADV	bereits-a
erfolgreich	ADJD.Pos	erfolgreich-j
auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
arbeiten	VINF.Full	arbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
mit	APPR	mit-i
ähnlichen	ADJA.Pos.Dat.Pl.Neut	ähnlich-j
Bedürfnissen	N.Reg.Dat.Pl.Neut	Bedürfnis-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
Benutzergruppen	N.Reg.Acc.Pl.Fem	Benutzergruppe-n
bilden	VINF.Full	bilden-v
und	CONJ.Coord	und-c
Beiträge	N.Reg.Acc.Pl.Masc	Beitrag-n
zahlen	VINF.Full	zahlen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Gruppe	N.Reg.Nom.Sg.Fem	Gruppe-n
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
dann	ADV	dann-a
Programmierfirmen	N.Reg.Acc.Pl.Fem	Programmierfirma-n
damit	PROADV.Dem	damit-x
beauftragen	VINF.Full	beauftragen-v
<g/>
,	SYM.Pun.Comma	,-x
Programme	N.Reg.Acc.Pl.Neut	Programm-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
die	ART.Def.Acc.Pl.Neut	die-x
Mitglieder	N.Reg.Acc.Pl.Neut	Mitglied-n
verwenden	VINF.Full	verwenden-v
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Alle	PRO.Indef.Attr.Nom.Pl.Fem	alle-p
Arten	N.Reg.Nom.Pl.Fem	Art-n
der	ART.Def.Gen.Sg.Fem	die-x
Entwicklung	N.Reg.Gen.Sg.Fem	Entwicklung-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Softwaresteuer	N.Reg.Dat.Sg.Fem	Softwaresteuer-n
finanziert	VPP.Full.Psp	finanzieren-v
werden	VINF.Aux	werden-v
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
Angenommen	ADJD.Pos	angenommen-j
<g/>
,	SYM.Pun.Comma	,-x
jeder	PRO.Indef.Subst.Nom.Sg.Masc	jede-p
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
kauft	VFIN.Full.3.Sg.Pres.Ind	kaufen-v
<g/>
,	SYM.Pun.Comma	,-x
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
x	ADJD.Pos	x-j
Prozent	N.Reg.*.*.Neut	Prozent-n
des	ART.Def.Gen.Sg.Masc	die-x
Preises	N.Reg.Gen.Sg.Masc	Preis-n
als	APPR	als-i
Softwaresteuer	N.Reg.Acc.Sg.Fem	Softwaresteuer-n
entrichten	VINF.Full	entrichten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Regierung	N.Reg.Nom.Sg.Fem	Regierung-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
einer	ART.Indef.Dat.Sg.Fem	eine-x
Agentur	N.Reg.Dat.Sg.Fem	Agentur-n
wie	CONJ.Comp	wie-c
der	ART.Def.Dat.Sg.Fem	die-x
National	N.Name.*.*.*	National-n
Science	N.Name.*.*.*	Science-n
Foundation	N.Name.*.*.*	Foundation-n
(	SYM.Paren.Left	(-x
<g/>
NSF	N.Name.Nom.Sg.*	NSF-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Softwareentwicklung	N.Reg.Acc.Sg.Fem	Softwareentwicklung-n
einzusetzen	VINF.Full.zu	einsetzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
aber	ADV	aber-a
der	ART.Def.Nom.Sg.Masc	die-x
Rechnerkäufer	N.Reg.Nom.Sg.Masc	Rechnerkäufer-n
selbst	ADV	selbst-a
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Softwareentwicklung	N.Reg.Acc.Sg.Fem	Softwareentwicklung-n
spendet	VFIN.Full.3.Sg.Pres.Ind	spenden-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
Spende	N.Reg.Nom.Sg.Fem	Spende-n
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Softwaresteuer	N.Reg.Dat.Sg.Fem	Softwaresteuer-n
verrechnet	VPP.Full.Psp	verrechnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
Projekt	N.Reg.Acc.Sg.Neut	Projekt-n
seiner	PRO.Poss.Attr.Gen.Sg.Fem	seine-p
Wahl	N.Reg.Gen.Sg.Fem	Wahl-n
spenden	VFIN.Full.3.Pl.Pres.Ind	spenden-v
-	SYM.Pun.Hyph	--x
häufig	ADJD.Pos	häufig-j
gewählt	VPP.Full.Psp	wählen-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Hoffnung	N.Reg.Dat.Sg.Fem	Hoffnung-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Neut	die-x
fertigen	ADJA.Pos.Acc.Pl.Neut	fertig-j
Ergebnisse	N.Reg.Acc.Pl.Neut	Ergebnis-n
verwenden	VINF.Full	verwenden-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gutschrift	N.Reg.Acc.Sg.Fem	Gutschrift-n
für	APPR	für-i
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
Spendenbeitrag	N.Reg.Acc.Sg.Masc	Spendenbeitrag-n
bis	APPR	bis-i
zur	APPRART.Dat.Sg.Fem	zu-i
gesamten	ADJA.Pos.Dat.Sg.Fem	gesamt-j
Steuerschuld	N.Reg.Dat.Sg.Fem	Steuerschuld-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
zu	PART.Zu	zu-x
zahlen	VINF.Full	zahlen-v
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
anrechnen	VINF.Full	anrechnen-v
lassen	VINF.Full	lassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
gesamte	ADJA.Pos.Nom.Sg.Masc	gesamt-j
Steuersatz	N.Reg.Nom.Sg.Masc	Steuersatz-n
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
durch	APPR	durch-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Votum	N.Reg.Acc.Sg.Neut	Votum-n
der	ART.Def.Gen.Pl.Masc	die-x
Steuerzahler	N.Reg.Gen.Pl.Masc	Steuerzahler-n
beschlossen	VPP.Full.Psp	beschließen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
entsprechend	APPR	entsprechend-i
dem	ART.Def.Dat.Sg.Masc	die-x
auf	APPR	auf-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
besteuernden	ADJA.Pos.Dat.Sg.Masc	besteuernd-j
Betrag	N.Reg.Dat.Sg.Masc	Betrag-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
Konsequenzen	N.Reg.Nom.Pl.Fem	Konsequenz-n
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
rechnernutzende	ADJA.Pos.Nom.Sg.Fem	rechnernutzend-j
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
unterstützt	VFIN.Full.3.Sg.Pres.Ind	unterstützen-v
die	ART.Def.Acc.Sg.Fem	die-x
Softwareentwicklung	N.Reg.Acc.Sg.Fem	Softwareentwicklung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
entscheidet	VFIN.Full.3.Sg.Pres.Ind	entscheiden-v
<g/>
,	SYM.Pun.Comma	,-x
welches	PRO.Inter.Attr.Nom.Sg.Neut	welche-p
Niveau	N.Reg.Nom.Sg.Neut	Niveau-n
der	ART.Def.Gen.Sg.Fem	die-x
Unterstützung	N.Reg.Gen.Sg.Fem	Unterstützung-n
erforderlich	ADJD.Pos	erforderlich-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
<g/>
,	SYM.Pun.Comma	,-x
denen	PRO.Rel.Subst.Dat.Pl.Masc	die-p
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
darauf	PROADV.Dem	darauf-x
ankommt	VFIN.Full.3.Sg.Pres.Ind	ankommen-v
<g/>
,	SYM.Pun.Comma	,-x
an	APPR	an-i
welchen	PRO.Inter.Attr.Dat.Pl.Neut	welche-p
Projekten	N.Reg.Dat.Pl.Neut	Projekt-n
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
beteiligen	VFIN.Full.3.Pl.Pres.Ind	beteiligen-v
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
selbst	ADV	selbst-a
entscheiden	VINF.Full	entscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
lange	ADJA.Pos.Acc.Sg.Fem	lang-j
Sicht	N.Reg.Acc.Sg.Fem	Sicht-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
freie	ADJA.Pos.Nom.Pl.Neut	frei-j
Programme	N.Reg.Nom.Pl.Neut	Programm-n
ein	ART.Indef.Nom.Sg.Masc	eine-x
Schritt	N.Reg.Nom.Sg.Masc	Schritt-n
in	APPR	in-i
Richtung	N.Reg.Dat.Sg.Fem	Richtung-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Welt	N.Reg.Gen.Sg.Fem	Welt-n
ohne	APPR	ohne-i
Mangel	N.Reg.Acc.Sg.Masc	Mangel-n
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
hart	ADJD.Pos	hart-j
arbeiten	VINF.Full	arbeiten-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
den	ART.Def.Acc.Sg.Masc	die-x
Lebensunterhalt	N.Reg.Acc.Sg.Masc	Lebensunterhalt-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
frei	ADJD.Pos	frei-j
sein	VINF.Aux	sein-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
selbst	ADV	selbst-a
Aktivitäten	N.Reg.Acc.Pl.Fem	Aktivität-n
zu	PART.Zu	zu-x
widmen	VINF.Full	widmen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Freude	N.Reg.Acc.Sg.Fem	Freude-n
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	CONJ.Comp	wie-c
der	ART.Def.Dat.Sg.Fem	die-x
Programmierung	N.Reg.Dat.Sg.Fem	Programmierung-n
<g/>
,	SYM.Pun.Comma	,-x
nach	APPR	nach-i
den	ART.Def.Dat.Pl.Fem	die-x
geforderten	ADJA.Pos.Dat.Pl.Fem	gefordert-j
zehn	CARD	zehn-m
Wochenstunden	N.Reg.Dat.Pl.Fem	Wochenstunde-n
notwendiger	ADJA.Pos.Gen.Pl.Fem	notwendig-j
Aufgaben	N.Reg.Gen.Pl.Fem	Aufgabe-n
<g/>
,	SYM.Pun.Comma	,-x
wie	CONJ.Comp	wie-c
beispielsweise	ADV	beispielsweise-a
Verwaltung	N.Reg.Nom.Sg.Fem	Verwaltung-n
<g/>
,	SYM.Pun.Comma	,-x
Familienberatung	N.Reg.Nom.Sg.Fem	Familienberatung-n
<g/>
,	SYM.Pun.Comma	,-x
Roboterreparatur	N.Reg.Nom.Sg.Fem	Roboterreparatur-n
und	CONJ.Coord	und-c
Asteroidenprospektierung	N.Reg.Nom.Sg.Fem	Asteroidenprospektierung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Notwendigkeit	N.Reg.Acc.Sg.Fem	Notwendigkeit-n
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
von	APPR	von-i
Programmierung	N.Reg.Dat.Sg.Fem	Programmierung-n
zu	PART.Zu	zu-x
leben	VINF.Full	leben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
bereits	ADV	bereits-a
die	ART.Def.Acc.Sg.Fem	die-x
Menge	N.Reg.Acc.Sg.Fem	Menge-n
an	APPR	an-i
Arbeit	N.Reg.Dat.Sg.Fem	Arbeit-n
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Rel.Subst.Nom.Sg.Fem	welche-p
die	ART.Def.Acc.Sg.Fem	die-x
Gesellschaft	N.Reg.Acc.Sg.Fem	Gesellschaft-n
für	APPR	für-i
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Produktivität	N.Reg.Acc.Sg.Fem	Produktivität-n
aufbringen	VINF.Full	aufbringen-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
gewaltig	ADJD.Pos	gewaltig-j
reduzieren	VINF.Full	reduzieren-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nur	ADV	nur-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
kleiner	ADJA.Pos.Nom.Sg.Masc	klein-j
Teil	N.Reg.Nom.Sg.Masc	Teil-n
davon	PROADV.Dem	davon-x
übertrug	VFIN.Full.3.Sg.Past.Ind	übertragen-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
in	APPR	in-i
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Freizeit	N.Reg.Dat.Sg.Fem	Freizeit-n
für	APPR	für-i
Arbeitnehmer	N.Reg.Acc.Sg.Masc	Arbeitnehmer-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
jede	PRO.Indef.Attr.Nom.Sg.Fem	jede-p
produktive	ADJA.Pos.Nom.Sg.Fem	produktiv-j
Aktivität	N.Reg.Nom.Sg.Fem	Aktivität-n
zwangsläufig	ADJD.Pos	zwangsläufig-j
von	APPR	von-i
viel	PRO.Indef.Attr.*.*.*	viel-p
unproduktiver	ADJA.Pos.Dat.Sg.Fem	unproduktiv-j
Aktivität	N.Reg.Dat.Sg.Fem	Aktivität-n
begleitet	VPP.Full.Psp	begleiten-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
Hauptursachen	N.Reg.Nom.Pl.Fem	Hauptursache-n
dafür	PROADV.Dem	dafür-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Bürokratie	N.Reg.Nom.Sg.Fem	Bürokratie-n
und	CONJ.Coord	und-c
gegenseitige	ADJA.Pos.Nom.Pl.Masc	gegenseitig-j
Kämpfe	N.Reg.Nom.Pl.Masc	Kampf-n
gegen	APPR	gegen-i
die	ART.Def.Acc.Sg.Fem	die-x
Konkurrenz	N.Reg.Acc.Sg.Fem	Konkurrenz-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
diese	PRO.Dem.Attr.Acc.Pl.Masc	diese-p
Auswüchse	N.Reg.Acc.Pl.Masc	Auswuchs-n
auf	APPR	auf-i
dem	ART.Def.Dat.Sg.Neut	die-x
Gebiet	N.Reg.Dat.Sg.Neut	Gebiet-n
der	ART.Def.Gen.Sg.Fem	die-x
Softwareentwicklung	N.Reg.Gen.Sg.Fem	Softwareentwicklung-n
stark	ADJD.Pos	stark-j
reduzieren	VINF.Full	reduzieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
so	ADV	so-a
handeln	VINF.Full	handeln-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
technische	ADJA.Pos.Acc.Pl.Masc	technisch-j
Fortschritte	N.Reg.Acc.Pl.Masc	Fortschritt-n
in	APPR	in-i
Sachen	N.Reg.Dat.Pl.Fem	Sache-n
Produktivität	N.Reg.Acc.Sg.Fem	Produktivität-n
zu	PART.Zu	zu-x
erzielen	VINF.Full	erzielen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
in	APPR	in-i
weniger	PRO.Indef.Attr.Dat.Sg.Fem	wenige-p
Arbeit	N.Reg.Dat.Sg.Fem	Arbeit-n
für	APPR	für-i
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
alle	PRO.Indef.Subst.Acc.Pl.*	alle-p
äußern	VINF.Full	äußern-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Fußnoten	N.Reg.Nom.Pl.Fem	Fußnote-n
</s>
</align>
<align>
<s>
↗	CARD	[number]-m
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Wortwahl	N.Reg.Nom.Sg.Fem	Wortwahl-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ein	ART.Indef.*.*.*	eine-x
wenig	PRO.Indef.Attr.*.*.*	wenig-p
sorglos	ADJD.Pos	sorglos-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Absicht	N.Reg.Nom.Sg.Fem	Absicht-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Erlaubnis	N.Reg.Acc.Sg.Fem	Erlaubnis-n
zahlen	VINF.Full	zahlen-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieses	PRO.Dem.Subst.Nom.Sg.Neut	diese-p
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
jedoch	ADV	jedoch-a
nicht	PART.Neg	nicht-x
aus	APPR	aus-i
der	ART.Def.Dat.Sg.Fem	die-x
Formulierung	N.Reg.Dat.Sg.Fem	Formulierung-n
hervor	PART.Verb	hervor-x
und	CONJ.Coord	und-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
interpretiert	VFIN.Full.3.Sg.Pres.Ind	interpretieren-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
häufig	ADJD.Pos	häufig-j
mit	APPR	mit-i
den	ART.Def.Dat.Pl.Neut	die-x
Worten	N.Reg.Dat.Pl.Neut	Wort-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Kopien	N.Reg.Nom.Pl.Fem	Kopie-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
stets	ADV	stets-a
ohne	APPR	ohne-i
oder	CONJ.Coord	oder-c
höchstens	ADV	höchstens-a
gegen	APPR	gegen-i
geringes	ADJA.Pos.Acc.Sg.Neut	gering-j
Entgelt	N.Reg.Acc.Sg.Neut	Entgelt-n
verbreitet	VPP.Full.Psp	verbreiten-v
werden	VINF.Aux	werden-v
sollen	VFIN.Mod.3.Pl.Pres.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
nie	ADV	nie-a
die	ART.Def.Nom.Sg.Fem	die-x
Absicht	N.Reg.Nom.Sg.Fem	Absicht-n
<g/>
;	SYM.Pun.Sent	;-x
weiter	ADV	weiter-a
unten	ADV	unten-a
erwähnt	VFIN.Full.3.Sg.Pres.Ind	erwähnen-v
das	ART.Def.Nom.Sg.Neut	die-x
Manifest	N.Reg.Nom.Sg.Neut	Manifest-n
die	ART.Def.Acc.Sg.Fem	die-x
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
der	ART.Def.Gen.Sg.Fem	die-x
Erbringung	N.Reg.Gen.Sg.Fem	Erbringung-n
von	APPR	von-i
Vertriebsdienstleistungen	N.Reg.Dat.Pl.Fem	Vertriebsdienstleistung-n
für	APPR	für-i
Unternehmen	N.Reg.Acc.Pl.Neut	Unternehmen-n
zur	APPRART.Dat.Sg.Fem	zu-i
Gewinnerzielung	N.Reg.Dat.Sg.Fem	Gewinnerzielung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Anschließend	ADJD.Pos	anschließend-j
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
gelernt	VPP.Full.Psp	lernen-v
<g/>
,	SYM.Pun.Comma	,-x
sorgfältig	ADJD.Pos	sorgfältig-j
zwischen	ADV	zwischen-a
frei	ADJD.Pos	frei-j
im	APPRART.Dat.Sg.Masc	in-i
Sinne	N.Reg.Dat.Sg.Masc	Sinn-n
von	APPR	von-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
frei	ADJD.Pos	frei-j
im	APPRART.Dat.Sg.Masc	in-i
Sinne	N.Reg.Dat.Sg.Masc	Sinn-n
von	APPR	von-i
Preis	N.Reg.Dat.Sg.Masc	Preis-n
zu	PART.Zu	zu-x
unterscheiden	VINF.Full	unterscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
deren	PRO.Rel.Attr.Gen.Sg.Fem	die-p
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
weiterzugeben	VINF.Full.zu	weitergeben-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
ändern	VINF.Full	ändern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
kostenlos	ADJD.Pos	kostenlos-j
erhalten	VPP.Full.Psp	erhalten-v
<g/>
,	SYM.Pun.Comma	,-x
andere	PRO.Indef.Subst.Nom.Pl.*	andere-p
dafür	PROADV.Dem	dafür-x
bezahlen	VFIN.Full.3.Pl.Pres.Ind	bezahlen-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
wenn	CONJ.SubFin	wenn-c
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Gelder	N.Reg.Nom.Pl.Neut	Geld-n
dazu	PROADV.Dem	dazu-x
beitragen	VFIN.Full.3.Pl.Pres.Ind	beitragen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Software	N.Reg.Acc.Sg.Fem	Software-n
weiter	ADV	weiter-a
zu	PART.Zu	zu-x
verbessern	VINF.Full	verbessern-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
so	ADV	so-a
besser	ADJD.Comp	gut-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wichtig	ADJD.Pos	wichtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
jedermann	PRO.Indef.Subst.Nom.Sg.Masc	jedermann-p
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Kopie	N.Reg.Acc.Sg.Fem	Kopie-n
besitzt	VFIN.Full.3.Sg.Pres.Ind	besitzen-v
<g/>
,	SYM.Pun.Comma	,-x
auch	ADV	auch-a
die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
beim	APPRART.Dat.Sg.Masc	bei-i
Gebrauch	N.Reg.Dat.Sg.Masc	Gebrauch-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Kopie	N.Reg.Gen.Sg.Fem	Kopie-n
mit	APPR	mit-i
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
zu	PART.Zu	zu-x
kooperieren	VINF.Full	kooperieren-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	FM	↗-x
Der	ART.Def.Nom.Sg.Masc	die-x
Ausdruck	N.Reg.Nom.Sg.Masc	Ausdruck-n
verschenken	VFIN.Full.3.Pl.Pres.Ind	verschenken-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
weiteres	ADJA.Comp.Nom.Sg.Neut	weit-j
Indiz	N.Reg.Nom.Sg.Neut	Indiz-n
dafür	PROADV.Dem	dafür-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
eindeutig	ADJD.Pos	eindeutig-j
die	ART.Def.Acc.Sg.Fem	die-x
Frage	N.Reg.Acc.Sg.Fem	Frage-n
von	APPR	von-i
Preis	N.Reg.Dat.Sg.Masc	Preis-n
und	CONJ.Coord	und-c
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
getrennt	VPP.Full.Psp	trennen-v
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
empfehlen	VFIN.Full.1.Pl.Pres.Ind	empfehlen-v
nun	ADV	nun-a
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Ausdruck	N.Reg.Nom.Sg.Masc	Ausdruck-n
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
um	APPR	um-i
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
Zu	PART.Deg	zu-x
vermeidende	ADJA.Pos.Nom.Pl.Neut	vermeidend-j
Wörter	N.Reg.Nom.Pl.Neut	Wort-n
für	APPR	für-i
weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Informationen	N.Reg.Acc.Pl.Fem	Information-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	CARD	[number]-m
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
weitere	ADJA.Comp.Nom.Sg.Fem	weit-j
Stelle	N.Reg.Nom.Sg.Fem	Stelle-n
<g/>
,	SYM.Pun.Comma	,-x
an	APPR	an-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
versäumte	VFIN.Full.1.Sg.Past.Ind	versäumen-v
<g/>
,	SYM.Pun.Comma	,-x
sorgfältig	ADJD.Pos	sorgfältig-j
zwischen	APPR	zwischen-i
den	ART.Def.Dat.Pl.Fem	die-x
beiden	PRO.Indef.Attr.Dat.Pl.Fem	beide-p
verschiedenen	ADJA.Pos.Dat.Pl.Fem	verschieden-j
Bedeutungen	N.Reg.Dat.Pl.Fem	Bedeutung-n
von	APPR	von-i
frei	ADJD.Pos	frei-j
zu	PART.Zu	zu-x
unterscheiden	VINF.Full	unterscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Aussage	N.Reg.Nom.Sg.Fem	Aussage-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
so	ADV	so-a
nicht	PART.Neg	nicht-x
falsch	ADJD.Pos	falsch-j
-	SYM.Pun.Hyph	--x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
von	APPR	von-i
GNU-Software	N.Name.Dat.Sg.*	GNU-Software-n
kostenlos	ADJD.Pos	kostenlos-j
von	APPR	von-i
Freunden	N.Reg.Dat.Pl.Masc	Freund-n
oder	CONJ.Coord	oder-c
über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
Internet	N.Reg.Acc.Sg.Neut	Internet-n
erhalten	VPP.Full.Psp	erhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
lässt	VFIN.Full.3.Sg.Pres.Ind	lassen-v
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Idee	N.Reg.Acc.Sg.Fem	Idee-n
schließen	VINF.Full	schließen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	N.Name.Nom.Sg.*	↗-n
Inzwischen	ADV	inzwischen-a
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mehrere	PRO.Indef.Attr.Acc.Pl.Neut	mehrere-p
solcher	PRO.Indef.Attr.Gen.Pl.Neut	solche-p
Unternehmen	N.Reg.Gen.Pl.Neut	Unternehmen-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	CARD	[number]-m
Obwohl	CONJ.SubFin	obwohl-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
um	APPR	um-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
wohltätige	ADJA.Pos.Acc.Sg.Fem	wohltätig-j
Einrichtung	N.Reg.Acc.Sg.Fem	Einrichtung-n
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
um	APPR	um-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Unternehmen	N.Reg.Acc.Sg.Neut	Unternehmen-n
handelt	VFIN.Full.3.Sg.Pres.Ind	handeln-v
<g/>
,	SYM.Pun.Comma	,-x
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
die	ART.Def.Nom.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Nom.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
seit	APPR	seit-i
10	CARD	10-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
den	ART.Def.Acc.Sg.Masc	die-x
grössten	ADJA.Sup.Acc.Sg.Masc	groß-j
Teil	N.Reg.Acc.Sg.Masc	Teil-n
ihres	PRO.Poss.Attr.Gen.Sg.Neut	ihre-p
Kapitals	N.Reg.Gen.Sg.Neut	Kapital-n
aus	APPR	aus-i
der	ART.Def.Dat.Sg.Fem	die-x
Vertriebsdienstleistung	N.Reg.Dat.Sg.Fem	Vertriebsdienstleistung-n
eingenommen	VPP.Full.Psp	einnehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
Artikel	N.Reg.Acc.Sg.Masc	Artikel-n
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
FSF	N.Name.Dat.Sg.Fem	FSF-n
bestellen	VINF.Full	bestellen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
zu	PART.Zu	zu-x
unterstützen	VINF.Full	unterstützen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	CARD	[number]-m
Eine	ART.Indef.Nom.Sg.Fem	eine-x
Gruppe	N.Reg.Nom.Sg.Fem	Gruppe-n
von	APPR	von-i
Rechnerfirmen	N.Reg.Dat.Pl.Fem	Rechnerfirma-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
um	APPR	um-i
1991	CARD	[number]-m
Kapital	N.Reg.Acc.Sg.Neut	Kapital-n
angesammelt	VPP.Full.Psp	ansammeln-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
Wartung	N.Reg.Acc.Sg.Fem	Wartung-n
des	ART.Def.Gen.Sg.Masc	die-x
GNU	N.Name.*.*.*	GNU-n
C-Compilers	N.Reg.Gen.Sg.Masc	C-Compiler-n
zu	PART.Zu	zu-x
unterstützen	VINF.Full	unterstützen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	CARD	[number]-m
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
glaube	VFIN.Full.1.Sg.Pres.Ind	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
irrte	VFIN.Full.1.Sg.Past.Ind	irren-v
mich	PRO.Refl.Subst.1.Acc.Sg.*	sie-p
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
der	ART.Def.Nom.Sg.Masc	die-x
häufigste	ADJA.Sup.Nom.Sg.Masc	häufig-j
Grund	N.Reg.Nom.Sg.Masc	Grund-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
mit	APPR	mit-i
Software	N.Reg.Dat.Sg.Fem	Software-n
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
scheint	VFIN.Full.3.Sg.Pres.Ind	scheinen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
tatsächlich	ADJD.Pos	tatsächlich-j
das	ART.Def.Nom.Sg.Neut	die-x
häufigste	ADJA.Sup.Nom.Sg.Neut	häufig-j
Geschäftsmodell	N.Reg.Nom.Sg.Neut	Geschäftsmodell-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
und	CONJ.Coord	und-c
die	ART.Def.Nom.Sg.Fem	die-x
Entwicklung	N.Reg.Nom.Sg.Fem	Entwicklung-n
von	APPR	von-i
benutzerdefinierter	ADJA.Pos.Dat.Sg.Fem	benutzerdefiniert-j
Software	N.Reg.Dat.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bietet	VFIN.Full.3.Sg.Pres.Ind	bieten-v
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Sg.Fem	die-x
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
Mieten	N.Reg.Nom.Pl.Fem	Miete-n
einzunehmen	VINF.Full.zu	einnehmen-v
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
das	ART.Def.Nom.Sg.Neut	die-x
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
weiterhin	ADV	weiterhin-a
die	ART.Def.Acc.Sg.Fem	die-x
eigentliche	ADJA.Pos.Acc.Sg.Fem	eigentlich-j
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
erledigen	VINF.Full	erledigen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ständig	ADJD.Pos	ständig-j
Einnahmen	N.Reg.Acc.Pl.Fem	Einnahme-n
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
benutzerdefinierte	ADJA.Pos.Nom.Sg.Neut	benutzerdefiniert-j
Softwaregeschäft	N.Reg.Nom.Sg.Neut	Softwaregeschäft-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
weiterhin	ADV	weiterhin-a
<g/>
,	SYM.Pun.Comma	,-x
mehr	ADV	mehr-a
oder	CONJ.Coord	oder-c
weniger	ADV	weniger-a
unverändert	ADJD.Pos	unverändert-j
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Freie-Software-Welt	N.Reg.Dat.Sg.Fem	Freie-Software-Welt-n
der	ART.Def.Gen.Sg.Fem	die-x
freien	ADJA.Pos.Gen.Sg.Fem	frei-j
Software	N.Reg.Gen.Sg.Fem	Software-n
existieren	VINF.Full	existieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Deshalb	PROADV.Dem	deshalb-x
erwarte	VFIN.Full.1.Sg.Pres.Ind	erwarten-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
bezahlten	ADJA.Pos.Nom.Pl.Masc	bezahlt-j
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
weniger	ADV	weniger-a
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Welt	N.Reg.Dat.Sg.Fem	Welt-n
der	ART.Def.Gen.Sg.Fem	die-x
freien	ADJA.Pos.Gen.Sg.Fem	frei-j
Software	N.Reg.Gen.Sg.Fem	Software-n
verdienen	VINF.Full	verdienen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	N.Reg.Nom.Sg.Masc	↗-n
In	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
1980ern	N.Reg.Dat.Pl.Masc	1980ern-n
hatte	VFIN.Aux.1.Sg.Past.Ind	haben-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
erkannt	VPP.Full.Psp	erkennen-v
wie	PROADV.Inter	wie-x
verwirrend	ADJD.Pos	verwirrend-j
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
von	APPR	von-i
dem	ART.Def.Dat.Sg.Neut	die-x
Problem	N.Reg.Dat.Sg.Neut	Problem-n
bezüglich	APPR	bezüglich-i
"	SYM.Quot.Left	"-x
<g/>
Geistiges	ADJA.Pos.Acc.Sg.Neut	geistig-j
Eigentum	N.Reg.Acc.Sg.Neut	Eigentum-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
sprechen	VINF.Full	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
offensichtlich	ADJD.Pos	offensichtlich-j
voreingenommen	ADJD.Pos	voreingenommen-j
<g/>
;	SYM.Pun.Sent	;-x
subtiler	ADJD.Comp	subtil-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Tatsache	N.Reg.Nom.Sg.Fem	Tatsache-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
verschiedene	ADJA.Pos.Acc.Pl.Neut	verschieden-j
unterschiedliche	ADJA.Pos.Acc.Pl.Neut	unterschiedlich-j
Gesetze	N.Reg.Acc.Pl.Neut	Gesetz-n
in	APPR	in-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Topf	N.Reg.Acc.Sg.Masc	Topf-n
wirft	VFIN.Full.3.Sg.Pres.Ind	werfen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Neut	die-x
sehr	ADV	sehr-a
unterschiedliche	ADJA.Pos.Acc.Pl.Neut	unterschiedlich-j
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
aufwerfen	VFIN.Full.3.Pl.Pres.Ind	aufwerfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heutzutage	ADV	heutzutage-a
halte	VFIN.Full.1.Sg.Pres.Ind	halten-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
dazu	PROADV.Dem	dazu-x
an	PART.Verb	an-x
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
"	SYM.Quot.Left	"-x
<g/>
Geistiges	ADJA.Pos.Acc.Sg.Neut	geistig-j
Eigentum	N.Reg.Acc.Sg.Neut	Eigentum-n
<g/>
"	SYM.Quot.Left	"-x
völlig	ADJD.Pos	völlig-j
abzulehnen	VINF.Full.zu	ablehnen-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
andere	PRO.Indef.Subst.Nom.Sg.Neut	andere-p
nicht	PART.Neg	nicht-x
zu	APPR	zu-i
der	ART.Def.Dat.Sg.Fem	die-x
Annahme	N.Reg.Dat.Sg.Fem	Annahme-n
führt	VFIN.Full.3.Sg.Pres.Ind	führen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Gesetze	N.Reg.Nom.Pl.Neut	Gesetz-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
schlüssiges	ADJA.Pos.Acc.Sg.Neut	schlüssig-j
Problem	N.Reg.Acc.Sg.Neut	Problem-n
lösen	VINF.Full	lösen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Um	CONJ.SubInf	um-c
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
eindeutig	ADJD.Pos	eindeutig-j
zu	PART.Zu	zu-x
trennen	VINF.Full	trennen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
Patente	N.Reg.Nom.Pl.Neut	Patent-n
<g/>
,	SYM.Pun.Comma	,-x
Urheberrechte	N.Reg.Nom.Pl.Neut	Urheberrecht-n
und	CONJ.Coord	und-c
Warenzeichen	N.Reg.Nom.Pl.Neut	Warenzeichen-n
gesondert	ADJD.Pos	gesondert-j
erörtert	VPP.Full.Psp	erörtern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
"	SYM.Quot.Left	"-x
<g/>
Sagten	VFIN.Full.3.Pl.Past.Ind	sagen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
'	SYM.Quot.Right	'-x
<g/>
Geistiges	ADJA.Pos.Acc.Sg.Neut	geistig-j
Eigentum	N.Reg.Acc.Sg.Neut	Eigentum-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
verführerische	ADJA.Pos.Nom.Sg.Fem	verführerisch-j
Illusion	N.Reg.Nom.Sg.Fem	Illusion-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
Verwechslungsgefahr	N.Reg.Nom.Sg.Fem	Verwechslungsgefahr-n
und	CONJ.Coord	und-c
Voreingenommenheit	N.Reg.Nom.Sg.Fem	Voreingenommenheit-n
verbreitet	VPP.Full.Psp	verbreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
↗	N.Name.*.*.*	↗-n
Anschließend	ADJD.Pos	anschließend-j
lernten	VFIN.Full.1.Pl.Past.Ind	lernen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
zwischen	APPR	zwischen-i
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
und	CONJ.Coord	und-c
Freeware	N.Reg.Acc.Sg.Fem	Freeware-n
zu	PART.Zu	zu-x
unterscheiden	VINF.Full	unterscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
Freeware	N.Reg.Nom.Sg.Fem	Freeware-n
bezeichnet	VFIN.Full.3.Sg.Pres.Ind	bezeichnen-v
Software	N.Reg.Acc.Pl.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Fem	die-p
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
frei	ADJD.Pos	frei-j
weitergegeben	VPP.Full.Psp	weitergeben-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Regel	N.Reg.Dat.Sg.Fem	Regel-n
den	ART.Def.Acc.Sg.Masc	die-x
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
nicht	PART.Neg	nicht-x
frei	ADJD.Pos	frei-j
untersuchen	VINF.Full	untersuchen-v
und	CONJ.Coord	und-c
ändern	VINF.Full	ändern-v
dürfen	VINF.Mod	dürfen-v
<g/>
,	SYM.Pun.Comma	,-x
daher	PROADV.Dem	daher-x
größtenteils	ADV	größtenteils-a
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
Zu	PART.Deg	zu-x
vermeidende	ADJA.Pos.Nom.Pl.Neut	vermeidend-j
Wörter	N.Reg.Nom.Pl.Neut	Wort-n
für	APPR	für-i
weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Informationen	N.Reg.Acc.Pl.Fem	Information-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/philosophy/15-years-of-free-software.html	N.Name	[url]-n
15	CARD	15-m
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
</s>
</align>
<align>
<s>
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
M.	N.Name.Dat.Sg.Masc	M.-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nun	ADV	nun-a
etwas	ADV	etwas-a
mehr	PRO.Indef.Attr.*.*.*	mehr-p
als	CONJ.Comp	als-c
15	CARD	15-m
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
seit	APPR	seit-i
Beginn	N.Reg.Dat.Sg.Masc	Beginn-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Gen.Sg.Fem	Freie-Software-Bewegung-n
und	CONJ.Coord	und-c
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
vergangen	VPP.Full.Psp	vergehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
langen	ADJA.Pos.Acc.Sg.Masc	lang-j
Weg	N.Reg.Acc.Sg.Masc	Weg-n
zurückgelegt	VPP.Full.Psp	zurücklegen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1984	CARD	[number]-m
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
unmöglich	ADJD.Pos	unmöglich-j
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
modernen	ADJA.Pos.Acc.Sg.Masc	modern-j
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
proprietäres	ADJA.Pos.Acc.Sg.Neut	proprietär-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
installieren	VINF.Full	installieren-v
<g/>
,	SYM.Pun.Comma	,-x
welches	PRO.Rel.Subst.Acc.Sg.Neut	welche-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nur	ADV	nur-a
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
beschränkenden	ADJA.Pos.Dat.Sg.Fem	beschränkend-j
Lizenz	N.Reg.Dat.Sg.Fem	Lizenz-n
erhalten	VINF.Full	erhalten-v
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
durfte	VFIN.Mod.3.Sg.Past.Ind	dürfen-v
Software	N.Reg.Acc.Sg.Fem	Software-n
frei	ADJD.Pos	frei-j
mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
Rechnernutzern	N.Reg.Dat.Pl.Masc	Rechnernutzer-n
gemeinsam	ADJD.Pos	gemeinsam-j
nutzen	VINF.Full	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
kaum	ADV	kaum-a
jemand	PRO.Indef.Subst.Nom.Sg.Masc	jemand-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Lage	N.Reg.Dat.Sg.Fem	Lage-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Software	N.Reg.Acc.Sg.Fem	Software-n
den	ART.Def.Dat.Pl.Neut	die-x
eigenen	ADJA.Pos.Dat.Pl.Neut	eigen-j
Bedürfnissen	N.Reg.Dat.Pl.Neut	Bedürfnis-n
anzupassen	VINF.Full.zu	anpassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
Eigentümer	N.Reg.Nom.Pl.Masc	Eigentümer-n
der	ART.Def.Gen.Sg.Fem	die-x
Software	N.Reg.Gen.Sg.Fem	Software-n
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
Mauern	N.Reg.Acc.Pl.Fem	Mauer-n
errichtet	VPP.Full.Psp	errichten-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
voneinander	ADV	voneinander-a
zu	PART.Zu	zu-x
trennen	VINF.Full	trennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
gegründet	VPP.Full.Psp	gründen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
all	PRO.Indef.Attr.*.*.*	all-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
zu	PART.Zu	zu-x
ändern	VINF.Full	ändern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
erste	ADJA.Pos.Nom.Sg.Neut	erst-j
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
<g/>
:	SYM.Pun.Colon	:-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
unixkompatibles	ADJA.Pos.Acc.Sg.Neut	unixkompatibel-j
<g/>
,	SYM.Pun.Comma	,-x
portables	ADJA.Pos.Acc.Sg.Neut	portabl-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
100	CARD	[number]-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
sein	VINF.Aux	sein-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nicht	PART.Neg	nicht-x
95	CARD	95-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
99,5	CARD	[number]-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
100	CARD	[number]-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
–	CARD	[number]-m
damit	PROADV.Dem	damit-x
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
frei	ADJD.Pos	frei-j
sein	VINF.Aux	sein-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
gesamte	ADJA.Pos.Acc.Sg.Neut	gesamt-j
System	N.Reg.Acc.Sg.Neut	System-n
weiterzuvertreiben	VINF.Full.zu	weiterzuvertreiben-v
<g/>
,	SYM.Pun.Comma	,-x
zu	PART.Zu	zu-x
ändern	VINF.Full	ändern-v
und	CONJ.Coord	und-c
daran	PROADV.Dem	daran-x
mitzuarbeiten	VINF.Full.zu	mitarbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
rekursives	ADJA.Pos.Nom.Sg.Neut	rekursiv-j
Akronym	N.Reg.Nom.Sg.Neut	Akronym-n
für	APPR	für-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Nicht	PART.Neg	nicht-x
Unix	FM	Unix-x
'	SYM.Quot.Right	'-x
<g/>
GNU	FM	GNU-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	FM	s-x
Not	N.Reg.Nom.Sg.Fem	Not-n
Unix	FM	Unix-x
<g/>
'	SYM.Quot.Right	'-x
–	FM	–-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Art	N.Reg.Acc.Sg.Fem	Art-n
Hommage	N.Reg.Nom.Sg.Fem	Hommage-n
an	APPR	an-i
Unix	N.Reg.Acc.Sg.Masc	Unix-n
<g/>
,	SYM.Pun.Comma	,-x
während	CONJ.SubFin	während-c
zum	APPRART.Dat.Sg.Neut	zu-i
anderen	PRO.Indef.Subst.Dat.Sg.*	andere-p
klar	ADJD.Pos	klar-j
gemacht	VPP.Full.Psp	machen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GNU	N.Name.Nom.Sg.Neut	GNU-n
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
anders	ADV	anders-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Technisch	ADJD.Pos	technisch-j
gesehen	VPP.Full.Psp	sehen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNU	N.Name.Nom.Sg.*	GNU-n
wie	CONJ.Coord	wie-c
Unix	N.Name.Nom.Sg.*	Unix-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
im	APPRART.Dat.Sg.Masc	in-i
Gegensatz	N.Reg.Dat.Sg.Masc	Gegensatz-n
zu	APPR	zu-i
Unix	N.Name.Dat.Sg.*	Unix-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
GNU	N.Name.Nom.Sg.*	GNU-n
seinen	PRO.Poss.Attr.Dat.Pl.Masc	seine-p
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
dauerte	VFIN.Full.3.Sg.Past.Ind	dauern-v
viele	PRO.Indef.Attr.Acc.Pl.Neut	viele-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
der	ART.Def.Gen.Sg.Fem	die-x
Arbeit	N.Reg.Gen.Sg.Fem	Arbeit-n
<g/>
,	SYM.Pun.Comma	,-x
durch	APPR	durch-i
Hunderte	N.Reg.Acc.Pl.Neut	Hundert-n
von	APPR	von-i
ProgrammiererInnen	N.Reg.Dat.Pl.Fem	ProgrammiererInnen-n
<g/>
,	SYM.Pun.Comma	,-x
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Dat.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
und	CONJ.Coord	und-c
Freie-Software-Unternehmen	N.Reg.Nom.Pl.Fem	Freie-Software-Unternehmen-n
bezahlt	VPP.Full.Psp	bezahlen-v
<g/>
;	SYM.Pun.Sent	;-x
die	ART.Def.Nom.Pl.*	die-x
meisten	PRO.Indef.Subst.Nom.Pl.*	meiste-p
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
Freiwillige	N.Reg.Nom.Pl.*	Freiwillige-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Attr.Nom.Pl.Fem	einige-p
wenige	PRO.Indef.Subst.Nom.Pl.*	wenige-p
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
berühmt	ADJD.Pos	berühmt-j
<g/>
;	SYM.Pun.Sent	;-x
die	ART.Def.Nom.Pl.*	die-x
meisten	PRO.Indef.Subst.Nom.Pl.*	meiste-p
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
vor	APPR	vor-i
allem	PRO.Indef.Subst.Dat.Sg.Neut	alle-p
innerhalb	APPR	innerhalb-i
ihres	PRO.Poss.Attr.Gen.Sg.Masc	ihre-p
Berufsstands	N.Reg.Gen.Sg.Masc	Berufsstand-n
<g/>
,	SYM.Pun.Comma	,-x
durch	APPR	durch-i
andere	ADJA.Pos.Acc.Pl.Masc	ander-j
Hacker	N.Reg.Acc.Pl.Masc	Hacker-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
verwenden	VINF.Full	verwenden-v
oder	CONJ.Coord	oder-c
daran	PROADV.Dem	daran-x
arbeiten	VINF.Full	arbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
bekannt	ADJD.Pos	bekannt-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Alle	PRO.Indef.Subst.Nom.Pl.*	alle-p
zusammen	ADV	zusammen-a
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
dazu	PROADV.Dem	dazu-x
beigetragen	VPP.Full.Psp	beitragen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Potenzial	N.Reg.Acc.Sg.Neut	Potenzial-n
des	ART.Def.Gen.Sg.Neut	die-x
Rechnernetzes	N.Reg.Gen.Sg.Neut	Rechnernetz-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Menschheit	N.Reg.Acc.Sg.Fem	Menschheit-n
zu	PART.Zu	zu-x
befreien	VINF.Full	befreien-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1991	CARD	[number]-m
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
letzte	ADJA.Pos.Nom.Sg.Fem	letzt-j
große	ADJA.Pos.Nom.Sg.Fem	groß-j
wesentliche	ADJA.Pos.Nom.Sg.Fem	wesentlich-j
Komponente	N.Reg.Nom.Sg.Fem	Komponente-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
unixartigen	ADJA.Pos.Gen.Sg.Neut	unixartig-j
Systems	N.Reg.Gen.Sg.Neut	System-n
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
:	SYM.Pun.Colon	:-x
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Nom.Sg.Masc	die-x
von	APPR	von-i
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.Dat.Sg.*	Torvalds-n
geschriebene	ADJA.Pos.Nom.Sg.Masc	geschrieben-j
freie	ADJA.Pos.Nom.Sg.Masc	frei-j
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heutzutage	ADV	heutzutage-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
Kombination	N.Reg.Nom.Sg.Fem	Kombination-n
von	APPR	von-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
und	CONJ.Coord	und-c
Linux	N.Reg.Dat.Sg.Neut	Linux-n
von	APPR	von-i
Millionen	N.Reg.Dat.Pl.Fem	Million-n
von	APPR	von-i
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
auf	APPR	auf-i
der	ART.Def.Dat.Sg.Fem	die-x
ganzen	ADJA.Pos.Dat.Sg.Fem	ganz-j
Welt	N.Reg.Dat.Sg.Fem	Welt-n
genutzt	VPP.Full.Psp	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
seine	PRO.Poss.Attr.Acc.Sg.Fem	seine-p
Beliebtheit	N.Reg.Acc.Sg.Fem	Beliebtheit-n
wächst	VFIN.Full.3.Sg.Pres.Ind	wachsen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Monat	N.Reg.Acc.Sg.Masc	Monat-n
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Veröffentlichung	N.Reg.Acc.Sg.Fem	Veröffentlichung-n
der	ART.Def.Gen.Sg.Fem	die-x
Version	N.Reg.Gen.Sg.Fem	Version-n
1.0	CARD	[number]-m
von	APPR	von-i
GNOME	N.Reg.Dat.Sg.Masc	Gnom-n
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Dat.Sg.Fem	die-x
grafischen	ADJA.Pos.Dat.Sg.Fem	grafisch-j
Benutzeroberfläche	N.Reg.Dat.Sg.Fem	Benutzeroberfläche-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
angekündigt	VPP.Full.Psp	ankündigen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
hoffentlich	ADV	hoffentlich-a
die	ART.Def.Acc.Sg.Fem	die-x
Bedienung	N.Reg.Acc.Sg.Fem	Bedienung-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU	N.Reg.Gen.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systems	N.Reg.Gen.Sg.Neut	Linux-System-n
so	ADV	so-a
einfach	ADJD.Pos	einfach-j
machen	VINF.Full	machen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wie	CONJ.Comp	wie-c
die	PRO.Dem.Subst.Nom.Sg.Fem	die-p
jedes	PRO.Indef.Subst.Acc.Sg.Neut	jede-p
anderen	ADJA.Pos.Gen.Pl.Neut	ander-j
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
unser	PRO.Poss.Attr.Nom.Sg.Neut	unsre-p
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
dauerhaft	ADJD.Pos	dauerhaft-j
gesichert	VPP.Full.Psp	sichern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Welt	N.Reg.Nom.Sg.Fem	Welt-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
nicht	PART.Neg	nicht-x
still	PART.Verb	still-x
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
nicht	PART.Neg	nicht-x
damit	PROADV.Dem	damit-x
rechnen	VINF.Full	rechnen-v
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
auch	ADV	auch-a
noch	ADV	noch-a
in	APPR	in-i
fünf	CARD	fünf-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
nur	ADV	nur-a
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
heute	ADV	heute-a
so	ADV	so-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
vor	APPR	vor-i
schwierigen	ADJA.Pos.Dat.Pl.Fem	schwierig-j
Herausforderungen	N.Reg.Dat.Pl.Fem	Herausforderung-n
und	CONJ.Coord	und-c
Gefahren	N.Reg.Dat.Pl.Fem	Gefahr-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
bedarf	VFIN.Full.3.Sg.Pres.Ind	bedürfen-v
zielgerichteter	ADJA.Pos.Gen.Pl.Fem	zielgerichtet-j
Anstrengungen	N.Reg.Gen.Pl.Fem	Anstrengung-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
bewahren	VINF.Full	bewahren-v
<g/>
,	SYM.Pun.Comma	,-x
genauso	ADV	genauso-a
wie	CONJ.Comp	wie-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
dauerte	VFIN.Full.3.Sg.Past.Ind	dauern-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
in	APPR	in-i
erster	ADJA.Pos.Dat.Sg.Fem	erst-j
Linie	N.Reg.Dat.Sg.Fem	Linie-n
zu	PART.Zu	zu-x
erzielen	VINF.Full	erzielen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mittlerweile	ADV	mittlerweile-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
nur	ADV	nur-a
der	ART.Def.Nom.Sg.Masc	die-x
Anfang	N.Reg.*.Sg.Masc	Anfang-n
–	CARD	[number]-m
nun	ADV	nun-a
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Anwendungen	N.Reg.Acc.Pl.Fem	Anwendung-n
hinzufügen	VINF.Full	hinzufügen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Palette	N.Reg.Acc.Sg.Fem	Palette-n
an	APPR	an-i
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
abzudecken	VINF.Full.zu	abdecken-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
Nutzer	N.Reg.Acc.Sg.Masc	Nutzer-n
erledigen	VINF.Full	erledigen-v
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
zukünftigen	ADJA.Pos.Dat.Pl.Masc	zukünftig-j
Beiträgen	N.Reg.Dat.Pl.Masc	Beitrag-n
werde	VFIN.Aux.1.Sg.Pres.Ind	werden-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
über	APPR	über-i
die	ART.Def.Acc.Pl.Fem	die-x
genauen	ADJA.Pos.Acc.Pl.Fem	genau-j
Herausforderungen	N.Reg.Acc.Pl.Fem	Herausforderung-n
<g/>
,	SYM.Pun.Comma	,-x
vor	APPR	vor-i
denen	PRO.Rel.Subst.Dat.Pl.Fem	die-p
die	ART.Def.Nom.Sg.Fem	die-x
Freie-Software-Gemeinschaft	N.Reg.Nom.Sg.Fem	Freie-Software-Gemeinschaft-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
andere	ADJA.Pos.Acc.Pl.Fem	ander-j
Fragen	N.Reg.Acc.Pl.Fem	Frage-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
der	ART.Def.Gen.Pl.Masc	die-x
Rechnernutzer	N.Reg.Gen.Pl.Masc	Rechnernutzer-n
ebenso	ADV	ebenso-a
wie	CONJ.Comp	wie-c
die	ART.Def.Nom.Pl.Fem	die-x
Entwicklungen	N.Reg.Nom.Pl.Fem	Entwicklung-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
das	ART.Def.Acc.Sg.Neut	die-x
GNU	N.Name.*.*.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Betriebssystem	N.Name.Acc.Sg.*	Linux-Betriebssystem-n
beeinflussen	VINF.Full	beeinflussen-v
<g/>
,	SYM.Pun.Comma	,-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/why-programs-should-be-shared.html	N.Name	[url]-n
Warum	PROADV.Inter	warum-x
Programme	N.Reg.Nom.Pl.Neut	Programm-n
mit	APPR	mit-i
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
geteilt	VPP.Full.Psp	teilen-v
werden	VINF.Aux	werden-v
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
</s>
</align>
<align>
<s>
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
|	SYM.Other.XY	|-x
1983-05	CARD	1983-05-m
</s>
</align>
<align>
<s>
Dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
geschriebene	ADJA.Pos.Nom.Sg.Masc	geschrieben-j
Text	N.Reg.Nom.Sg.Masc	Text-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
auf	APPR	auf-i
Mai	N.Reg.Dat.Sg.Masc	Mai-n
1983	CARD	[number]-m
datierten	ADJA.Pos.Dat.Sg.Fem	datiert-j
Datei	N.Reg.Dat.Sg.Fem	Datei-n
gefundenen	ADJA.Pos.Nom.Pl.Neut	gefunden-j
<g/>
,	SYM.Pun.Comma	,-x
wenngleich	CONJ.SubFin	wenngleich-c
nicht	PART.Neg	nicht-x
klar	ADJD.Pos	klar-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
seinerzeit	ADV	seinerzeit-a
oder	CONJ.Coord	oder-c
noch	ADV	noch-a
früher	ADJD.Comp	früh-j
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Mai	N.Reg.Dat.Sg.Masc	Mai-n
1983	CARD	[number]-m
schmiedete	VFIN.Full.3.Sg.Past.Ind	schmieden-v
Stallman	N.Name.Nom.Sg.Masc	Stallman-n
private	ADJA.Pos.Acc.Pl.Masc	privat-j
Pläne	N.Reg.Acc.Pl.Masc	Plan-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
aber	ADV	aber-a
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
dafür	PROADV.Dem	dafür-x
entschieden	VPP.Full.Psp	entscheiden-v
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
einem	ART.Indef.Dat.Sg.Neut	eine-x
unixoiden	ADJA.Pos.Dat.Sg.Neut	unixoid-j
System	N.Reg.Dat.Sg.Neut	System-n
oder	CONJ.Coord	oder-c
so	ADV	so-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
wie	CONJ.Comp	wie-c
dem	ART.Def.Dat.Sg.Neut	die-x
MIT	N.Name.Dat.Sg.Neut	MIT-n
Lisp-Rechner	N.Reg.Acc.Pl.Masc	Lisp-Rechner-n
entspricht	VFIN.Full.3.Sg.Pres.Ind	entsprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
beiden	PRO.Indef.Attr.Nom.Pl.Fem	beide-p
englischsprachigen	ADJA.Pos.Nom.Pl.Fem	englischsprachig-j
Bedeutungen	N.Reg.Nom.Pl.Fem	Bedeutung-n
von	APPR	von-i
Free	N.Name.*.*.*	Free-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
begrifflich	ADJD.Pos	begrifflich-j
unterschieden	VPP.Full.Psp	unterscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Aussage	N.Reg.Nom.Sg.Fem	Aussage-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
deshalb	PROADV.Dem	deshalb-x
auf	APPR	auf-i
gratis	ADJD.Pos	gratis-j
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
bezogen	VPP.Full.Psp	beziehen-v
formuliert	VFIN.Full.3.Sg.Pres.Ind	formulieren-v
<g/>
,	SYM.Pun.Comma	,-x
allerdings	ADV	allerdings-a
als	CONJ.Comp	als-c
selbstverständlich	ADJD.Pos	selbstverständlich-j
betrachtend	ADJD.Pos	betrachtend-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
auch	ADV	auch-a
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Vor	APPR	vor-i
fünf	CARD	fünf-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
als	APPR	als-i
selbstverständlich	ADJD.Pos	selbstverständlich-j
voraussetzen	VINF.Full	voraussetzen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
jedes	PRO.Indef.Attr.Nom.Sg.Neut	jede-p
nützliche	ADJA.Pos.Nom.Sg.Neut	nützlich-j
Programm	N.Reg.Nom.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
an	APPR	an-i
Stanford	N.Name.*.*.*	Stanford-n
AI	N.Reg.Dat.Sg.Neut	Ai-n
Laboratory	N.Name.*.*.*	Laboratory-n
(	SYM.Paren.Left	(-x
<g/>
SAIL	N.Name.Nom.Sg.*	SAIL-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
Massachusetts	N.Name.*.*.Neut	Massachusetts-n
Institute	N.Name.*.*.*	Institut-n
of	N.Name.*.*.*	of-n
Technology	N.Name.*.*.*	Technology-n
(	SYM.Paren.Left	(-x
<g/>
MIT	N.Name.Nom.Sg.Neut	MIT-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
Carnegie	N.Name.Nom.Sg.*	Carnegie-n
Mellon	N.Name.*.*.*	Mellon-n
University	N.Name.*.*.*	University-n
(	SYM.Paren.Left	(-x
<g/>
CMU	N.Name.Nom.Sg.*	CMU-n
<g/>
)	SYM.Paren.Right	)-x
usw.	ADV	usw.-a
geschrieben	VPP.Full.Psp	schreiben-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
weitergegeben	VPP.Full.Psp	weitergeben-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Seither	ADV	seither-a
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
Universitäten	N.Reg.Nom.Pl.Fem	Universität-n
angefangen	ADJD.Pos	angefangen-j
ebenso	ADV	ebenso-a
wie	CONJ.Comp	wie-c
Softwarehäuser	N.Reg.Acc.Pl.Neut	Softwarehaus-n
zu	PART.Zu	zu-x
handeln	VINF.Full	handeln-v
-	SYM.Pun.Hyph	--x
alles	PRO.Indef.Attr.Nom.Sg.Neut	alle-p
Nützliche	N.Reg.Nom.Sg.Neut	Nützliche-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
gegen	APPR	gegen-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
schöne	ADJA.Pos.Acc.Sg.Fem	schön-j
Stange	N.Reg.Acc.Sg.Fem	Stange-n
Geld	N.Reg.Acc.Sg.Neut	Geld-n
verkauft	VPP.Full.Psp	verkaufen-v
(	SYM.Paren.Left	(-x
<g/>
gewöhnlich	ADJD.Pos	gewöhnlich-j
nachdem	PROADV.Dem	nachdem-x
auf	APPR	auf-i
Staatskosten	N.Reg.Acc.Pl.*	Staatskosten-n
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
suchen	VFIN.Full.3.Pl.Pres.Ind	suchen-v
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
möglichen	ADJA.Pos.Acc.Pl.Fem	möglich-j
Ausreden	N.Reg.Acc.Pl.Fem	Ausrede-n
warum	PROADV.Inter	warum-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
schädlich	ADJD.Pos	schädlich-j
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
Software	N.Reg.Nom.Sg.Fem	Software-n
wegzugeben	VINF.Full.zu	weggeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
vermeintlichen	ADJA.Pos.Nom.Pl.Neut	vermeintlich-j
Probleme	N.Reg.Nom.Pl.Neut	Problem-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
nie	ADV	nie-a
sonderlich	ADJD.Pos	sonderlich-j
gestört	VPP.Full.Psp	stören-v
als	CONJ.Comp	als-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
teilen	VINF.Full	teilen-v
wollten	VFIN.Mod.1.Pl.Past.Ind	wollen-v
und	CONJ.Coord	und-c
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
EMACS	N.Name.Acc.Sg.*	EMACS-n
nicht	PART.Neg	nicht-x
betroffen	VPP.Full.Psp	betreffen-v
<g/>
,	SYM.Pun.Comma	,-x
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
vermute	VFIN.Full.1.Sg.Pres.Ind	vermuten-v
also	ADV	also-a
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
erfunden	ADJD.Pos	erfunden-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
gesagt	VPP.Full.Psp	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Firmen	N.Reg.Nom.Pl.Fem	Firma-n
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
"	SYM.Quot.Left	"-x
<g/>
stehlen	VINF.Full	stehlen-v
<g/>
"	SYM.Quot.Left	"-x
und	CONJ.Coord	und-c
verkaufen	VINF.Full	verkaufen-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
so	ADV	so-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
schlechter	ADJD.Comp	schlecht-j
als	CONJ.Comp	als-c
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
Stanford	N.Name.Nom.Sg.Neut	Stanford-n
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
verkaufen	VINF.Full	verkaufen-v
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Zumindest	ADV	zumindest-a
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
die	ART.Def.Acc.Sg.Fem	die-x
Alternative	N.Reg.Acc.Sg.Fem	Alternative-n
haben	VINF.Aux	haben-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
Gratisexemplar	N.Reg.Acc.Sg.Neut	Gratisexemplar-n
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
betreute	ADJA.Pos.Acc.Pl.Fem	betreut-j
Software	N.Reg.Acc.Pl.Fem	Software-n
kaufen	VINF.Full	kaufen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
sollen	VFIN.Mod.3.Sg.Pres.Ind	sollen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
Dienstleistungsverträge	N.Reg.Acc.Pl.Masc	Dienstleistungsvertrag-n
verkaufen	VINF.Full	verkaufen-v
-	SYM.Pun.Hyph	--x
<g/>
die	ART.Def.Nom.Sg.Fem	die-x
Software	N.Reg.Nom.Sg.Fem	Software-n
selbst	ADV	selbst-a
jedoch	ADV	jedoch-a
gratis	ADJD.Pos	gratis-j
abgeben	VINF.Full	abgeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
denke	VFIN.Full.1.Sg.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
kann	VFIN.Mod.1.Sg.Pres.Ind	können-v
Gründe	N.Reg.Acc.Pl.Masc	Grund-n
zurechtlegen	VINF.Full	zurechtlegen-v
<g/>
,	SYM.Pun.Comma	,-x
bei	APPR	bei-i
denen	PRO.Rel.Subst.Dat.Pl.Masc	die-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
annehmen	VINF.Full	annehmen-v
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
Software	N.Reg.Nom.Sg.Fem	Software-n
gemeinsam	ADJD.Pos	gemeinsam-j
auszutauschen	VINF.Full.zu	austauschen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wichtiger	ADJD.Comp	wichtig-j
jedoch	ADV	jedoch-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
weitergeben	VINF.Full	weitergeben-v
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bekämen	VFIN.Full.1.Pl.Past.Subj	bekommen-v
mit	APPR	mit-i
demselben	PRO.Dem.Attr.Dat.Sg.Masc	dieselbe-p
Arbeitsaufwand	N.Reg.Dat.Sg.Masc	Arbeitsaufwand-n
mehr	ADV	mehr-a
erledigt	VPP.Full.Psp	erledigen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
künstliche	ADJA.Pos.Nom.Pl.Neut	künstlich-j
Hindernisse	N.Reg.Nom.Pl.Neut	Hindernis-n
beseitigt	VPP.Full.Psp	beseitigen-v
wären	VFIN.Aux.3.Pl.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
würden	VFIN.Aux.1.Pl.Past.Subj	werden-v
mehr	ADV	mehr-a
im	APPRART.Dat.Sg.Masc	in-i
Einklang	N.Reg.Dat.Sg.Masc	Einklang-n
mit	APPR	mit-i
allen	PRO.Indef.Attr.Dat.Pl.Fem	alle-p
anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
stehen	VFIN.Full.3.Pl.Pres.Ind	stehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gemeinsamer	N.Reg.Nom.Sg.Masc	Gemeinsame-n
Softwareaustausch	N.Name.Nom.Sg.Masc	Softwareaustausch-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
auf	APPR	auf-i
dem	ART.Def.Dat.Sg.Neut	die-x
Gebiet	N.Reg.Dat.Sg.Neut	Gebiet-n
der	ART.Def.Gen.Sg.Fem	die-x
Informatik	N.Reg.Gen.Sg.Fem	Informatik-n
die	ART.Def.Acc.Sg.Fem	die-x
Form	N.Reg.Acc.Sg.Fem	Form-n
der	ART.Def.Gen.Sg.Fem	die-x
wissenschaftlichen	ADJA.Pos.Gen.Sg.Fem	wissenschaftlich-j
Zusammenarbeit	N.Reg.Gen.Sg.Fem	Zusammenarbeit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Universitäten	N.Reg.Nom.Pl.Fem	Universität-n
pflegten	VFIN.Full.3.Pl.Past.Ind	pflegen-v
das	ART.Def.Acc.Sg.Neut	die-x
Prinzip	N.Reg.Acc.Sg.Neut	Prinzip-n
wissenschaftlicher	ADJA.Pos.Gen.Sg.Fem	wissenschaftlich-j
Zusammenarbeit	N.Reg.Gen.Sg.Fem	Zusammenarbeit-n
zu	PART.Zu	zu-x
verteidigen	VINF.Full	verteidigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
für	APPR	für-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
richtig	ADJD.Pos	richtig-j
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
für	APPR	für-i
Profit	N.Reg.Acc.Sg.Masc	Profit-n
über	APPR	über-i
den	ART.Def.Acc.Sg.Masc	die-x
Haufen	N.Reg.Acc.Sg.Masc	Haufen-n
zu	PART.Zu	zu-x
werfen	VINF.Full	werfen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Sollten	VFIN.Mod.1.Pl.Past.Ind	sollen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
lassen	VINF.Full	lassen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Derzeit	ADV	derzeit-a
arbeiten	VFIN.Full.3.Pl.Pres.Ind	arbeiten-v
hier	ADV	hier-a
Graduierte	N.Reg.Nom.Pl.*	Graduierte-n
daran	PROADV.Dem	daran-x
Projekte	N.Reg.Nom.Pl.Neut	Projekt-n
zu	PART.Zu	zu-x
programmieren	VINF.Full	programmieren-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
ausdrücklich	ADJD.Pos	ausdrücklich-j
zum	APPRART.Dat.Sg.Masc	zu-i
Verkauf	N.Reg.Dat.Sg.Masc	Verkauf-n
bestimmt	VPP.Full.Psp	bestimmen-v
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
aber	ADV	aber-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
Meinungsklima	N.Reg.Acc.Sg.Neut	Meinungsklima-n
wie	CONJ.Comp	wie-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
von	APPR	von-i
vor	ADV	vor-a
fünf	CARD	fünf-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
schaffen	VINF.Full	schaffen-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
Universität	N.Reg.Nom.Sg.Fem	Universität-n
nicht	PART.Neg	nicht-x
wagen	VINF.Full	wagen-v
<g/>
,	SYM.Pun.Comma	,-x
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
anfängt	VFIN.Full.3.Sg.Pres.Ind	anfangen-v
zu	PART.Zu	zu-x
teilen	VINF.Full	teilen-v
<g/>
,	SYM.Pun.Comma	,-x
könnten	VFIN.Mod.3.Pl.Past.Subj	können-v
andere	PRO.Indef.Subst.Nom.Pl.*	andere-p
anfangen	VINF.Full	anfangen-v
mit	APPR	mit-i
einem	PRO.Indef.Subst.Dat.Sg.Masc	eine-p
zu	PART.Zu	zu-x
teilen	VINF.Full	teilen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Fangen	VFIN.Full.1.Pl.Pres.Ind	fangen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
also	ADV	also-a
wieder	ADV	wieder-a
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
gemeinsamen	ADJA.Pos.Dat.Sg.Neut	gemeinsam-j
Austauschen	N.Reg.Dat.Sg.Neut	Austauschen-n
an	PART.Verb	an-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/yes-give-it-away.html	N.Name	[url]-n
Also	PART.Ans	Also-x
<g/>
,	SYM.Pun.Comma	,-x
lasst	VIMP.Full.2.Pl	lassen-v
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
wieder	ADV	wieder-a
anfangen	VINF.Full	anfangen-v
zu	PART.Zu	zu-x
teilen	VINF.Full	teilen-v
</s>
</align>
<align>
<s>
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
</s>
</align>
<align>
<s>
Dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Text	N.Reg.Nom.Sg.Masc	Text-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
auf	APPR	auf-i
Mai	N.Reg.Dat.Sg.Masc	Mai-n
1983	CARD	[number]-m
datierten	ADJA.Pos.Dat.Sg.Fem	datiert-j
Datei	N.Reg.Dat.Sg.Fem	Datei-n
gefunden	VPP.Full.Psp	finden-v
<g/>
,	SYM.Pun.Comma	,-x
wenngleich	CONJ.SubFin	wenngleich-c
nicht	PART.Neg	nicht-x
klar	ADJD.Pos	klar-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
seinerzeit	ADV	seinerzeit-a
oder	CONJ.Coord	oder-c
noch	ADV	noch-a
früher	ADJD.Comp	früh-j
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Mai	N.Reg.Dat.Sg.Masc	Mai-n
1983	CARD	[number]-m
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
private	ADJA.Pos.Nom.Pl.Masc	privat-j
Pläne	N.Reg.Nom.Pl.Masc	Plan-n
geschmiedet	ADJD.Pos	geschmiedet-j
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ob	CONJ.SubFin	ob-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
dabei	PROADV.Dem	dabei-x
um	APPR	um-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
unixoides	ADJA.Pos.Acc.Sg.Neut	unixoid-j
System	N.Reg.Acc.Sg.Neut	System-n
oder	CONJ.Coord	oder-c
um	APPR	um-i
so	ADV	so-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
wie	CONJ.Comp	wie-c
dem	ART.Def.Dat.Sg.Neut	die-x
MIT	N.Name.Dat.Sg.Neut	MIT-n
Lisp-Rechner	N.Reg.Acc.Pl.Masc	Lisp-Rechner-n
handelt	VFIN.Full.3.Sg.Pres.Ind	handeln-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
zu	APPR	zu-i
diesem	PRO.Dem.Attr.Dat.Sg.Masc	diese-p
Zeitpunkt	N.Reg.Dat.Sg.Masc	Zeitpunkt-n
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
festgestanden	VPP.Full.Psp	feststehen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
beiden	PRO.Indef.Attr.Nom.Pl.Fem	beide-p
englischsprachigen	ADJA.Pos.Nom.Pl.Fem	englischsprachig-j
Bedeutungen	N.Reg.Nom.Pl.Fem	Bedeutung-n
von	APPR	von-i
Free	FM	Free-x
<g/>
[	SYM.Paren.Left	[-x
<g/>
*	SYM.Other.Aster	*-x
<g/>
]	SYM.Paren.Right	]-x
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
begrifflich	ADJD.Pos	begrifflich-j
unterschieden	VPP.Full.Psp	unterscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Aussage	N.Reg.Nom.Sg.Fem	Aussage-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
deshalb	PROADV.Dem	deshalb-x
auf	APPR	auf-i
kostenlose	ADJA.Pos.Acc.Pl.Fem	kostenlos-j
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
bezogen	VPP.Full.Psp	beziehen-v
formuliert	VFIN.Full.3.Sg.Pres.Ind	formulieren-v
<g/>
,	SYM.Pun.Comma	,-x
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
aber	ADV	aber-a
als	APPR	als-i
selbstverständlich	ADJD.Pos	selbstverständlich-j
betrachtend	ADJD.Pos	betrachtend-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
auch	ADV	auch-a
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einer	PRO.Indef.Subst.Nom.Sg.Masc	eine-p
der	ART.Def.Gen.Pl.Masc	die-x
wichtigen	ADJA.Pos.Gen.Pl.Masc	wichtig-j
Beweggründe	N.Reg.Gen.Pl.Masc	Beweggrund-n
Software	N.Reg.Nom.Sg.Fem	Software-n
uneingeschränkt	ADJD.Pos	uneingeschränkt-j
abzugeben	VINF.Full.zu	abgeben-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
die	ART.Def.Acc.Sg.Fem	die-x
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
ändern	VINF.Full	ändern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
ermöglicht	VFIN.Full.3.Sg.Pres.Ind	ermöglichen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
besser	ADJD.Comp	gut-j
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
und	CONJ.Coord	und-c
fördert	VFIN.Full.3.Sg.Pres.Ind	fördern-v
und	CONJ.Coord	und-c
ermöglicht	VFIN.Full.3.Sg.Pres.Ind	ermöglichen-v
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
auch	ADV	auch-a
zu	APPR	zu-i
den	ART.Def.Dat.Pl.Fem	die-x
Bemühungen	N.Reg.Dat.Pl.Fem	Bemühung-n
beizutragen	VINF.Full.zu	beitragen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Darüber	PROADV.Dem	darüber-x
hinaus	APZR	hinaus-x
entwickeln	VFIN.Full.3.Pl.Pres.Ind	entwickeln-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Selbständigkeit	N.Reg.Acc.Sg.Fem	Selbständigkeit-n
<g/>
,	SYM.Pun.Comma	,-x
Selbstvertrauen	N.Reg.Acc.Sg.Neut	Selbstvertrauen-n
und	CONJ.Coord	und-c
Verantwortungsbewusstsein	N.Reg.Acc.Sg.Neut	Verantwortungsbewusstsein-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
oft	ADV	oft-a
gehört	VPP.Full.Psp	gehören|hören-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Amerikaner	N.Reg.Nom.Pl.Masc	Amerikaner-n
denken	VINF.Full	denken-v
sollen	VFIN.Mod.3.Pl.Pres.Ind	sollen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
etwas	ADV	etwas-a
wertlos	ADJD.Pos	wertlos-j
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
kostenlos	ADJD.Pos	kostenlos-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mag	VFIN.Mod.3.Sg.Pres.Ind	mögen-v
wahr	ADJD.Pos	wahr-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
aber	ADV	aber-a
nicht	PART.Neg	nicht-x
rational	ADJD.Pos	rational-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
Recht	N.Reg.Acc.Sg.Neut	Recht-n
darauf	PROADV.Dem	darauf-x
neurotisch	ADJD.Pos	neurotisch-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
aber	ADV	aber-a
nicht	PART.Neg	nicht-x
fördern	VINF.Full	fördern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Zwischenzeit	N.Reg.Dat.Sg.Fem	Zwischenzeit-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
das	ART.Def.Nom.Sg.Neut	die-x
Weggeben	N.Reg.Nom.Sg.Neut	Weggeben-n
von	APPR	von-i
Software	N.Reg.Dat.Sg.Fem	Software-n
gerade	ADV	gerade-a
nicht	PART.Neg	nicht-x
"	SYM.Quot.Left	"-x
<g/>
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
als	CONJ.Comp	als-c
wertlos	ADJD.Pos	wertlos-j
zu	PART.Zu	zu-x
behandeln	VINF.Full	behandeln-v
<g/>
"	SYM.Quot.Left	"-x
<g/>
,	SYM.Pun.Comma	,-x
nur	ADV	nur-a
weil	CONJ.SubFin	weil-c
einige	PRO.Indef.Attr.Nom.Pl.Masc	einige-p
Masochisten	N.Reg.Nom.Pl.Masc	Masochist-n
zu	APPR	zu-i
dem	ART.Def.Dat.Sg.Masc	die-x
Schluss	N.Reg.Dat.Sg.Masc	Schluss-n
kommen	VINF.Full	kommen-v
könnten	VFIN.Mod.3.Pl.Past.Subj	können-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
wertlos	ADJD.Pos	wertlos-j
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
Software	N.Reg.Nom.Sg.Fem	Software-n
nicht	PART.Neg	nicht-x
ändern	VINF.Full	ändern-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
wertlos	ADJD.Pos	wertlos-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Vielmehr	ADV	vielmehr-a
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
mehr	ADV	mehr-a
Wert	ADJD.Pos	wert-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
als	CONJ.Comp	als-c
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
zuvor	ADV	zuvor-a
geändert	VPP.Full.Psp	ändern-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
wenig	PRO.Indef.Attr.Nom.Sg.Fem	wenig-p
zentrale	ADJA.Pos.Nom.Sg.Fem	zentral-j
Betreuung	N.Reg.Nom.Sg.Fem	Betreuung-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
auch	ADV	auch-a
sinnvoll	ADJD.Pos	sinnvoll-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
andere	ADJA.Pos.Acc.Pl.Fem	ander-j
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
zu	PART.Zu	zu-x
erreichen	VINF.Full	erreichen-v
<g/>
,	SYM.Pun.Comma	,-x
abgesehen	VPP.Full.Psp	absehen-v
davon	PROADV.Dem	davon-x
Nutzer	N.Reg.Acc.Sg.Masc	Nutzer-n
zu	PART.Zu	zu-x
bedrängen	VINF.Full	bedrängen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
habe	VFIN.Aux.1.Sg.Pres.Ind	haben-v
viel	PRO.Indef.Attr.*.*.*	viel-p
Erfahrung	N.Reg.Acc.Sg.Fem	Erfahrung-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
Teilen	N.Reg.Dat.Pl.Masc	Teil-n
von	APPR	von-i
Software	N.Reg.Dat.Sg.Fem	Software-n
und	CONJ.Coord	und-c
habe	VFIN.Aux.3.Sg.Pres.Subj	haben-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
Nutzer	N.Reg.Acc.Sg.Masc	Nutzer-n
ändern	VINF.Full	ändern-v
lassen	VINF.Full	lassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
denke	VFIN.Full.1.Sg.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
</s>
</align>
<align>
<s>
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wenig	PRO.Indef.Attr.*.*.*	wenig-p
Neigung	N.Reg.Nom.Sg.Fem	Neigung-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
zu	PART.Zu	zu-x
glauben	VINF.Full	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
EMACS	N.Name.Nom.Sg.*	EMACS-n
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
wertlos	ADJD.Pos	wertlos-j
<g/>
;	SYM.Pun.Sent	;-x
</s>
</align>
<align>
<s>
Nutzer	N.Reg.Nom.Sg.Masc	Nutzer-n
EMACS	N.Name.Nom.Sg.Masc	EMACS-n
häufig	ADJD.Pos	häufig-j
ändern	VINF.Full	ändern-v
<g/>
;	SYM.Pun.Sent	;-x
</s>
</align>
<align>
<s>
Nutzeränderungen	N.Reg.Acc.Pl.Fem	Nutzeränderung-n
zur	APPRART.Dat.Sg.Fem	zu-i
EMACS-Entwicklung	N.Reg.Dat.Sg.Fem	EMACS-Entwicklung-n
beitragen	VINF.Full	beitragen-v
<g/>
;	SYM.Pun.Sent	;-x
</s>
</align>
<align>
<s>
die	ART.Def.Nom.Sg.Fem	die-x
zentrale	ADJA.Pos.Nom.Sg.Fem	zentral-j
Betreuung	N.Reg.Nom.Sg.Fem	Betreuung-n
von	APPR	von-i
EMACS	N.Name.Dat.Sg.*	EMACS-n
fortwährt	VFIN.Full.3.Sg.Pres.Ind	fortwähren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
ging	VFIN.Full.1.Sg.Past.Ind	gehen-v
auf	APPR	auf-i
Nutzer	N.Reg.Acc.Sg.Masc	Nutzer-n
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
nicht-manipulativen	ADJA.Pos.Dat.Sg.Masc	nicht-manipulativ-j
kooperativen	ADJA.Pos.Dat.Sg.Masc	kooperativ-j
Geist	N.Reg.Dat.Sg.Masc	Geist-n
zu	PART.Verb	zu-x
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
reagierten	VFIN.Full.3.Pl.Past.Ind	reagieren-v
enthusiastisch	ADJD.Pos	enthusiastisch-j
und	CONJ.Coord	und-c
kooperativ	ADJD.Pos	kooperativ-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	CONJ.SubFin	als-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
erklärte	VFIN.Full.1.Sg.Past.Ind	erklären-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Beschränkungen	N.Reg.Nom.Pl.Fem	Beschränkung-n
auferlegt	VPP.Full.Psp	auferlegen-v
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
Neurosen	N.Reg.Acc.Pl.Fem	Neurose-n
zu	PART.Zu	zu-x
überlisten	VINF.Full	überlisten-v
oder	CONJ.Coord	oder-c
weil	CONJ.SubFin	weil-c
im	APPRART.Dat.Sg.Neut	in-i
Voraus	N.Reg.Dat.Sg.Neut	Voraus-n
angenommen	VPP.Full.Psp	annehmen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
seien	VFIN.Aux.3.Pl.Pres.Subj	sein-v
inkompetent	ADJD.Pos	inkompetent-j
<g/>
,	SYM.Pun.Comma	,-x
empfanden	VFIN.Full.3.Pl.Past.Ind	empfinden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
berechtigten	ADJA.Pos.Acc.Sg.Masc	berechtigt-j
Groll	N.Reg.Acc.Sg.Masc	Groll-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
neigten	VFIN.Full.3.Pl.Past.Ind	neigen-v
auch	ADV	auch-a
dazu	PROADV.Dem	dazu-x
im	APPRART.Dat.Sg.Neut	in-i
Ergebnis	N.Reg.Dat.Sg.Neut	Ergebnis-n
inkompetent	ADJD.Pos	inkompetent-j
und	CONJ.Coord	und-c
neurotisch	ADJD.Pos	neurotisch-j
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/linux-and-gnu.html	N.Name	[url]-n
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
und	CONJ.Coord	und-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
</s>
</align>
<align>
<s>
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
auch	ADV	auch-a
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
:	SYM.Pun.Colon	:-x
Häufig	ADJD.Pos	häufig-j
gestellte	ADJA.Pos.Nom.Pl.Fem	gestellt-j
Fragen	N.Reg.Nom.Pl.Fem	Frage-n
und	CONJ.Coord	und-c
GNU	N.Reg.Nom.Pl.Masc	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
Schall	N.Name.Nom.Sg.*	Schall-n
und	CONJ.Coord	und-c
Rauch	N.Name.Nom.Sg.*	Rauch-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
für	APPR	für-i
weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Informationen	N.Reg.Acc.Pl.Fem	Information-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Rechnernutzer	N.Reg.Nom.Pl.Masc	Rechnernutzer-n
führen	VFIN.Full.3.Pl.Pres.Ind	führen-v
tagtäglich	ADJD.Pos	tagtäglich-j
eine	ART.Indef.Acc.Sg.Fem	eine-x
modifizierte	ADJA.Pos.Acc.Sg.Fem	modifiziert-j
Version	N.Reg.Acc.Sg.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
aus	PART.Verb	aus-x
-	SYM.Pun.Hyph	--x
ohne	CONJ.SubInf	ohne-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	PART.Zu	zu-x
wissen	VINF.Full	wissen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Durch	APPR	durch-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
befremdende	ADJA.Pos.Acc.Sg.Fem	befremdend-j
Wendung	N.Reg.Acc.Sg.Fem	Wendung-n
der	ART.Def.Gen.Pl.Neut	die-x
Ereignisse	N.Reg.Gen.Pl.Neut	Ereignis-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
System	N.Reg.Nom.Sg.Neut	System-n
-	SYM.Pun.Hyph	--x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
heute	ADV	heute-a
weit	ADJD.Pos	weit-j
verbreitet	VPP.Full.Psp	verbreiten-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
-	SYM.Pun.Hyph	--x
oft	ADV	oft-a
unzutreffend	ADJD.Pos	unzutreffend-j
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
genannt	VPP.Full.Psp	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
sich	PRO.Refl.Subst.3.Dat.Pl.*	sie-p
dessen	PRO.Dem.Subst.Gen.Sg.*	die-p
nicht	PART.Neg	nicht-x
bewusst	ADJD.Pos	bewusst-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
im	APPRART.Dat.Sg.Masc	in-i
Grunde	N.Reg.Dat.Sg.Masc	Grund-n
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
entwickelt	VFIN.Full.3.Sg.Pres.Ind	entwickeln-v
durch	APPR	durch-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Projekt	N.Reg.Acc.Sg.Neut	GNU-Projekt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
wahrhaft	ADV	wahrhaft-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
diese	PRO.Dem.Attr.Nom.Pl.Masc	diese-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
benutzen	VFIN.Full.3.Pl.Pres.Ind	benutzen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nur	ADV	nur-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
benutzen	VFIN.Full.3.Pl.Pres.Ind	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
:	SYM.Pun.Colon	:-x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
im	APPRART.Dat.Sg.Neut	in-i
System	N.Reg.Dat.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
die	ART.Def.Acc.Pl.Fem	die-x
Ressourcen	N.Reg.Acc.Pl.Fem	Ressource-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
an	APPR	an-i
die	ART.Def.Acc.Pl.Neut	die-x
anderen	ADJA.Pos.Acc.Pl.Neut	ander-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
zuteilt	VFIN.Full.3.Sg.Pres.Ind	zuteilen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
wesentlicher	ADJA.Pos.Nom.Sg.Masc	wesentlich-j
Bestandteil	N.Reg.Nom.Sg.Masc	Bestandteil-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
genommen	ADJD.Pos	genommen-j
aber	ADV	aber-a
nutzlos	ADJD.Pos	nutzlos-j
<g/>
;	SYM.Pun.Sent	;-x
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
nur	ADV	nur-a
im	APPRART.Dat.Sg.Masc	in-i
Kontext	N.Reg.Dat.Sg.Masc	Kontext-n
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
kompletten	ADJA.Pos.Dat.Sg.Neut	komplett-j
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
funktionieren	VINF.Full	funktionieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
üblicherweise	ADV	üblicherweise-a
in	APPR	in-i
Kombination	N.Reg.Dat.Sg.Fem	Kombination-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Dat.Sg.Neut	GNU-Betriebssystem-n
genutzt	VPP.Full.Psp	nutzen-v
<g/>
:	SYM.Pun.Colon	:-x
das	ART.Def.Nom.Sg.Neut	die-x
ganze	ADJA.Pos.Nom.Sg.Neut	ganz-j
System	N.Reg.Nom.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
grundsätzlich	ADJD.Pos	grundsätzlich-j
GNU	ADJD.Pos	GNU-j
mit	APPR	mit-i
hinzugefügtem	ADJA.Pos.Dat.Sg.Neut	hinzugefügt-j
Linux	N.Reg.Dat.Sg.Neut	Linux-n
-	SYM.Pun.Hyph	--x
oder	CONJ.Coord	oder-c
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
All	PRO.Indef.Attr.*.*.*	all-p
die	ART.Def.Nom.Pl.Neut	die-x
sogenannten	ADJA.Pos.Nom.Pl.Neut	sogenannt-j
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Distributionen	N.Reg.Nom.Pl.Fem	Distribution-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
tatsächlich	ADJD.Pos	tatsächlich-j
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Reg.Nom.Pl.Fem	Linux-Distribution-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
verstehen	VFIN.Full.3.Pl.Pres.Ind	verstehen-v
den	ART.Def.Acc.Sg.Masc	die-x
Unterschied	N.Reg.Acc.Sg.Masc	Unterschied-n
zwischen	APPR	zwischen-i
dem	ART.Def.Dat.Sg.Masc	die-x
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
dem	ART.Def.Dat.Sg.Neut	die-x
Gesamtsystem	N.Reg.Dat.Sg.Neut	Gesamtsystem-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
auch	ADV	auch-a
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
mehrdeutige	ADJA.Pos.Nom.Sg.Masc	mehrdeutig-j
Gebrauch	N.Reg.Nom.Sg.Masc	Gebrauch-n
des	ART.Def.Gen.Sg.Masc	die-x
Namens	N.Reg.Gen.Sg.Masc	Name-n
trägt	VFIN.Full.3.Sg.Pres.Ind	tragen-v
nicht	PART.Neg	nicht-x
zum	APPRART.Dat.Sg.Neut	zu-i
Verständnis	N.Reg.Dat.Sg.Neut	Verständnis-n
bei	PART.Verb	bei-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Masc	diese-p
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
denken	VFIN.Full.3.Pl.Pres.Ind	denken-v
oftmals	ADV	oftmals-a
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.Gen.Sg.Masc	Torvalds-n
das	ART.Def.Acc.Sg.Neut	die-x
gesamte	ADJA.Pos.Acc.Sg.Neut	gesamt-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
1991	CARD	[number]-m
mit	APPR	mit-i
ein	ART.Indef.*.*.*	eine-x
bisschen	PRO.Indef.Attr.*.*.*	bisschen-p
Hilfe	N.Reg.Dat.Sg.Fem	Hilfe-n
entwickelte	VFIN.Full.3.Sg.Past.Ind	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Programmierer	N.Reg.Nom.Pl.Masc	Programmierer-n
wissen	VFIN.Full.3.Pl.Pres.Ind	wissen-v
für	APPR	für-i
gewöhnlich	ADJD.Pos	gewöhnlich-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ein	ART.Indef.Nom.Sg.Masc	eine-x
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
aber	ADV	aber-a
im	APPRART.Dat.Sg.Neut	in-i
Allgemeinen	ADJA.Pos.Dat.Sg.Neut	allgemein-j
ebenso	ADV	ebenso-a
selbstverständlich	ADJD.Pos	selbstverständlich-j
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
als	APPR	als-i
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
gehört	VPP.Full.Psp	gehören|hören-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
stellen	VFIN.Full.3.Pl.Pres.Ind	stellen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
oft	ADV	oft-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Geschichte	N.Reg.Acc.Sg.Fem	Geschichte-n
vor	PART.Verb	vor-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Benennung	N.Reg.Acc.Sg.Fem	Benennung-n
des	ART.Def.Gen.Sg.Neut	die-x
Gesamtsystems	N.Reg.Gen.Sg.Neut	Gesamtsystem-n
nach	APPR	nach-i
dem	ART.Def.Dat.Sg.Masc	die-x
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
rechtfertigen	VINF.Full	rechtfertigen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
davon	PROADV.Dem	davon-x
überzeugt	VPP.Full.Psp	überzeugen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
<g/>
,	SYM.Pun.Comma	,-x
sobald	CONJ.SubFin	sobald-c
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.Gen.Sg.Masc	Torvalds-n
das	ART.Def.Acc.Sg.Neut	die-x
Schreiben	N.Reg.Acc.Sg.Neut	Schreiben-n
an	APPR	an-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
<g/>
,	SYM.Pun.Comma	,-x
abschließen	VINF.Full	abschließen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
seine	PRO.Poss.Attr.Nom.Pl.Masc	seine-p
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
nach	APPR	nach-i
anderer	ADJA.Pos.Dat.Sg.Fem	ander-j
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
umgucken	VINF.Full	umgucken-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
dann	ADV	dann-a
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
weiter	ADV	weiter-a
zu	PART.Zu	zu-x
nutzen	VINF.Full	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
fanden	VFIN.Full.3.Pl.Past.Ind	finden-v
heraus	PART.Verb	heraus-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
(	SYM.Paren.Left	(-x
<g/>
aus	APPR	aus-i
keinem	PRO.Indef.Attr.Dat.Sg.Masc	keine-p
besonderen	ADJA.Pos.Dat.Sg.Masc	besonder-j
Grund	N.Reg.Dat.Sg.Masc	Grund-n
<g/>
)	SYM.Paren.Right	)-x
fast	ADV	fast-a
alles	PRO.Indef.Subst.Nom.Sg.Neut	alle-p
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
unixoides	ADJA.Pos.Acc.Sg.Neut	unixoid-j
System	N.Reg.Acc.Sg.Neut	System-n
Notwendige	N.Reg.Nom.Sg.Neut	Notwendige-n
bereits	ADV	bereits-a
vorhanden	ADJD.Pos	vorhanden-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
vorfanden	VFIN.Full.3.Pl.Past.Ind	vorfinden-v
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
Zufall	N.Reg.Nom.Sg.Masc	Zufall-n
-	SYM.Pun.Hyph	--x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
(	SYM.Paren.Left	(-x
<g/>
noch	ADV	noch-a
unvollständige	ADJA.Pos.Nom.Sg.Neut	unvollständig-j
<g/>
)	SYM.Paren.Right	)-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
verfügbare	ADJA.Pos.Nom.Sg.Fem	verfügbar-j
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
trug	VFIN.Full.3.Sg.Past.Ind	tragen-v
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Komplettsystem	N.Reg.Dat.Sg.Neut	Komplettsystem-n
bei	PART.Verb	bei-x
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
seit	APPR	seit-i
1984	CARD	[number]-m
an	APZR	an-x
einem	PRO.Indef.Subst.Dat.Sg.Masc	eine-p
gearbeitet	VPP.Full.Psp	arbeiten-v
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
GNU-Manifest	N.Reg.Dat.Sg.Masc	GNU-Manifest-n
erklärten	VFIN.Full.3.Pl.Past.Ind	erklären-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Ziel	N.Reg.Acc.Sg.Neut	Ziel-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
<g/>
,	SYM.Pun.Comma	,-x
unixoides	ADJA.Pos.Acc.Sg.Neut	unixoid-j
System	N.Reg.Acc.Sg.Neut	System-n
namens	APPR	namens-i
GNU	N.Name.Nom.Sg.Masc	GNU-n
<g/>
[	SYM.Paren.Left	[-x
<g/>
1	CARD	1-m
<g/>
]	SYM.Paren.Right	]-x
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
ursprüngliche	ADJA.Pos.Nom.Sg.Fem	ursprünglich-j
Ankündigung	N.Reg.Nom.Sg.Fem	Ankündigung-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
umreißt	VFIN.Full.3.Sg.Pres.Ind	umreißen-v
auch	ADV	auch-a
einige	PRO.Indef.Subst.Acc.Pl.Masc	einige-p
der	ART.Def.Gen.Pl.Masc	die-x
ursprünglichen	ADJA.Pos.Gen.Pl.Masc	ursprünglich-j
Pläne	N.Reg.Gen.Pl.Masc	Plan-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Als	CONJ.SubFin	als-c
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
begonnen	VPP.Full.Psp	beginnen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
GNU	N.Name.Nom.Sg.Neut	GNU-n
fast	ADV	fast-a
fertig	ADJD.Pos	fertig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Freie-Software-Projekte	N.Reg.Nom.Pl.Masc	Freie-Software-Projekte-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
das	ART.Def.Acc.Sg.Neut	die-x
Ziel	N.Reg.Acc.Sg.Neut	Ziel-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
bestimmtes	ADJA.Pos.Acc.Sg.Neut	bestimmt-j
Programm	N.Reg.Acc.Sg.Neut	Programm-n
für	APPR	für-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
bestimmte	ADJA.Pos.Acc.Sg.Fem	bestimmt-j
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.*.*.*	Torvalds-n
vorgenommen	VPP.Full.Psp	vornehmen-v
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
unixoiden	ADJA.Pos.Acc.Sg.Masc	unixoid-j
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
(	SYM.Paren.Left	(-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
)	SYM.Paren.Right	)-x
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
Donald	N.Name.Nom.Sg.Masc	Donald-n
Knuth	N.Name.Nom.Sg.*	Knuth-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
Textsatzprogramm	N.Reg.Acc.Sg.Neut	Textsatzprogramm-n
(	SYM.Paren.Left	(-x
<g/>
TeX	N.Name.Nom.Sg.*	TeX-n
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
Bob	N.Name.Nom.Sg.Masc	Bob-n
Scheifler	N.Name.Nom.Sg.Masc	Scheifler-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
Fenstersystem	N.Reg.Acc.Sg.Neut	Fenstersystem-n
(	SYM.Paren.Left	(-x
<g/>
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
X	SYM.Other.XY	X-x
Window	FM	Window-x
System	FM	System-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nur	ADV	nur-a
natürlich	ADJD.Pos	natürlich-j
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Beitrag	N.Reg.Acc.Sg.Masc	Beitrag-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Art	N.Reg.Gen.Sg.Fem	Art-n
von	APPR	von-i
Projekt	N.Reg.Dat.Sg.Neut	Projekt-n
an	APPR	an-i
bestimmten	ADJA.Pos.Dat.Pl.Neut	bestimmt-j
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
zu	PART.Zu	zu-x
messen	VINF.Full	messen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
daraus	PROADV.Dem	daraus-x
stammen	VFIN.Full.3.Pl.Pres.Ind	stammen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zu	APPR	zu-i
welchem	PRO.Inter.Attr.Dat.Sg.Masc	welche-p
Schluss	N.Reg.Dat.Sg.Masc	Schluss-n
würden	VFIN.Aux.1.Pl.Past.Subj	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bei	APPR	bei-i
dem	ART.Def.Dat.Sg.Masc	die-x
Versuch	N.Reg.Dat.Sg.Masc	Versuch-n
kommen	VINF.Full	kommen-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Beitrag	N.Reg.Acc.Sg.Masc	Beitrag-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
danach	PROADV.Dem	danach-x
zu	PART.Zu	zu-x
messen	VINF.Full	messen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
CD-ROM-Anbieter	N.Reg.Nom.Sg.Masc	CD-ROM-Anbieter-n
fand	VFIN.Full.3.Sg.Past.Ind	finden-v
heraus	PART.Verb	heraus-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
in	APPR	in-i
deren	PRO.Dem.Subst.Gen.Sg.Fem	die-p
"	SYM.Quot.Left	"-x
<g/>
Linux-Distribution	N.Reg.Nom.Sg.Fem	Linux-Distribution-n
<g/>
"	SYM.Quot.Left	"-x
GNU-Software	N.Reg.Nom.Sg.Fem	GNU-Software-n
mit	APPR	mit-i
etwa	ADV	etwa-a
28	CARD	28-m
%	N.Reg.*.*.Neut	%-n
der	ART.Def.Nom.Sg.Masc	die-x
größte	ADJA.Sup.Nom.Sg.Masc	groß-j
einzelne	ADJA.Pos.Nom.Sg.Masc	einzeln-j
Anteil	N.Reg.Nom.Sg.Masc	Anteil-n
des	ART.Def.Gen.Sg.Masc	die-x
gesamten	ADJA.Pos.Gen.Sg.Masc	gesamt-j
Quellcodes	N.Reg.Gen.Sg.Masc	Quellcode-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
schloss	VFIN.Full.1.Sg.Past.Ind	schließen-v
einige	PRO.Indef.Subst.Acc.Pl.Fem	einige-p
der	ART.Def.Gen.Pl.Fem	die-x
unverzichtbaren	ADJA.Pos.Gen.Pl.Fem	unverzichtbar-j
Hauptkomponenten	N.Reg.Gen.Pl.Fem	Hauptkomponente-n
<g/>
,	SYM.Pun.Comma	,-x
ohne	APPR	ohne-i
die	PRO.Rel.Subst.Acc.Pl.Fem	die-p
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
überhaupt	ADV	überhaupt-a
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
System	N.Reg.Acc.Sg.Neut	System-n
geben	VINF.Full	geben-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ein	PART.Verb	ein-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
selbst	ADV	selbst-a
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
ungefähr	ADJD.Pos	ungefähr-j
3	CARD	3-m
%	N.Reg.*.*.Neut	%-n
aus	PART.Verb	aus-x
(	SYM.Paren.Left	(-x
<g/>
2008	CARD	[number]-m
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
die	ART.Def.Nom.Pl.Masc	die-x
Anteile	N.Reg.Nom.Pl.Masc	Anteil-n
ähnlich	ADJD.Pos	ähnlich-j
<g/>
:	SYM.Pun.Colon	:-x
im	APPRART.Dat.Sg.Neut	in-i
Haupt-Projektarchiv	N.Reg.Dat.Sg.Neut	Haupt-Projektarchiv-n
von	APPR	von-i
gNewSense	FM	gNewSense-x
Linux	N.Reg.Dat.Sg.Neut	Linux-n
1,5	CARD	[number]-m
%	N.Reg.*.*.Neut	%-n
und	CONJ.Coord	und-c
GNU-Pakete	N.Reg.Nom.Pl.Neut	GNU-Paket-n
15	CARD	15-m
%	N.Reg.*.*.Neut	%-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
also	ADV	also-a
vor	PART.Verb	vor-x
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
basierend	ADJD.Pos	basierend-j
darauf	PROADV.Dem	darauf-x
auszuwählen	VINF.Full.zu	auswählen-v
<g/>
,	SYM.Pun.Comma	,-x
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
die	ART.Def.Acc.Pl.Neut	die-x
Programme	N.Reg.Acc.Pl.Neut	Programm-n
im	APPRART.Dat.Sg.Neut	in-i
System	N.Reg.Dat.Sg.Neut	System-n
geschrieben	VPP.Full.Psp	schreiben-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
entsprechende	ADJA.Pos.Nom.Sg.Fem	entsprechend-j
einzige	ADJA.Pos.Nom.Sg.Fem	einzig-j
Antwort	N.Reg.Nom.Sg.Fem	Antwort-n
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
der	ART.Def.Nom.Sg.Masc	die-x
richtige	ADJA.Pos.Nom.Sg.Masc	richtig-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
die	ART.Def.Acc.Sg.Fem	die-x
Angelegenheit	N.Reg.Acc.Sg.Fem	Angelegenheit-n
zu	PART.Zu	zu-x
beurteilen	VINF.Full	beurteilen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
und	CONJ.Coord	und-c
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
bestimmte	ADJA.Pos.Acc.Pl.Neut	bestimmt-j
Softwarepakete	N.Reg.Acc.Pl.Neut	Softwarepaket-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
C-Compiler	N.Reg.Acc.Sg.Masc	C-Compiler-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
obgleich	CONJ.SubFin	obgleich-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
taten	VFIN.Full.1.Pl.Past.Ind	tun-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Texteditor	N.Reg.Acc.Sg.Masc	Texteditor-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
obgleich	CONJ.SubFin	obgleich-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
entwickelten	ADJA.Pos.Acc.Sg.Masc	entwickelt-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
vorgenommen	VPP.Full.Psp	vornehmen-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
vollständig	ADJD.Pos	vollständig-j
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
unixoides	ADJA.Pos.Acc.Sg.Neut	unixoid-j
System	N.Reg.Acc.Sg.Neut	System-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
:	SYM.Pun.Colon	:-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
maßgebliche	ADJA.Pos.Nom.Pl.Masc	maßgeblich-j
Beiträge	N.Reg.Nom.Pl.Masc	Beitrag-n
zu	APPR	zu-i
der	ART.Def.Dat.Sg.Fem	die-x
freien	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
im	APPRART.Dat.Sg.Neut	in-i
System	N.Reg.Dat.Sg.Neut	System-n
geleistet	VPP.Full.Psp	leisten-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
alle	PRO.Indef.Subst.Nom.Pl.*	alle-p
verdienen	VFIN.Full.3.Pl.Pres.Ind	verdienen-v
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
für	APPR	für-i
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
der	ART.Def.Nom.Sg.Masc	die-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
weshalb	PROADV.Inter	weshalb-x
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
integriertes	ADJA.Pos.Nom.Sg.Neut	integriert-j
System	N.Reg.Nom.Sg.Neut	System-n
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
Sammlung	N.Reg.Nom.Sg.Fem	Sammlung-n
nützlicher	ADJA.Pos.Gen.Pl.Neut	nützlich-j
Programme	N.Reg.Gen.Pl.Neut	Programm-n
-	SYM.Pun.Hyph	--x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	PRO.Dem.Subst.Nom.Sg.Masc	die-p
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
vorgenommen	VPP.Full.Psp	vornehmen-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	APPR	zu-i
einem	PRO.Indef.Subst.Dat.Sg.Masc	eine-p
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
fertigten	VFIN.Full.1.Pl.Past.Ind	fertigen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Liste	N.Reg.Acc.Sg.Fem	Liste-n
der	ART.Def.Gen.Pl.Neut	die-x
benötigten	ADJA.Pos.Gen.Pl.Neut	benötigt-j
Programme	N.Reg.Gen.Pl.Neut	Programm-n
an	PART.Verb	an-x
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
vollständiges	ADJA.Pos.Acc.Sg.Neut	vollständig-j
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
System	N.Reg.Acc.Sg.Neut	System-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
systematisch	ADJD.Pos	systematisch-j
fanden	VFIN.Full.3.Pl.Past.Ind	finden-v
<g/>
,	SYM.Pun.Comma	,-x
schrieben	VFIN.Full.3.Pl.Past.Ind	schreiben-v
oder	CONJ.Coord	oder-c
fanden	VFIN.Full.3.Pl.Past.Ind	finden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Personen	N.Reg.Acc.Pl.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
alles	PRO.Indef.Subst.Acc.Sg.Neut	alle-p
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
Liste	N.Reg.Acc.Sg.Fem	Liste-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
schrieben	VFIN.Full.1.Pl.Past.Ind	schreiben-v
wesentliche	ADJA.Pos.Acc.Pl.Masc	wesentlich-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
wenig	ADV	wenig-a
aufregende	ADJA.Pos.Acc.Pl.Fem	aufregend-j
Komponenten	N.Reg.Acc.Pl.Fem	Komponente-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
1	CARD	1-m
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
ohne	APPR	ohne-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
System	N.Reg.Acc.Sg.Neut	System-n
haben	VINF.Aux	haben-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
unserer	PRO.Poss.Attr.Gen.Pl.Fem	unsre-p
Systemkomponenten	N.Reg.Gen.Pl.Fem	Systemkomponente-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Neut	die-x
Programmierwerkzeuge	N.Reg.Nom.Pl.Neut	Programmierwerkzeug-n
<g/>
,	SYM.Pun.Comma	,-x
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
unter	APPR	unter-i
Programmierern	N.Reg.Dat.Pl.Masc	Programmierer-n
eigenständig	ADJD.Pos	eigenständig-j
populär	ADJD.Pos	populär-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
schrieben	VFIN.Full.1.Pl.Past.Ind	schreiben-v
auch	ADV	auch-a
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
Komponenten	N.Reg.Acc.Pl.Fem	Komponente-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
keine	PRO.Indef.Attr.Acc.Pl.Neut	keine-p
Werkzeuge	N.Reg.Acc.Pl.Neut	Werkzeug-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
2	CARD	2-m
<g/>
)	SYM.Paren.Right	)-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
entwickelten	VFIN.Full.1.Pl.Past.Ind	entwickeln-v
sogar	ADV	sogar-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
Schachspiel	N.Reg.Acc.Sg.Neut	Schachspiel-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
Chess	N.Name.Nom.Sg.Fem	Chess-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Gesamtsystem	N.Reg.Nom.Sg.Neut	Gesamtsystem-n
auch	ADV	auch-a
Spiele	N.Reg.Acc.Pl.Neut	Spiel-n
braucht	VFIN.Full.3.Sg.Pres.Ind	brauchen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Anfang	N.Reg.*.Sg.Masc	Anfang-n
der	ART.Def.Gen.Pl.*	die-x
90er	N.Reg.Gen.Pl.*	90er-n
hatten	VFIN.Aux.1.Pl.Past.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
gesamte	ADJA.Pos.Acc.Sg.Neut	gesamt-j
System	N.Reg.Acc.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
abgesehen	VPP.Full.Psp	absehen-v
vom	APPRART.Dat.Sg.Masc	von-i
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
<g/>
,	SYM.Pun.Comma	,-x
zusammengestellt	VPP.Full.Psp	zusammenstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
arbeiteten	VFIN.Full.1.Pl.Past.Ind	arbeiten-v
ebenfalls	ADV	ebenfalls-a
an	APPR	an-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
<g/>
,	SYM.Pun.Comma	,-x
dem	PRO.Rel.Subst.Dat.Sg.Masc	die-p
GNU	N.Name.Nom.Sg.*	GNU-n
Hurd	N.Name.Nom.Sg.*	Hurd-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
auf	APPR	auf-i
Mach	VIMP.Full.2.Sg	machen-v
aufsetzt	VFIN.Full.3.Sg.Pres.Ind	aufsetzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Entwicklung	N.Reg.Nom.Sg.Fem	Entwicklung-n
dieses	PRO.Dem.Attr.Gen.Sg.Neut	diese-p
Systemkerns	N.Reg.Gen.Sg.Neut	Systemkerns-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
sehr	ADV	sehr-a
viel	ADV	viel-a
schwieriger	ADJD.Comp	schwierig-j
gewesen	VPP.Aux.Psp	sein-v
als	CONJ.Comp	als-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
angenommen	VPP.Full.Psp	annehmen-v
hatten	VFIN.Aux.1.Pl.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.*.*.*	GNU-n
Hurd	N.Name.Nom.Sg.*	Hurd-n
begann	VFIN.Full.3.Sg.Past.Ind	beginnen-v
zwar	ADV	zwar-a
2001	CARD	[number]-m
zuverlässig	ADJD.Pos	zuverlässig-j
zu	PART.Zu	zu-x
arbeiten	VINF.Full	arbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
weit	ADJD.Pos	weit-j
davon	PROADV.Dem	davon-x
entfernt	VPP.Full.Psp	entfernen-v
<g/>
,	SYM.Pun.Comma	,-x
allgemein	ADJD.Pos	allgemein-j
benutzbar	ADJD.Pos	benutzbar-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Glücklicherweise	ADV	glücklicherweise-a
mussten	VFIN.Mod.1.Pl.Past.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
wegen	APPR	wegen-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
nicht	PART.Neg	nicht-x
auf	APPR	auf-i
Hurd	N.Name.Acc.Sg.*	Hurd-n
warten	VFIN.Full.3.Pl.Pres.Ind	warten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nachdem	CONJ.SubFin	nachdem-c
Torvalds	N.Name.Nom.Sg.*	Torvalds-n
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1992	CARD	[number]-m
Linux	N.Reg.Nom.Sg.Neut	Linux-n
freigegebenen	ADJA.Pos.Gen.Pl.Fem	freigegeben-j
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
füllte	VFIN.Full.3.Sg.Past.Ind	füllen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
letzte	ADJA.Pos.Acc.Sg.Fem	letzt-j
große	ADJA.Pos.Acc.Sg.Fem	groß-j
Lücke	N.Reg.Acc.Sg.Fem	Lücke-n
im	APPRART.Dat.Sg.Neut	in-i
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
dann	ADV	dann-a
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
kombinieren	VINF.Full	kombinieren-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
vollständig	ADJD.Pos	vollständig-j
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
System	N.Reg.Acc.Sg.Neut	System-n
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
-	SYM.Pun.Hyph	--x
eine	ART.Indef.Nom.Sg.Fem	eine-x
Variante	N.Reg.Nom.Sg.Fem	Variante-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
auch	ADV	auch-a
Linux	N.Reg.Acc.Sg.Neut	Linux-n
enthielt	VFIN.Full.3.Sg.Past.Ind	enthalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Worten	N.Reg.Dat.Pl.Neut	Wort-n
<g/>
:	SYM.Pun.Colon	:-x
das	ART.Def.Nom.Sg.Neut	die-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Nom.Sg.Neut	Linux-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Damit	CONJ.SubFin	damit-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
gut	ADJD.Pos	gut-j
zusammenarbeiten	VFIN.Full.3.Pl.Pres.Ind	zusammenarbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
triviale	ADJA.Pos.Nom.Sg.Fem	trivial-j
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Attr.Nom.Pl.Masc	einige-p
GNU-Komponenten	N.Reg.Nom.Pl.Masc	GNU-Komponenten-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
3	CARD	3-m
<g/>
)	SYM.Paren.Right	)-x
benötigten	VFIN.Full.3.Pl.Past.Ind	benötigen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
wesentliche	ADJA.Pos.Acc.Sg.Fem	wesentlich-j
Änderung	N.Reg.Acc.Sg.Fem	Änderung-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
funktionieren	VINF.Full	funktionieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Integration	N.Reg.Nom.Sg.Fem	Integration-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
kompletten	ADJA.Pos.Gen.Sg.Neut	komplett-j
Systems	N.Reg.Gen.Sg.Neut	System-n
zu	APPR	zu-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Distribution	N.Reg.Dat.Sg.Fem	Distribution-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
sofort	ADV	sofort-a
einsatzbereit	ADJD.Pos	einsatzbereit-j
sein	VINF.Aux	sein-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ebenfalls	ADV	ebenfalls-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
große	ADJA.Pos.Nom.Sg.Fem	groß-j
Aufgabe	N.Reg.Nom.Sg.Fem	Aufgabe-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
musste	VFIN.Mod.3.Sg.Past.Ind	müssen-v
die	ART.Def.Nom.Sg.Fem	die-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
gelöst	VPP.Full.Psp	lösen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
installiert	VFIN.Full.3.Sg.Pres.Ind	installieren-v
und	CONJ.Coord	und-c
startet	VFIN.Full.3.Sg.Pres.Ind	starten-v
-	SYM.Pun.Hyph	--x
ein	ART.Indef.Nom.Sg.Neut	eine-x
Problem	N.Reg.Nom.Sg.Neut	Problem-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
angepackt	VPP.Full.Psp	anpacken-v
hatten	VFIN.Aux.1.Pl.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Punkt	N.Reg.Acc.Sg.Masc	Punkt-n
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
erreicht	VPP.Full.Psp	erreichen-v
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Daher	PROADV.Dem	daher-x
leisteten	VFIN.Full.3.Pl.Past.Ind	leisten-v
die	ART.Def.Nom.Pl.Fem	die-x
Personen	N.Reg.Nom.Pl.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
verschiedene	ADJA.Pos.Acc.Pl.Fem	verschieden-j
Systemdistributionen	N.Reg.Acc.Pl.Fem	Systemdistribution-n
entwickelt	VPP.Full.Psp	entwickeln-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
sehr	ADV	sehr-a
viel	ADV	viel-a
maßgebliche	ADJA.Pos.Acc.Sg.Fem	maßgeblich-j
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
-	SYM.Pun.Hyph	--x
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Natur	N.Reg.Dat.Sg.Fem	Natur-n
der	ART.Def.Gen.Sg.Fem	die-x
Sache	N.Reg.Gen.Sg.Fem	Sache-n
-	SYM.Pun.Hyph	--x
sicher	ADJD.Pos	sicher-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
von	APPR	von-i
jemand	PRO.Indef.Subst.Dat.Sg.Masc	jemand-p
erledigt	VPP.Full.Psp	erledigen-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
unterstützt	VFIN.Full.3.Sg.Pres.Ind	unterstützen-v
sowohl	CONJ.Coord	sowohl-c
GNU-Systeme	N.Reg.Nom.Pl.Neut	GNU-System-n
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
auch	ADV	auch-a
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Free	N.Name.*.*.*	Free-n
Software	N.Reg.Nom.Sg.Fem	Software-n
Foundation	N.Name.*.*.*	Foundation-n
(	SYM.Paren.Left	(-x
<g/>
FSF	N.Name.Nom.Sg.*	FSF-n
<g/>
)	SYM.Paren.Right	)-x
unterstützte	VFIN.Full.3.Sg.Past.Ind	unterstützen-v
die	ART.Def.Acc.Sg.Fem	die-x
Überarbeitung	N.Reg.Acc.Sg.Fem	Überarbeitung-n
der	ART.Def.Gen.Pl.*	die-x
Linux-bedingten	N.Reg.Gen.Pl.*	Linux-bedingte-n
Erweiterungen	N.Reg.Nom.Pl.Fem	Erweiterung-n
zur	APPRART.Dat.Sg.Fem	zu-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
C-Bibliothek	N.Reg.Nom.Sg.Fem	C-Bibliothek-n
finanziell	ADJD.Pos	finanziell-j
<g/>
,	SYM.Pun.Comma	,-x
sodass	CONJ.SubFin	sodass-c
diese	PRO.Dem.Subst.Nom.Pl.Masc	diese-p
nun	ADV	nun-a
gut	ADJD.Pos	gut-j
integriert	VPP.Full.Psp	integrieren-v
und	CONJ.Coord	und-c
die	ART.Def.Acc.Pl.Masc	die-x
neuesten	ADJA.Sup.Acc.Pl.Masc	neu-j
GNU	N.Reg.Acc.Pl.Masc	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systeme	N.Reg.Nom.Pl.Neut	Linux-System-n
die	ART.Def.Acc.Sg.Fem	die-x
aktuelle	ADJA.Pos.Acc.Sg.Fem	aktuell-j
Freigabe	N.Reg.Acc.Sg.Fem	Freigabe-n
der	ART.Def.Gen.Sg.Fem	die-x
Bibliothek	N.Reg.Gen.Sg.Fem	Bibliothek-n
unverändert	ADJD.Pos	unverändert-j
nutzen	VINF.Full	nutzen-v
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
FSF	N.Name.Nom.Sg.Fem	FSF-n
unterstützte	VFIN.Full.3.Sg.Past.Ind	unterstützen-v
auch	ADV	auch-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
frühes	ADJA.Pos.Acc.Sg.Neut	früh-j
Entwicklungsstadium	N.Reg.Acc.Sg.Neut	Entwicklungsstadium-n
von	APPR	von-i
Debian	N.Name.Dat.Sg.Neut	Debian-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
finanziell	ADJD.Pos	finanziell-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gegenwärtig	ADJD.Pos	gegenwärtig-j
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
verschiedene	ADJA.Pos.Acc.Pl.Fem	verschieden-j
Varianten	N.Reg.Acc.Pl.Fem	Variante-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU	N.Reg.Gen.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systems	N.Reg.Gen.Sg.Neut	Linux-System-n
(	SYM.Paren.Left	(-x
<g/>
vielfach	ADV	vielfach-a
Distributionen	N.Reg.Acc.Pl.Fem	Distribution-n
genannt	VPP.Full.Psp	nennen-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.*	die-x
meisten	PRO.Indef.Subst.Nom.Pl.*	meiste-p
enthalten	ADJD.Pos	enthalten-j
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
-	SYM.Pun.Hyph	--x
deren	PRO.Rel.Attr.Gen.Sg.Fem	die-p
Entwickler	N.Reg.Nom.Sg.Masc	Entwickler-n
eher	ADV	eher-a
der	ART.Def.Nom.Sg.Masc	die-x
mit	APPR	mit-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
anstatt	APPR	anstatt-i
der	ART.Def.Gen.Sg.Fem	die-x
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
verbundenen	ADJA.Pos.Gen.Sg.Fem	verbunden-j
Philosophie	N.Reg.Gen.Sg.Fem	Philosophie-n
folgen	VINF.Full	folgen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
auch	ADV	auch-a
völlig	ADJD.Pos	völlig-j
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Name.Nom.Pl.Fem	Linux-Distributionen-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
FSF	N.Name.Nom.Sg.Fem	FSF-n
unterstützt	VFIN.Full.3.Sg.Pres.Ind	unterstützen-v
gNewSense	ADJD.Pos	gNewSense-j
mit	APPR	mit-i
EDV-Fazilitäten	N.Reg.Dat.Pl.Fem	EDV-Fazilität-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distribution	N.Name.Nom.Sg.Fem	Linux-Distribution-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
der	ART.Def.Gen.Sg.Fem	die-x
Beseitigung	N.Reg.Gen.Sg.Fem	Beseitigung-n
verschiedener	ADJA.Pos.Gen.Pl.Neut	verschieden-j
unfreier	ADJA.Pos.Gen.Pl.Neut	unfrei-j
Programme	N.Reg.Gen.Pl.Neut	Programm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Heutzutage	ADV	heutzutage-a
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
die	ART.Def.Nom.Sg.Fem	die-x
übliche	ADJA.Pos.Nom.Sg.Fem	üblich-j
Version	N.Reg.Nom.Sg.Fem	Version-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
auch	ADV	auch-a
unfreie	ADJA.Pos.Acc.Pl.Neut	unfrei-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Programme	N.Reg.Nom.Pl.Neut	Programm-n
sollen	VFIN.Mod.3.Pl.Pres.Ind	sollen-v
beim	APPRART.Dat.Sg.Masc	bei-i
Start	N.Reg.Dat.Sg.Masc	Start-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
in	APPR	in-i
Ein	ART.Indef.Acc.Sg.Neut	eine-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Ausgabegeräte	N.Reg.Dat.Sg.Neut	Ausgabegerät-n
geladen	VPP.Full.Psp	laden-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
und	CONJ.Coord	und-c
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
als	APPR	als-i
lange	ADJA.Pos.Nom.Pl.Fem	lang-j
Zahlenreihen	N.Reg.Nom.Pl.Fem	Zahlenreihe-n
im	APPRART.Dat.Sg.Masc	in-i
"	SYM.Quot.Left	"-x
<g/>
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
<g/>
"	SYM.Quot.Left	"-x
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
enthalten	VPP.Full.Psp	enthalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Somit	ADV	somit-a
beinhaltet	VFIN.Full.3.Sg.Pres.Ind	beinhalten-v
die	ART.Def.Nom.Sg.Fem	die-x
Pflege	N.Reg.Nom.Sg.Fem	Pflege-n
freier	ADJA.Pos.Gen.Sg.Fem	frei-j
GNU	N.Name.Gen.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Name.Nom.Pl.Fem	Linux-Distributionen-n
nun	ADV	nun-a
ebenfalls	ADV	ebenfalls-a
die	ART.Def.Acc.Sg.Fem	die-x
Pflege	N.Reg.Acc.Sg.Fem	Pflege-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
freien	ADJA.Pos.Gen.Sg.Fem	frei-j
Variante	N.Reg.Gen.Sg.Fem	Variante-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ob	CONJ.SubFin	ob-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
GNU	N.Name.Dat.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
benutzen	VFIN.Full.3.Pl.Pres.Ind	benutzen-v
oder	CONJ.Coord	oder-c
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
bitte	ADV	bitte-a
irritieren	VFIN.Full.3.Pl.Pres.Ind	irritieren-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Acc.Sg.Fem	Öffentlichkeit-n
nicht	PART.Neg	nicht-x
durch	APPR	durch-i
doppeldeutigen	ADJA.Pos.Acc.Sg.Masc	doppeldeutig-j
Gebrauch	N.Reg.Acc.Sg.Masc	Gebrauch-n
des	ART.Def.Gen.Sg.Masc	die-x
Namens	N.Reg.Gen.Sg.Masc	Name-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
einer	PRO.Indef.Subst.Dat.Sg.Fem	eine-p
der	ART.Def.Gen.Pl.Fem	die-x
unbedingt	ADJD.Pos	unbedingt-j
erforderlichen	ADJA.Pos.Gen.Pl.Fem	erforderlich-j
Hauptkomponenten	N.Reg.Gen.Pl.Fem	Hauptkomponente-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
als	APPR	als-i
Ganzes	N.Reg.Nom.Sg.Neut	Ganze-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
grundsätzlich	ADJD.Pos	grundsätzlich-j
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
mit	APPR	mit-i
hinzugefügtem	ADJA.Pos.Dat.Sg.Neut	hinzugefügt-j
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
über	APPR	über-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Kombination	N.Reg.Acc.Sg.Fem	Kombination-n
sprechen	VFIN.Full.3.Pl.Pres.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
bitte	ADV	bitte-a
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
zu	APPR	zu-i
Referenzzwecken	N.Reg.Dat.Pl.Fem	Referenzzwecke-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Verweis	N.Reg.Acc.Sg.Masc	Verweis-n
auf	APPR	auf-i
GNU	N.Reg.Acc.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
anlegen	VFIN.Full.3.Pl.Pres.Ind	anlegen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
sowohl	CONJ.Coord	sowohl-c
dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
Dokument	N.Reg.Nom.Sg.Neut	Dokument-n
als	CONJ.Coord	als-c
auch	ADV	auch-a
https://www.gnu.org/gnu/the-gnu-project.html	N.Name	[url]-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
gute	ADJA.Pos.Acc.Sg.Fem	gut-j
Wahl	N.Reg.Acc.Sg.Fem	Wahl-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
erwähnen	VINF.Full	erwähnen-v
und	CONJ.Coord	und-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
Verweis	N.Reg.Acc.Sg.Masc	Verweis-n
für	APPR	für-i
weitere	ADJA.Comp.Acc.Sg.Fem	weit-j
Referenz	N.Reg.Acc.Sg.Fem	Referenz-n
hinzufügen	VFIN.Full.3.Pl.Pres.Ind	hinzufügen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
http://foldoc.org/linux	N.Name.Nom.Sg.*	[url]-n
eine	ART.Indef.Nom.Sg.Fem	eine-x
gute	ADJA.Pos.Nom.Sg.Fem	gut-j
Adresse	N.Reg.Nom.Sg.Fem	Adresse-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nachtrag	N.Reg.Nom.Sg.Masc	Nachtrag-n
</s>
</align>
<align>
<s>
Abgesehen	VPP.Full.Psp	absehen-v
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
anderes	ADJA.Pos.Nom.Sg.Neut	ander-j
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
unabhängig	ADJD.Pos	unabhängig-j
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
unixoides	ADJA.Pos.Acc.Sg.Neut	unixoid-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
hergestellt	VPP.Full.Psp	herstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
System	N.Reg.Nom.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
als	APPR	als-i
BSD	N.Reg.Nom.Sg.Neut	BSD-n
bekannt	ADJD.Pos	bekannt-j
und	CONJ.Coord	und-c
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
University	N.Name.Dat.Sg.Fem	University-n
of	N.Name.*.*.*	of-n
California	N.Name.Nom.Sg.Neut	California-n
<g/>
,	SYM.Pun.Comma	,-x
Berkeley	N.Name.Nom.Sg.Neut	Berkeley-n
<g/>
,	SYM.Pun.Comma	,-x
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
80ern	N.Reg.Dat.Pl.Masc	80ern-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
unfrei	ADJD.Pos	unfrei-j
<g/>
,	SYM.Pun.Comma	,-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
aber	ADV	aber-a
Anfang	N.Reg.*.Sg.Masc	Anfang-n
der	ART.Def.Gen.Pl.*	die-x
90er	N.Reg.Gen.Pl.*	90er-n
frei	ADJD.Pos	frei-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
gegenwärtig	ADJD.Pos	gegenwärtig-j
existierendes	ADJA.Pos.Nom.Sg.Neut	existierend-j
freies	ADJA.Pos.Nom.Sg.Neut	frei-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
4	CARD	4-m
<g/>
)	SYM.Paren.Right	)-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
höchstwahrscheinlich	ADJD.Pos	höchstwahrscheinlich-j
entweder	CONJ.Coord	entweder-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Variante	N.Reg.Nom.Sg.Fem	Variante-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
oder	CONJ.Coord	oder-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Art	N.Reg.Nom.Sg.Fem	Art-n
von	APPR	von-i
BSD-System	N.Reg.Dat.Sg.Neut	BSD-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Manchmal	ADV	manchmal-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
angefragt	VPP.Full.Psp	anfragen-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
BSD	N.Name.Nom.Sg.*	BSD-n
auch	ADV	auch-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Variante	N.Reg.Acc.Sg.Fem	Variante-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
BSD-Entwickler	N.Reg.Nom.Pl.Masc	BSD-Entwickler-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
angeregt	VPP.Full.Psp	anregen-v
<g/>
,	SYM.Pun.Comma	,-x
ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
am	APPRART.Dat.Sg.Neut	an-i
Beispiel	N.Reg.Dat.Sg.Neut	Beispiel-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
zu	PART.Zu	zu-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
nachdrückliche	ADJA.Pos.Acc.Pl.Masc	nachdrücklich-j
Appelle	N.Reg.Acc.Pl.Masc	Appell-n
von	APPR	von-i
GNU-Aktivisten	N.Reg.Dat.Pl.Masc	GNU-Aktivist-n
halfen	VFIN.Full.3.Pl.Past.Ind	helfen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
zu	PART.Zu	zu-x
überzeugen	VINF.Full	überzeugen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
der	ART.Def.Nom.Sg.Masc	die-x
Quellcode	N.Reg.Nom.Sg.Masc	Quellcode-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
kaum	ADV	kaum-a
Überschneidungen	N.Reg.Acc.Pl.Fem	Überschneidung-n
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
BSD-Systeme	N.Reg.Nom.Pl.Neut	BSD-System-n
nutzen	VFIN.Full.3.Pl.Pres.Ind	nutzen-v
heute	ADV	heute-a
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
GNU-Programme	N.Reg.Acc.Pl.Neut	GNU-Programm-n
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
und	CONJ.Coord	und-c
seine	PRO.Poss.Attr.Nom.Pl.Fem	seine-p
Varianten	N.Reg.Nom.Pl.Fem	Variante-n
ebenso	ADV	ebenso-a
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
BSD-Programme	N.Reg.Acc.Pl.Neut	BSD-Programm-n
nutzen	VINF.Full	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Allerdings	ADV	allerdings-a
<g/>
,	SYM.Pun.Comma	,-x
als	APPR	als-i
Ganzes	N.Reg.Acc.Sg.Neut	Ganze-n
betrachtet	VFIN.Full.3.Sg.Pres.Ind	betrachten-v
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
zwei	CARD	zwei-m
verschiedene	ADJA.Pos.Acc.Pl.Neut	verschieden-j
Systeme	N.Reg.Acc.Pl.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
separat	ADJD.Pos	separat-j
entwickelt	VPP.Full.Psp	entwickeln-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
BSD-Entwickler	N.Reg.Nom.Pl.Masc	BSD-Entwickler-n
schrieben	VFIN.Full.3.Pl.Past.Ind	schreiben-v
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
und	CONJ.Coord	und-c
fügten	VFIN.Full.3.Pl.Past.Ind	fügen-v
diesen	PRO.Dem.Subst.Acc.Sg.Masc	diese-p
dem	ART.Def.Dat.Sg.Neut	die-x
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
hinzu	PART.Verb	hinzu-x
<g/>
,	SYM.Pun.Comma	,-x
daher	PROADV.Dem	daher-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
Name	N.Reg.Nom.Sg.Masc	Name-n
wie	CONJ.Comp	wie-c
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
BSD	N.Name.Nom.Sg.*	BSD-n
der	ART.Def.Dat.Sg.Fem	die-x
Situation	N.Reg.Dat.Sg.Fem	Situation-n
<g/>
(	SYM.Paren.Left	(-x
<g/>
5	CARD	5-m
<g/>
)	SYM.Paren.Right	)-x
nicht	PART.Neg	nicht-x
gerecht	VPP.Full.Psp	rechen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/why-gnu-linux.html	N.Name.*.*.*	[url]-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
Schall	N.Name.Nom.Sg.*	Schall-n
und	CONJ.Coord	und-c
Rauch	N.Name.Nom.Sg.*	Rauch-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
</s>
</align>
<align>
<s>
Weitere	ADJA.Comp.Nom.Pl.Fem	weit-j
Informationen	N.Reg.Nom.Pl.Fem	Information-n
zu	APPR	zu-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Thema	N.Reg.Dat.Sg.Neut	Thema-n
finden	VFIN.Full.3.Pl.Pres.Ind	finden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
unter	APPR	unter-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
:	SYM.Pun.Colon	:-x
Häufig	ADJD.Pos	häufig-j
gestellte	ADJA.Pos.Nom.Pl.Fem	gestellt-j
Fragen	N.Reg.Nom.Pl.Fem	Frage-n
<g/>
,	SYM.Pun.Comma	,-x
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
und	CONJ.Coord	und-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Nom.Sg.Fem	eine-x
Historie	N.Reg.Nom.Sg.Fem	Historie-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU	N.Reg.Gen.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systems	N.Reg.Gen.Sg.Neut	Linux-System-n
und	CONJ.Coord	und-c
wie	PROADV.Inter	wie-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zur	APPRART.Dat.Sg.Fem	zu-i
Benennung	N.Reg.Dat.Sg.Fem	Benennung-n
kam	VFIN.Full.3.Sg.Past.Ind	kommen-v
<g/>
,	SYM.Pun.Comma	,-x
sowie	CONJ.Coord	sowie-c
GNU-Nutzer	N.Reg.Nom.Pl.Masc	GNU-Nutzer-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
noch	ADV	noch-a
nie	ADV	nie-a
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
gehört	VPP.Full.Psp	gehören|hören-v
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Namen	N.Reg.Nom.Pl.Masc	Name-n
vermitteln	VFIN.Full.3.Pl.Pres.Ind	vermitteln-v
Bedeutungen	N.Reg.Acc.Pl.Fem	Bedeutung-n
<g/>
;	SYM.Pun.Sent	;-x
die	ART.Def.Nom.Sg.Fem	die-x
Wahl	N.Reg.Nom.Sg.Fem	Wahl-n
der	ART.Def.Gen.Pl.Masc	die-x
Namen	N.Reg.Gen.Pl.Masc	Name-n
bestimmt	VFIN.Full.3.Sg.Pres.Ind	bestimmen-v
die	ART.Def.Acc.Sg.Fem	die-x
Bedeutung	N.Reg.Acc.Sg.Fem	Bedeutung-n
dessen	PRO.Dem.Subst.Gen.Sg.Neut	die-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sagen	VFIN.Full.1.Pl.Pres.Ind	sagen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
unangebrachter	ADJA.Pos.Nom.Sg.Masc	unangebracht-j
Name	N.Reg.Nom.Sg.Masc	Name-n
vermittelt	VFIN.Full.3.Sg.Pres.Ind	vermitteln-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Vorstellung	N.Reg.Acc.Sg.Fem	Vorstellung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
Rose	N.Reg.Nom.Sg.Fem	Rose-n
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
anderen	ADJA.Pos.Dat.Sg.Masc	ander-j
Namen	N.Reg.Dat.Sg.Masc	Name-n
ebenso	ADV	ebenso-a
süß	ADJD.Pos	süß-j
duften	ADJA.Pos.Nom.Pl.Masc	dufte-j
–	TRUNC.Noun	–-x
aber	CONJ.Coord	aber-c
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Stift	N.Reg.Acc.Sg.Masc	Stift-n
nennt	VFIN.Full.3.Sg.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
die	ART.Def.Nom.Pl.Masc	die-x
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
versuchen	VFIN.Full.3.Pl.Pres.Ind	versuchen-v
damit	PROADV.Dem	damit-x
zu	PART.Verb	zu-x
schreiben	VFIN.Full.3.Pl.Pres.Ind	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
ziemlich	ADV	ziemlich-a
enttäuscht	VPP.Full.Psp	enttäuschen-v
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
Stifte	VFIN.Full.3.Sg.Pres.Subj	stiften-v
"	SYM.Quot.Left	"-x
<g/>
Rosen	N.Reg.Acc.Pl.Fem	Rose-n
<g/>
"	SYM.Quot.Left	"-x
nennt	VFIN.Full.3.Sg.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
erkennen	VINF.Full	erkennen-v
<g/>
,	SYM.Pun.Comma	,-x
wofür	PROADV.Inter	wofür-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
gut	ADJD.Pos	gut-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
unser	PRO.Poss.Attr.Acc.Sg.Neut	unsre-p
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennt	VFIN.Full.3.Sg.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
vermittelt	VFIN.Full.3.Sg.Pres.Ind	vermitteln-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Vorstellung	N.Reg.Acc.Sg.Fem	Vorstellung-n
über	APPR	über-i
Herkunft	N.Reg.Acc.Sg.Fem	Herkunft-n
<g/>
,	SYM.Pun.Comma	,-x
Geschichte	N.Reg.Acc.Sg.Fem	Geschichte-n
und	CONJ.Coord	und-c
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nennt	VFIN.Full.3.Sg.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
vermittelt	VFIN.Full.3.Sg.Pres.Ind	vermitteln-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
(	SYM.Paren.Left	(-x
<g/>
wenn	CONJ.SubFin	wenn-c
auch	ADV	auch-a
nicht	PART.Neg	nicht-x
im	APPRART.Dat.Sg.Neut	in-i
Detail	N.Reg.Dat.Sg.Neut	Detail-n
<g/>
)	SYM.Paren.Right	)-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
genauere	ADJA.Comp.Acc.Sg.Fem	genau-j
Vorstellung	N.Reg.Acc.Sg.Fem	Vorstellung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
wirklich	ADJD.Pos	wirklich-j
für	APPR	für-i
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
wichtig	ADJD.Pos	wichtig-j
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wichtig	ADJD.Pos	wichtig-j
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
Herkunft	N.Reg.Nom.Sg.Fem	Herkunft-n
<g/>
,	SYM.Pun.Comma	,-x
Geschichte	N.Reg.Nom.Sg.Fem	Geschichte-n
und	CONJ.Coord	und-c
Ziele	N.Reg.Nom.Pl.Neut	Ziel-n
bekannt	ADJD.Pos	bekannt-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ja	PART.Ans	ja-x
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Geschichte	N.Reg.Acc.Sg.Fem	Geschichte-n
vergessen	VINF.Full	vergessen-v
<g/>
,	SYM.Pun.Comma	,-x
oft	ADV	oft-a
dazu	PROADV.Dem	dazu-x
verdammt	VPP.Full.Psp	verdammen-v
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
wiederholen	VINF.Full	wiederholen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Welt	N.Reg.Nom.Sg.Fem	Welt-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
um	APPR	um-i
GNU	N.Reg.Acc.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
entwickelt	VPP.Full.Psp	entwickeln-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
sicher	ADJD.Pos	sicher-j
genug	ADV	genug-a
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
zu	PART.Zu	zu-x
überleben	VINF.Full	überleben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
Probleme	N.Reg.Nom.Pl.Neut	Problem-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
zur	APPRART.Dat.Sg.Fem	zu-i
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
veranlasst	VPP.Full.Psp	veranlassen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
völlig	ADJD.Pos	völlig-j
ausgerottet	VPP.Full.Psp	ausrotten-v
und	CONJ.Coord	und-c
drohen	VFIN.Full.3.Pl.Pres.Ind	drohen-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
wiederholen	VINF.Full	wiederholen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
erkläre	VFIN.Full.1.Sg.Pres.Ind	erklären-v
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
angebracht	ADJD.Pos	angebracht-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
eher	ADV	eher-a
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
manchmal	ADV	manchmal-a
so	ADV	so-a
reagiert	VPP.Full.Psp	reagieren-v
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Angenommen	ADJD.Pos	angenommen-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
für	APPR	für-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
verdienen	VINF.Full	verdienen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wirklich	ADJD.Pos	wirklich-j
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Theater	N.Reg.Acc.Sg.Neut	Theater-n
wert	ADJD.Pos	wert-j
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
Anwender	N.Reg.Nom.Pl.Masc	Anwender-n
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
zollen	VFIN.Full.3.Pl.Pres.Ind	zollen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
das	ART.Def.Nom.Sg.Neut	die-x
Wichtigste	N.Reg.Nom.Sg.Neut	Wichtigste-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
gemacht	VPP.Full.Psp	machen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
entspannen	VINF.Full	entspannen-v
<g/>
,	SYM.Pun.Comma	,-x
stolz	ADJD.Pos	stolz-j
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
geleistete	ADJA.Pos.Acc.Sg.Fem	geleistet-j
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
sein	VINF.Aux	sein-v
und	CONJ.Coord	und-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
um	APPR	um-i
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
Sorgen	N.Reg.Acc.Pl.Fem	Sorge-n
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
kluger	ADJA.Pos.Nom.Sg.Masc	klug-j
Ratschlag	N.Reg.Nom.Sg.Masc	Ratschlag-n
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
nur	ADV	nur-a
der	ART.Def.Dat.Sg.Fem	die-x
Situation	N.Reg.Dat.Sg.Fem	Situation-n
entsprechen	VINF.Full	entsprechen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
–	TRUNC.Noun	–-x
wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Sg.Fem	die-x
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
schon	ADV	schon-a
erledigt	VPP.Full.Psp	erledigen-v
und	CONJ.Coord	und-c
Zeit	N.Reg.Nom.Sg.Fem	Zeit-n
zum	APPRART.Dat.Sg.Neut	zu-i
Entspannen	N.Reg.Dat.Sg.Neut	Entspannen-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
nur	ADV	nur-a
wahr	ADJD.Pos	wahr-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
reichlich	PRO.Indef.Attr.*.*.*	reichlich-p
Herausforderungen	N.Reg.Acc.Pl.Fem	Herausforderung-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
die	ART.Def.Nom.Sg.Fem	die-x
Zeit	N.Reg.Nom.Sg.Fem	Zeit-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
Zukunft	N.Reg.Acc.Sg.Fem	Zukunft-n
als	APPR	als-i
selbstverständlich	ADJD.Pos	selbstverständlich-j
zu	PART.Zu	zu-x
betrachten	VINF.Full	betrachten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Stärke	N.Reg.Nom.Sg.Fem	Stärke-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
beruht	VFIN.Full.3.Sg.Pres.Ind	beruhen-v
auf	APPR	auf-i
Engagement	N.Reg.Acc.Sg.Neut	Engagement-n
für	APPR	für-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Zusammenarbeit	N.Reg.Acc.Sg.Fem	Zusammenarbeit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Möglichkeit	N.Reg.Nom.Sg.Fem	Möglichkeit-n
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
daran	PROADV.Dem	daran-x
zu	PART.Zu	zu-x
erinnern	VINF.Full	erinnern-v
und	CONJ.Coord	und-c
andere	PRO.Indef.Subst.Nom.Sg.Neut	andere-p
über	APPR	über-i
die	ART.Def.Acc.Pl.Neut	die-x
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
zu	PART.Zu	zu-x
informieren	VINF.Full	informieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
möglich	ADJD.Pos	möglich-j
<g/>
,	SYM.Pun.Comma	,-x
gute	ADJA.Pos.Acc.Pl.Fem	gut-j
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
an	APPR	an-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
zu	PART.Zu	zu-x
denken	VINF.Full	denken-v
<g/>
;	SYM.Pun.Sent	;-x
viel	ADV	viel-a
gute	ADJA.Pos.Nom.Sg.Fem	gut-j
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
auch	ADV	auch-a
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
geleistet	VPP.Full.Psp	leisten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
der	ART.Def.Nom.Sg.Masc	die-x
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
schon	ADV	schon-a
immer	ADV	immer-a
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Philosophie	N.Reg.Dat.Sg.Fem	Philosophie-n
geprägt	VPP.Full.Psp	prägen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Verpflichtung	N.Reg.Acc.Sg.Fem	Verpflichtung-n
zur	APPRART.Dat.Sg.Fem	zu-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
zusammenzuarbeiten	VINF.Full.zu	zusammenarbeiten-v
übernimmt	VFIN.Full.3.Sg.Pres.Ind	übernehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
zunehmend	ADJD.Pos	zunehmend-j
von	APPR	von-i
Unternehmen	N.Reg.Dat.Sg.Neut	Unternehmen-n
verwendet	VPP.Full.Psp	verwenden-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sogar	ADV	sogar-a
noch	ADV	noch-a
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Schwierigkeiten	N.Reg.Acc.Pl.Fem	Schwierigkeit-n
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
mit	APPR	mit-i
Gemeinschaftsgeist	N.Reg.Dat.Sg.Masc	Gemeinschaftsgeist-n
in	APPR	in-i
Verbindung	N.Reg.Dat.Sg.Fem	Verbindung-n
zu	PART.Zu	zu-x
bringen	VINF.Full	bringen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
große	ADJA.Pos.Nom.Sg.Fem	groß-j
Herausforderung	N.Reg.Nom.Sg.Fem	Herausforderung-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Zukunft	N.Reg.Acc.Sg.Fem	Zukunft-n
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
tendenziell	ADJD.Pos	tendenziell-j
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Distributoren	N.Reg.Nom.Pl.Masc	Distributor-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
von	APPR	von-i
Benutzerfreundlichkeit	N.Reg.Dat.Sg.Fem	Benutzerfreundlichkeit-n
und	CONJ.Coord	und-c
Leistung	N.Reg.Dat.Sg.Fem	Leistung-n
zu	PART.Deg	zu-x
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
hinzufügen	VINF.Full	hinzufügen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Alle	PRO.Indef.Attr.Nom.Pl.Fem	alle-p
großen	ADJA.Pos.Nom.Pl.Fem	groß-j
kommerziellen	ADJA.Pos.Nom.Pl.Fem	kommerziell-j
Distributionen	N.Reg.Nom.Pl.Fem	Distribution-n
tun	VFIN.Full.3.Pl.Pres.Ind	tun-v
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
<g/>
,	SYM.Pun.Comma	,-x
keine	PRO.Indef.Subst.Nom.Sg.Fem	keine-p
beschränkt	VFIN.Full.3.Sg.Pres.Ind	beschränken-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auf	APPR	auf-i
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.*	die-x
meisten	PRO.Indef.Subst.Nom.Pl.*	meiste-p
kennzeichnen	VFIN.Full.3.Pl.Pres.Ind	kennzeichnen-v
die	ART.Def.Acc.Pl.Neut	die-x
unfreien	ADJA.Pos.Acc.Pl.Neut	unfrei-j
Pakete	N.Reg.Acc.Pl.Neut	Paket-n
nicht	PART.Neg	nicht-x
eindeutig	ADJD.Pos	eindeutig-j
genug	ADV	genug-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
entwickeln	VFIN.Full.3.Pl.Pres.Ind	entwickeln-v
sogar	ADV	sogar-a
unfreie	ADJA.Pos.Acc.Pl.Fem	unfrei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
und	CONJ.Coord	und-c
fügen	VFIN.Full.3.Pl.Pres.Ind	fügen-v
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
dem	ART.Def.Dat.Sg.Neut	die-x
System	N.Reg.Dat.Sg.Neut	System-n
hinzu	PART.Verb	hinzu-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
werben	VFIN.Full.3.Pl.Pres.Ind	werben-v
unverschämt	ADJD.Pos	unverschämt-j
für	APPR	für-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Systeme	N.Reg.Nom.Pl.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
pro	APPR	pro-i
Einzelplatz	N.Reg.Dat.Sg.Masc	Einzelplatz-n
lizenziert	VPP.Full.Psp	lizenzieren-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
dem	ART.Def.Dat.Sg.Masc	die-x
Nutzer	N.Reg.Dat.Sg.Masc	Nutzer-n
ebenso	ADV	ebenso-a
viel	PRO.Indef.Attr.*.*.*	viel-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
wie	CONJ.Comp	wie-c
Microsoft	N.Name.Nom.Sg.*	Microsoft-n
Windows	N.Name.*.*.*	Windows-n
geben	VINF.Full	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
versucht	VFIN.Full.3.Sg.Pres.Ind	versuchen-v
das	ART.Def.Acc.Sg.Neut	die-x
Hinzufügen	N.Reg.Acc.Sg.Neut	Hinzufügen-n
unfreier	ADJA.Pos.Gen.Pl.Fem	unfrei-j
Software	N.Reg.Gen.Pl.Fem	Software-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
der	ART.Def.Gen.Sg.Fem	die-x
"	SYM.Quot.Left	"-x
<g/>
Popularität	N.Reg.Gen.Sg.Fem	Popularität-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
rechtfertigen	VINF.Full	rechtfertigen-v
-	SYM.Pun.Hyph	--x
Beliebtheit	N.Reg.Nom.Sg.Fem	Beliebtheit-n
tatsächlich	ADJD.Pos	tatsächlich-j
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
wertschätzend	ADJD.Pos	wertschätzend-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Manchmal	ADV	manchmal-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
offen	ADJD.Pos	offen-j
zugegeben	VPP.Full.Psp	zugeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
The	N.Name.*.*.*	The-n
Wired	N.Name.*.*.*	Wired-n
Magazine	N.Name.*.*.*	Magazin-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Robert	N.Name.Nom.Sg.Masc	Robert-n
McMillan	N.Name.Nom.Sg.Masc	McMillan-n
<g/>
,	SYM.Pun.Comma	,-x
Chefredakteur	N.Reg.Nom.Sg.Masc	Chefredakteur-n
The	FM	The-x
Linux	N.Reg.Acc.Sg.Neut	Linux-n
Magazine	N.Name.Gen.Sg.Neut	Magazin-n
<g/>
,	SYM.Pun.Comma	,-x
"	SYM.Quot.Left	"-x
<g/>
findet	VFIN.Full.3.Sg.Pres.Ind	finden-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
Bewegung	N.Reg.Nom.Sg.Fem	Bewegung-n
in	APPR	in-i
Richtung	N.Reg.Acc.Sg.Fem	Richtung-n
Open-Source-Software	N.Reg.Nom.Sg.Fem	Open-Source-Software-n
durch	APPR	durch-i
technische	ADJA.Pos.Acc.Pl.Fem	technisch-j
anstatt	CONJ.SubInf	anstatt-c
politische	ADJA.Pos.Acc.Pl.Fem	politisch-j
Entscheidungen	N.Reg.Acc.Pl.Fem	Entscheidung-n
angetrieben	VPP.Full.Psp	antreiben-v
werden	VINF.Aux	werden-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
Und	CONJ.Coord	und-c
Calderas	N.Name.Gen.Sg.*	Caldera-n
Vorstandsvorsitzender	N.Reg.Nom.Sg.Masc	Vorstandsvorsitzende-n
nötigte	VFIN.Full.3.Sg.Past.Ind	nötigen-v
Benutzer	N.Reg.Acc.Sg.Masc	Benutzer-n
offen	PART.Verb	offen-x
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
fallen	VINF.Full	fallen-v
zu	PART.Zu	zu-x
lassen	VINF.Full	lassen-v
und	CONJ.Coord	und-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
stattdessen	PROADV.Dem	stattdessen-x
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
"	SYM.Quot.Left	"-x
<g/>
Beliebtheit	N.Reg.Acc.Sg.Fem	Beliebtheit-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
einzusetzen	VINF.Full.zu	einsetzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dem	ART.Def.Dat.Sg.*	die-x
GNU	N.Name.Dat.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
hinzuzufügen	VINF.Full.zu	hinzufügen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
zwar	ADV	zwar-a
die	ART.Def.Nom.Sg.Fem	die-x
Popularität	N.Reg.Nom.Sg.Fem	Popularität-n
erhöhen	VINF.Full	erhöhen-v
<g/>
,	SYM.Pun.Comma	,-x
sofern	CONJ.SubFin	sofern-c
unter	APPR	unter-i
Popularität	N.Reg.Dat.Sg.Fem	Popularität-n
die	ART.Def.Nom.Sg.Fem	die-x
Zahl	N.Reg.Nom.Sg.Fem	Zahl-n
der	ART.Def.Gen.Pl.Masc	die-x
Nutzer	N.Reg.Gen.Pl.Masc	Nutzer-n
gemeint	VPP.Full.Psp	meinen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
irgendetwas	PRO.Indef.Subst.*.*.Neut	irgendetwas-p
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
in	APPR	in-i
Kombination	N.Reg.Dat.Sg.Fem	Kombination-n
mit	APPR	mit-i
unfreier	ADJA.Pos.Dat.Sg.Fem	unfrei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gleichzeitig	ADJD.Pos	gleichzeitig-j
fördert	VFIN.Full.3.Sg.Pres.Ind	fördern-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
jedoch	ADV	jedoch-a
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
indirekt	ADJD.Pos	indirekt-j
<g/>
,	SYM.Pun.Comma	,-x
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
als	APPR	als-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
gute	ADJA.Pos.Acc.Sg.Fem	gut-j
Sache	N.Reg.Acc.Sg.Fem	Sache-n
zu	PART.Zu	zu-x
akzeptieren	VINF.Full	akzeptieren-v
und	CONJ.Coord	und-c
das	ART.Def.Acc.Sg.Neut	die-x
Ziel	N.Reg.Acc.Sg.Neut	Ziel-n
<g/>
,	SYM.Pun.Comma	,-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
aus	APPR	aus-i
den	ART.Def.Dat.Pl.Neut	die-x
Augen	N.Reg.Dat.Pl.Neut	Auge-n
zu	PART.Zu	zu-x
verlieren	VINF.Full	verlieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
gut	ADJD.Pos	gut-j
schneller	ADJD.Comp	schnell-j
zu	PART.Zu	zu-x
fahren	VINF.Full	fahren-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
auf	APPR	auf-i
der	ART.Def.Dat.Sg.Fem	die-x
Straße	N.Reg.Dat.Sg.Fem	Straße-n
bleiben	VINF.Full	bleiben-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Sg.Fem	die-x
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
"	SYM.Quot.Left	"-x
<g/>
Erweiterung	N.Reg.Nom.Sg.Fem	Erweiterung-n
<g/>
"	SYM.Quot.Left	"-x
eine	ART.Indef.Nom.Sg.Fem	eine-x
Bibliothek	N.Reg.Nom.Sg.Fem	Bibliothek-n
oder	CONJ.Coord	oder-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Programmierwerkzeug	N.Reg.Nom.Sg.Neut	Programmierwerkzeug-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Falle	N.Reg.Acc.Sg.Fem	Falle-n
für	APPR	für-i
Freie-Software-Entwickler	N.Reg.Acc.Pl.Masc	Freie-Software-Entwickler-n
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Schreiben	VFIN.Full.3.Pl.Pres.Ind	schreiben-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Freie	ADJA.Pos.Acc.Sg.Fem	frei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
von	APPR	von-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
unfreien	ADJA.Pos.Dat.Sg.Neut	unfrei-j
Paket	N.Reg.Dat.Sg.Neut	Paket-n
abhängt	VFIN.Full.3.Sg.Pres.Ind	abhängen-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
nicht	PART.Neg	nicht-x
Teil	N.Reg.Nom.Sg.Masc	Teil-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
vollständig	ADJD.Pos	vollständig-j
freien	ADJA.Pos.Gen.Sg.Neut	frei-j
Systems	N.Reg.Gen.Sg.Neut	System-n
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Motif	N.Reg.Nom.Sg.Masc	Motif-n
und	CONJ.Coord	und-c
Qt	N.Reg.Nom.Sg.Masc	Qt-n
lockten	VFIN.Full.3.Pl.Past.Ind	locken-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Vergangenheit	N.Reg.Dat.Sg.Fem	Vergangenheit-n
im	APPRART.Dat.Sg.Neut	in-i
großen	ADJA.Pos.Dat.Sg.Neut	groß-j
Maße	N.Reg.Dat.Sg.Neut	Maß-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Falle	N.Reg.Acc.Sg.Fem	Falle-n
und	CONJ.Coord	und-c
verursachten	ADJA.Pos.Acc.Pl.*	verursacht-j
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
<g/>
,	SYM.Pun.Comma	,-x
deren	PRO.Rel.Attr.Gen.Pl.Neut	die-p
Lösungen	N.Reg.Nom.Pl.Fem	Lösung-n
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
dauerte	VFIN.Full.3.Sg.Past.Ind	dauern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Motif	N.Name.Nom.Sg.Masc	Motif-n
blieb	VFIN.Full.3.Sg.Past.Ind	bleiben-v
so	ADV	so-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
wie	CONJ.Comp	wie-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Problem	N.Reg.Nom.Sg.Neut	Problem-n
<g/>
,	SYM.Pun.Comma	,-x
bis	CONJ.SubFin	bis-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
obsolet	ADJD.Pos	obsolet-j
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
verwendet	VPP.Full.Psp	verwenden-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Suns	N.Name.Gen.Sg.Neut	Suns-n
spätere	ADJA.Comp.Nom.Sg.Fem	spät-j
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Java-Umsetzung	N.Reg.Nom.Sg.Fem	Java-Umsetzung-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
ähnliche	ADJA.Pos.Acc.Sg.Fem	ähnlich-j
Wirkung	N.Reg.Acc.Sg.Fem	Wirkung-n
<g/>
:	SYM.Pun.Colon	:-x
die	ART.Def.Nom.Sg.Fem	die-x
glücklicherweise	ADV	glücklicherweise-a
nun	ADV	nun-a
größtenteils	ADV	größtenteils-a
korrigierte	ADJA.Pos.Nom.Sg.Fem	korrigiert-j
Java-Falle	N.Reg.Nom.Sg.Fem	Java-Falle-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
weiterhin	ADV	weiterhin-a
in	APPR	in-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Richtung	N.Reg.Acc.Sg.Fem	Richtung-n
bewegt	VFIN.Full.3.Sg.Pres.Ind	bewegen-v
<g/>
,	SYM.Pun.Comma	,-x
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Zukunft	N.Reg.Acc.Sg.Fem	Zukunft-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
in	APPR	in-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Mosaik	N.Reg.Acc.Sg.Neut	Mosaik-n
aus	APPR	aus-i
freien	ADJA.Pos.Dat.Pl.Fem	frei-j
und	CONJ.Coord	und-c
unfreien	ADJA.Pos.Dat.Pl.Fem	unfrei-j
Komponenten	N.Reg.Dat.Pl.Fem	Komponente-n
umleiten	VINF.Full	umleiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
fünf	CARD	fünf-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sicherlich	ADV	sicherlich-a
noch	ADV	noch-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Menge	N.Reg.Acc.Sg.Fem	Menge-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
geben	VINF.Full	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
aber	ADV	aber-a
nicht	PART.Neg	nicht-x
aufpassen	VFIN.Full.1.Pl.Pres.Ind	aufpassen-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
kaum	ADV	kaum-a
ohne	APPR	ohne-i
die	ART.Def.Acc.Sg.Fem	die-x
unfreie	ADJA.Pos.Acc.Sg.Fem	unfrei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
einsetzbar	ADJD.Pos	einsetzbar-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Masc	die-x
Nutzer	N.Reg.Acc.Pl.Masc	Nutzer-n
mit	APPR	mit-i
ihr	PRO.Pers.Subst.3.Dat.Sg.Fem	sie-p
vorzufinden	VINF.Full.zu	vorfinden-v
erwarten	VFIN.Full.3.Pl.Pres.Ind	erwarten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
geschieht	VFIN.Full.3.Sg.Pres.Ind	geschehen-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
unser	PRO.Poss.Attr.Nom.Sg.Masc	unsre-p
Kampf	N.Reg.Nom.Sg.Masc	Kampf-n
für	APPR	für-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
fehlgeschlagen	VPP.Full.Psp	fehlschlagen-v
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Freigabe	N.Reg.Nom.Sg.Fem	Freigabe-n
freier	ADJA.Pos.Gen.Pl.Fem	frei-j
Alternativen	N.Reg.Gen.Pl.Fem	Alternative-n
nur	ADV	nur-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Frage	N.Reg.Acc.Sg.Fem	Frage-n
der	ART.Def.Gen.Sg.Fem	die-x
Programmierung	N.Reg.Gen.Sg.Fem	Programmierung-n
<g/>
,	SYM.Pun.Comma	,-x
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
die	ART.Def.Acc.Sg.Fem	die-x
Lösung	N.Reg.Acc.Sg.Fem	Lösung-n
künftiger	ADJA.Pos.Gen.Pl.Neut	künftig-j
Probleme	N.Reg.Gen.Pl.Neut	Problem-n
einfacher	ADJD.Comp	einfach-j
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
die	ART.Def.Acc.Pl.Fem	die-x
Entwicklungsressourcen	N.Reg.Acc.Pl.Fem	Entwicklungsressource-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
zu	PART.Zu	zu-x
erhöhen	VINF.Full	erhöhen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sehen	VFIN.Full.1.Pl.Pres.Ind	sehen-v
uns	PRO.Refl.Subst.1.Acc.Pl.*	sie-p
mit	APPR	mit-i
Hindernissen	N.Reg.Dat.Pl.Neut	Hindernis-n
konfrontiert	VPP.Full.Psp	konfrontieren-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
drohen	VFIN.Full.3.Pl.Pres.Ind	drohen-v
<g/>
,	SYM.Pun.Comma	,-x
dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
schwerer	ADJD.Comp	schwer-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
:	SYM.Pun.Colon	:-x
Gesetze	N.Reg.Nom.Pl.Neut	Gesetz-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
verbieten	VINF.Full	verbieten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
Softwarepatente	N.Reg.Nom.Pl.Neut	Softwarepatent-n
auftürmen	VFIN.Full.3.Pl.Pres.Ind	auftürmen-v
und	CONJ.Coord	und-c
Gesetze	N.Reg.Nom.Pl.Neut	Gesetz-n
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
Digital	N.Name.*.*.*	Digital-n
Millennium	N.Reg.Nom.Sg.Neut	Millennium-n
Copyright	N.Reg.Nom.Pl.Neut	Copyright-n
Act	FM	Act-x
(	SYM.Paren.Left	(-x
<g/>
DMCA	N.Name.Nom.Sg.*	DMCA-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
[	SYM.Paren.Left	[-x
<g/>
1	CARD	1-m
<g/>
]	SYM.Paren.Right	]-x
verwendet	VPP.Full.Psp	verwenden-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
Freie-Software-Entwicklung	N.Reg.Acc.Sg.Fem	Freie-Software-Entwicklung-n
für	APPR	für-i
wichtige	ADJA.Pos.Acc.Pl.Fem	wichtig-j
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
wie	CONJ.Comp	wie-c
dem	ART.Def.Dat.Sg.Neut	die-x
Betrachten	N.Reg.Dat.Sg.Neut	Betrachten-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
DVD	N.Reg.Gen.Sg.Fem	DVD-n
oder	CONJ.Coord	oder-c
Anhören	N.Reg.Nom.Sg.Neut	Anhören-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
RealAudio-Datenstroms	N.Reg.Gen.Sg.Masc	RealAudio-Datenstrom-n
zu	PART.Zu	zu-x
verbieten	VINF.Full	verbieten-v
<g/>
,	SYM.Pun.Comma	,-x
finden	VFIN.Full.1.Pl.Pres.Ind	finden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
eindeutigen	ADJA.Pos.Acc.Sg.Masc	eindeutig-j
Weg	N.Reg.Acc.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Neut	die-x
patentierten	ADJA.Pos.Acc.Pl.Neut	patentiert-j
und	CONJ.Coord	und-c
geheimen	ADJA.Pos.Acc.Pl.Neut	geheim-j
Dateiformate	N.Reg.Acc.Pl.Neut	Dateiformat-n
zu	PART.Zu	zu-x
bekämpfen	VINF.Full	bekämpfen-v
<g/>
,	SYM.Pun.Comma	,-x
außer	APPR	außer-i
die	ART.Def.Acc.Pl.Neut	die-x
unfreien	ADJA.Pos.Acc.Pl.Neut	unfrei-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
zurückzuweisen	VINF.Full.zu	zurückweisen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
diese	PRO.Dem.Subst.Acc.Pl.Neut	diese-p
nutzen	VFIN.Full.3.Pl.Pres.Ind	nutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Bewältigung	N.Reg.Nom.Sg.Fem	Bewältigung-n
dieser	PRO.Dem.Attr.Gen.Pl.Fem	diese-p
Herausforderungen	N.Reg.Gen.Pl.Fem	Herausforderung-n
erfordert	VFIN.Full.3.Sg.Pres.Ind	erfordern-v
viele	PRO.Indef.Attr.Acc.Pl.Fem	viele-p
unterschiedliche	ADJA.Pos.Acc.Pl.Fem	unterschiedlich-j
Arten	N.Reg.Acc.Pl.Fem	Art-n
von	APPR	von-i
Erfolg	N.Reg.Dat.Sg.Masc	Erfolg-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
aber	ADV	aber-a
vor	APPR	vor-i
allem	PRO.Indef.Subst.Dat.Sg.Neut	alle-p
brauchen	VFIN.Full.1.Pl.Pres.Ind	brauchen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
jeder	PRO.Indef.Attr.Dat.Sg.Fem	jede-p
Herausforderung	N.Reg.Dat.Sg.Fem	Herausforderung-n
gegenüberzutreten	VINF.Full.zu	gegenübertreten-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
an	APPR	an-i
das	ART.Def.Acc.Sg.Neut	die-x
Ziel	N.Reg.Acc.Sg.Neut	Ziel-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
zusammenzuarbeiten	VINF.Full.zu	zusammenarbeiten-v
zu	PART.Zu	zu-x
erinnern	VINF.Full	erinnern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
nicht	PART.Neg	nicht-x
erwarten	VINF.Full	erwarten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
der	ART.Def.Nom.Sg.Masc	die-x
bloße	ADJA.Pos.Nom.Sg.Masc	bloß-j
Wunsch	N.Reg.Nom.Sg.Masc	Wunsch-n
nach	APPR	nach-i
leistungsfähiger	ADJA.Pos.Dat.Sg.Fem	leistungsfähig-j
und	CONJ.Coord	und-c
zuverlässiger	ADJA.Pos.Dat.Sg.Fem	zuverlässig-j
Software	N.Reg.Dat.Sg.Fem	Software-n
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
motivieren	VINF.Full	motivieren-v
große	ADJA.Pos.Acc.Pl.Fem	groß-j
Anstrengungen	N.Reg.Acc.Pl.Fem	Anstrengung-n
zu	PART.Zu	zu-x
unternehmen	VINF.Full	unternehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
brauchen	VFIN.Full.1.Pl.Pres.Ind	brauchen-v
die	ART.Def.Acc.Sg.Fem	die-x
Art	N.Reg.Acc.Sg.Fem	Art-n
von	APPR	von-i
Entschlossenheit	N.Reg.Dat.Sg.Fem	Entschlossenheit-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Masc	die-x
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
für	APPR	für-i
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
ihre	PRO.Poss.Attr.Nom.Sg.Fem	ihre-p
Gemeinschaft	N.Reg.Nom.Sg.Fem	Gemeinschaft-n
kämpfen	VFIN.Full.3.Pl.Pres.Ind	kämpfen-v
–	ADJA.Pos.Acc.Sg.Fem	–-j
Entschlossenheit	N.Reg.Acc.Sg.Fem	Entschlossenheit-n
für	APPR	für-i
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
fortzufahren	VINF.Full.zu	fortfahren-v
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
aufzugeben	VINF.Full.zu	aufgeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
gehen	VFIN.Full.3.Pl.Pres.Ind	gehen-v
diese	PRO.Dem.Attr.Nom.Pl.*	diese-p
Ziele	N.Reg.Nom.Pl.Neut	Ziel-n
und	CONJ.Coord	und-c
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Entschlossenheit	N.Reg.Nom.Sg.Fem	Entschlossenheit-n
hauptsächlich	ADJD.Pos	hauptsächlich-j
vom	APPRART.Dat.Sg.Masc	von-i
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
aus	PART.Verb	aus-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
diejenigen	PRO.Dem.Subst.Nom.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
über	APPR	über-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
als	APPR	als-i
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
sprechen	VINF.Full	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
entschieden	ADJD.Pos	entschieden-j
dafür	PROADV.Dem	dafür-x
einzutreten	VINF.Full.zu	eintreten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
sprechen	VFIN.Full.3.Pl.Pres.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
normalerweise	ADV	normalerweise-a
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
Magazine	N.Reg.Nom.Pl.Neut	Magazin-n
über	APPR	über-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
normalerweise	ADV	normalerweise-a
voll	ADJD.Pos	voll-j
von	APPR	von-i
Inseraten	N.Reg.Dat.Pl.Neut	Inserat-n
für	APPR	für-i
unfreie	ADJA.Pos.Acc.Sg.Fem	unfrei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
<g/>
;	SYM.Pun.Sent	;-x
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Distributoren	N.Reg.Nom.Pl.Masc	Distributor-n
fügen	VFIN.Full.3.Pl.Pres.Ind	fügen-v
unfreie	ADJA.Pos.Acc.Pl.Fem	unfrei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
zum	APPRART.Dat.Sg.Neut	zu-i
System	N.Reg.Dat.Sg.Neut	System-n
hinzu	PART.Verb	hinzu-x
<g/>
;	SYM.Pun.Sent	;-x
andere	ADJA.Pos.Nom.Pl.Neut	ander-j
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
"	SYM.Quot.Left	"-x
<g/>
unterstützen	VFIN.Full.3.Pl.Pres.Ind	unterstützen-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
durch	APPR	durch-i
Entwickeln	N.Reg.Acc.Sg.Neut	Entwickeln-n
von	APPR	von-i
unfreien	ADJA.Pos.Dat.Pl.Fem	unfrei-j
Anwendungen	N.Reg.Dat.Pl.Fem	Anwendung-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
unter	APPR	unter-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ausgeführt	VPP.Full.Psp	ausführen-v
werden	VINF.Aux	werden-v
<g/>
;	SYM.Pun.Sent	;-x
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Benutzergruppen	N.Reg.Nom.Pl.Fem	Benutzergruppe-n
laden	VFIN.Full.3.Pl.Pres.Ind	laden-v
typischerweise	ADV	typischerweise-a
Vertriebler	N.Reg.Acc.Pl.Masc	Vertriebler-n
ein	PART.Verb	ein-x
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
solche	PRO.Indef.Attr.Acc.Pl.Fem	solche-p
Anwendungen	N.Reg.Acc.Pl.Fem	Anwendung-n
vorzustellen	VINF.Full.zu	vorstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
wichtigste	ADJA.Sup.Nom.Sg.Masc	wichtig-j
Ort	N.Reg.Nom.Sg.Masc	Ort-n
in	APPR	in-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
<g/>
,	SYM.Pun.Comma	,-x
an	APPR	an-i
dem	PRO.Rel.Subst.Dat.Sg.Neut	die-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
dem	ART.Def.Dat.Sg.Masc	die-x
Gedanken	N.Reg.Dat.Sg.Masc	Gedanke-n
von	APPR	von-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Entschlossenheit	N.Reg.Dat.Sg.Fem	Entschlossenheit-n
begegnet	VFIN.Full.3.Sg.Pres.Ind	begegnen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
begegnet	VFIN.Full.3.Sg.Pres.Ind	begegnen-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
Gefühl	N.Reg.Acc.Sg.Neut	Gefühl-n
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auf	APPR	auf-i
einen	PRO.Indef.Subst.Acc.Sg.Masc	eine-p
selbst	ADV	selbst-a
bezieht	VFIN.Full.3.Sg.Pres.Ind	beziehen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
wissen	VFIN.Full.3.Pl.Pres.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
System	N.Reg.Acc.Sg.Neut	System-n
benutzen	VFIN.Full.3.Pl.Pres.Ind	benutzen-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
aus	APPR	aus-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
hervorging	VFIN.Full.3.Sg.Past.Ind	hervorgehen-v
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
direkte	ADJA.Pos.Nom.Sg.Fem	direkt-j
Beziehung	N.Reg.Nom.Sg.Fem	Beziehung-n
zwischen	APPR	zwischen-i
sich	PRO.Refl.Subst.3.Dat.Sg.*	sie-p
selbst	ADV	selbst-a
und	CONJ.Coord	und-c
GNU	N.Name.Nom.Sg.*	GNU-n
sehen	VINF.Full	sehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
stimmen	VFIN.Full.3.Pl.Pres.Ind	stimmen-v
nicht	PART.Neg	nicht-x
automatisch	ADJD.Pos	automatisch-j
mit	APPR	mit-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Philosophie	N.Reg.Dat.Sg.Fem	Philosophie-n
überein	PART.Verb	überein-x
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
sehen	VFIN.Full.3.Pl.Pres.Ind	sehen-v
zumindest	ADV	zumindest-a
einen	ART.Indef.Acc.Sg.Masc	eine-x
Grund	N.Reg.Acc.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
ernsthaft	ADJD.Pos	ernsthaft-j
darüber	PROADV.Dem	darüber-x
nachzudenken	VINF.Full.zu	nachdenken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Gegensatz	N.Reg.Dat.Sg.Masc	Gegensatz-n
dazu	PROADV.Dem	dazu-x
verspüren	VFIN.Full.3.Pl.Pres.Ind	verspüren-v
die	ART.Def.Nom.Pl.Masc	die-x
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Linux-Nutzer	N.Reg.Nom.Pl.Masc	Linux-Nutzer-n
<g/>
"	SYM.Quot.Left	"-x
betrachten	VFIN.Full.3.Pl.Pres.Ind	betrachten-v
und	CONJ.Coord	und-c
glauben	VFIN.Full.3.Pl.Pres.Ind	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
"	SYM.Quot.Left	"-x
<g/>
Werkzeuge	N.Reg.Nom.Pl.Neut	Werkzeug-n
entwickelte	ADJA.Pos.Acc.Pl.Masc	entwickelt-j
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
unter	APPR	unter-i
'	SYM.Quot.Right	'-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
'	SYM.Quot.Right	'-x
als	APPR	als-i
nützlich	ADJD.Pos	nützlich-j
erwiesen	VPP.Full.Psp	erweisen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
"	SYM.Quot.Left	"-x
<g/>
,	SYM.Pun.Comma	,-x
typischerweise	ADV	typischerweise-a
nur	ADV	nur-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
indirekte	ADJA.Pos.Acc.Sg.Fem	indirekt-j
Beziehung	N.Reg.Acc.Sg.Fem	Beziehung-n
zwischen	APPR	zwischen-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
und	CONJ.Coord	und-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
selbst	ADV	selbst-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
die	ART.Def.Acc.Sg.Fem	die-x
GNU-Philosophie	N.Reg.Acc.Sg.Fem	GNU-Philosophie-n
einfach	ADV	einfach-a
ignorieren	VINF.Full	ignorieren-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ihr	PRO.Pers.Subst.3.Dat.Sg.Fem	sie-p
begegnen	VFIN.Full.3.Pl.Pres.Ind	begegnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
idealistisch	ADJD.Pos	idealistisch-j
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
jeder	PRO.Indef.Subst.Nom.Sg.Masc	jede-p
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
heute	ADV	heute-a
Idealismus	N.Reg.Nom.Sg.Masc	Idealismus-n
fördert	VFIN.Full.3.Sg.Pres.Ind	fördern-v
<g/>
,	SYM.Pun.Comma	,-x
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
einem	ART.Indef.Dat.Sg.Neut	eine-x
großen	ADJA.Pos.Dat.Sg.Neut	groß-j
Hindernis	N.Reg.Dat.Sg.Neut	Hindernis-n
gegenüber	PART.Verb	gegenüber-x
<g/>
:	SYM.Pun.Colon	:-x
die	ART.Def.Nom.Sg.Fem	die-x
vorherrschende	ADJA.Pos.Nom.Sg.Fem	vorherrschend-j
Ideologie	N.Reg.Nom.Sg.Fem	Ideologie-n
ermutigt	VFIN.Full.3.Sg.Pres.Ind	ermutigen-v
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
Idealismus	N.Reg.Acc.Sg.Masc	Idealismus-n
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
unpraktisch	ADJD.Pos	unpraktisch-j
<g/>
"	SYM.Quot.Left	"-x
abzutun	VINF.Full.zu	abtun-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unser	PRO.Poss.Attr.Nom.Sg.Masc	unsre-p
Idealismus	N.Reg.Nom.Sg.Masc	Idealismus-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
äußerst	ADV	äußerst-a
praktisch	ADJD.Pos	praktisch-j
gewesen	VPP.Aux.Psp	sein-v
<g/>
:	SYM.Pun.Colon	:-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
GNU	N.Reg.Acc.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Betriebssystem	N.Reg.Acc.Sg.Neut	Linux-Betriebssystem-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
System	N.Reg.Acc.Sg.Neut	System-n
lieben	VFIN.Full.3.Pl.Pres.Ind	lieben-v
<g/>
,	SYM.Pun.Comma	,-x
sollten	VFIN.Mod.3.Pl.Past.Subj	sollen-v
wissen	VINF.Full	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
unser	PRO.Poss.Attr.Nom.Sg.Neut	unsre-p
wahr	ADJD.Pos	wahr-j
gemachter	ADJA.Pos.Nom.Sg.Masc	gemacht-j
Idealismus	N.Reg.Nom.Sg.Masc	Idealismus-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
"	SYM.Quot.Left	"-x
<g/>
die	ART.Def.Nom.Sg.Fem	die-x
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
<g/>
"	SYM.Quot.Left	"-x
wirklich	ADJD.Pos	wirklich-j
schon	ADV	schon-a
getan	VPP.Full.Psp	tun-v
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
außer	APPR	außer-i
Anerkennung	N.Reg.Dat.Sg.Fem	Anerkennung-n
auf	APPR	auf-i
dem	ART.Def.Dat.Sg.Neut	die-x
Spiel	N.Reg.Dat.Sg.Neut	Spiel-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
vielleicht	ADV	vielleicht-a
klüger	ADJD.Comp	klug-j
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Sache	N.Reg.Acc.Sg.Fem	Sache-n
fallen	VINF.Full	fallen-v
zu	PART.Zu	zu-x
lassen	VINF.Full	lassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
in	APPR	in-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Position	N.Reg.Dat.Sg.Fem	Position-n
befinden	VFIN.Full.1.Pl.Pres.Ind	befinden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
uns	PRO.Refl.Subst.1.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Um	CONJ.SubInf	um-c
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Aufgabe	N.Reg.Acc.Sg.Fem	Aufgabe-n
zu	PART.Zu	zu-x
inspirieren	VINF.Full	inspirieren-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
getan	VPP.Full.Psp	tun-v
werden	VINF.Aux	werden-v
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
müssen	VFIN.Mod.1.Pl.Pres.Ind	müssen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
dafür	PROADV.Dem	dafür-x
anerkannt	VPP.Full.Psp	anerkennen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bereits	ADV	bereits-a
geleistet	VPP.Full.Psp	leisten-v
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bitte	ADV	bitte-a
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/gnu-users-never-heard-of-gnu.html	N.Name	[url]-n
GNU-Benutzer	N.Reg.Nom.Sg.Masc	GNU-Benutzer-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
noch	ADV	noch-a
nie	ADV	nie-a
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
gehört	VPP.Full.Psp	gehören|hören-v
haben	VINF.Aux	haben-v
</s>
</align>
<align>
<s>
von	APPR	von-i
Richard	N.Name.Nom.Sg.Masc	Richard-n
Stallman	N.Name.Dat.Sg.Masc	Stallman-n
</s>
</align>
<align>
<s>
Um	CONJ.SubInf	um-c
weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Informationen	N.Reg.Acc.Pl.Fem	Information-n
zu	APPR	zu-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Thema	N.Reg.Dat.Sg.Neut	Thema-n
zu	PART.Zu	zu-x
erhalten	VINF.Full	erhalten-v
<g/>
,	SYM.Pun.Comma	,-x
siehe	ADV	siehe-a
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
:	SYM.Pun.Colon	:-x
Häufig	ADJD.Pos	häufig-j
gestellte	ADJA.Pos.Nom.Pl.Fem	gestellt-j
Fragen	N.Reg.Nom.Pl.Fem	Frage-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
Schall	N.Name.Nom.Sg.*	Schall-n
und	CONJ.Coord	und-c
Rauch	N.Name.Nom.Sg.*	Rauch-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
und	CONJ.Coord	und-c
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
und	CONJ.Coord	und-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
noch	ADV	noch-a
nie	ADV	nie-a
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
gehört	VPP.Full.Psp	gehören|hören-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Selbst	ADV	selbst-a
die	PRO.Dem.Subst.Nom.Pl.*	die-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
nutzen	VFIN.Full.3.Pl.Pres.Ind	nutzen-v
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
noch	ADV	noch-a
nie	ADV	nie-a
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
gehört	VPP.Full.Psp	gehören|hören-v
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
so	ADV	so-a
viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
und	CONJ.Coord	und-c
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
lehren	VINF.Full	lehren-v
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Tatsächlich	ADJD.Pos	tatsächlich-j
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
GNU-Nutzer	N.Reg.Nom.Pl.Masc	GNU-Nutzer-n
häufig	ADJD.Pos	häufig-j
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
ausführen	VFIN.Full.1.Pl.Pres.Ind	ausführen-v
<g/>
"	SYM.Quot.Left	"-x
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.Comp	als-c
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
"	SYM.Quot.Left	"-x
<g/>
seinen	PRO.Poss.Attr.Acc.Sg.Masc	seine-p
Vergaser	N.Reg.Acc.Sg.Masc	Vergaser-n
fahren	VINF.Full	fahren-v
<g/>
"	SYM.Quot.Left	"-x
oder	CONJ.Coord	oder-c
"	SYM.Quot.Left	"-x
<g/>
sein	PRO.Poss.Attr.Acc.Sg.Neut	seine-p
Getriebe	N.Reg.Acc.Sg.Neut	Getriebe-n
fahren	VINF.Full	fahren-v
<g/>
"	SYM.Quot.Left	"-x
sagen	VINF.Full	sagen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Trotz	APPR	trotz-i
alledem	PRO.Indef.Subst.Dat.Sg.*	alldie-p
assoziieren	VFIN.Full.3.Pl.Pres.Ind	assoziieren-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
diejenigen	PRO.Dem.Subst.Acc.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
wissen	VFIN.Full.3.Pl.Pres.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
den	ART.Def.Dat.Pl.Neut	die-x
Idealen	N.Reg.Dat.Pl.Neut	Ideal-n
von	APPR	von-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Gen.Sg.Fem	Freie-Software-Bewegung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Assoziation	N.Reg.Nom.Sg.Fem	Assoziation-n
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
nicht	PART.Neg	nicht-x
von	APPR	von-i
ungefähr	ADJD.Pos	ungefähr-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Beweggrund	N.Reg.Nom.Sg.Masc	Beweggrund-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
insbesondere	ADV	insbesondere-a
zu	PART.Zu	zu-x
ermöglichen	VINF.Full	ermöglichen-v
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
benutzen	VINF.Full	benutzen-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
und	CONJ.Coord	und-c
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
Person	N.Reg.Nom.Sg.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
zum	APPRART.Dat.Sg.Neut	zu-i
ersten	ADJA.Pos.Dat.Sg.Neut	erst-j
Mal	N.Reg.Dat.Sg.Neut	Mal-n
in	APPR	in-i
GNU	N.Name.Dat.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
bemerkt	VPP.Full.Psp	bemerken-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
nicht	PART.Neg	nicht-x
sofort	ADV	sofort-a
wissen	VINF.Full	wissen-v
was	FM	was-x
er	FM	er-x
verkörpert	VFIN.Full.3.Sg.Pres.Ind	verkörpern-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
aber	ADV	aber-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Schritt	N.Reg.Nom.Sg.Masc	Schritt-n
näher	ADJD.Comp	nah-j
gekommen	VPP.Full.Psp	kommen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
herauszufinden	VINF.Full.zu	herausfinden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Zusammenhang	N.Reg.Nom.Sg.Masc	Zusammenhang-n
zwischen	APPR	zwischen-i
dem	ART.Def.Dat.Sg.Masc	die-x
Namen	N.Reg.Dat.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.Masc	GNU-n
und	CONJ.Coord	und-c
unseren	PRO.Poss.Attr.Dat.Pl.Neut	unsre-p
Zielen	N.Reg.Dat.Pl.Neut	Ziel-n
von	APPR	von-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
sozialer	ADJA.Pos.Dat.Sg.Fem	sozial-j
Solidarität	N.Reg.Dat.Sg.Fem	Solidarität-n
existiert	VFIN.Full.3.Sg.Pres.Ind	existieren-v
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
Köpfen	N.Reg.Dat.Pl.Masc	Kopf-n
Hunderttausender	ADJA.Pos.*.*.*	hunderttausender-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Nutzer	N.Name.Nom.Sg.Fem	Linux-Nutzer-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
kennen	PART.Verb	kennen-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
existiert	VFIN.Full.3.Sg.Pres.Ind	existieren-v
auf	APPR	auf-i
GNU.org	N.Name.Dat.Sg.Neut	GNU.org-n
und	CONJ.Coord	und-c
der	ART.Def.Dat.Sg.Fem	die-x
Wikipedia	N.Name.Dat.Sg.Fem	Wikipedia-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
im	APPRART.Dat.Sg.Neut	in-i
gesamten	ADJA.Pos.Dat.Sg.Neut	gesamt-j
Internet	N.Reg.Dat.Sg.Neut	Internet-n
existent	ADJD.Pos	existent-j
<g/>
;	SYM.Pun.Sent	;-x
suchen	VFIN.Full.3.Pl.Pres.Ind	suchen-v
diese	PRO.Dem.Attr.Nom.Pl.Masc	diese-p
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
nach	APPR	nach-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
finden	VFIN.Full.3.Pl.Pres.Ind	finden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Pl.Neut	die-x
Ideale	N.Reg.Acc.Pl.Neut	Ideal-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
GNU	N.Name.Acc.Sg.Fem	GNU-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
danach	PROADV.Dem	danach-x
suchen	VFIN.Full.3.Pl.Pres.Ind	suchen-v
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
dennoch	ADV	dennoch-a
darauf	PROADV.Dem	darauf-x
stoßen	VINF.Full	stoßen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
"	SYM.Quot.Left	"-x
<g/>
Open-Source	N.Name.Nom.Sg.*	Open-Source-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Rhetorik	N.Reg.Nom.Sg.Fem	Rhetorik-n
tendiert	VFIN.Full.3.Sg.Pres.Ind	tendieren-v
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Aufmerksamkeit	N.Reg.Acc.Sg.Fem	Aufmerksamkeit-n
weg	ADV	weg-a
von	APPR	von-i
Fragen	N.Reg.Dat.Pl.Fem	Frage-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
des	ART.Def.Gen.Sg.Masc	die-x
Benutzers	N.Reg.Gen.Sg.Masc	Benutzer-n
zu	PART.Zu	zu-x
führen	VINF.Full	führen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
völlig	ADJD.Pos	völlig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
noch	ADV	noch-a
immer	ADV	immer-a
Diskussionen	N.Reg.Acc.Pl.Fem	Diskussion-n
über	APPR	über-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
und	CONJ.Coord	und-c
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
gewisse	ADJA.Pos.Acc.Sg.Fem	gewiss-j
Chance	N.Reg.Acc.Sg.Fem	Chance-n
darauf	PROADV.Dem	darauf-x
zu	PART.Zu	zu-x
stoßen	VINF.Full	stoßen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
geschieht	VFIN.Full.3.Sg.Pres.Ind	geschehen-v
<g/>
,	SYM.Pun.Comma	,-x
achten	VFIN.Full.3.Pl.Pres.Ind	achten-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
eher	ADV	eher-a
auf	APPR	auf-i
Informationen	N.Reg.Acc.Pl.Fem	Information-n
über	APPR	über-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
(	SYM.Paren.Left	(-x
<g/>
wie	PROADV.Inter	wie-x
z.	APPRART.Dat.Sg.Neut	z.-i
B.	N.Reg.Dat.Sg.Neut	B.-n
<g/>
.	SYM.Pun.Sent	.-x
<g/>
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Werk	N.Reg.Nom.Sg.Neut	Werk-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Aktion	N.Reg.Gen.Sg.Fem	Aktion-n
für	APPR	für-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
wissen	VFIN.Full.3.Pl.Pres.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Laufe	N.Reg.Dat.Sg.Masc	Lauf-n
der	ART.Def.Gen.Sg.Fem	die-x
Zeit	N.Reg.Gen.Sg.Fem	Zeit-n
verbreitet	VFIN.Full.3.Sg.Pres.Ind	verbreiten-v
die	ART.Def.Acc.Sg.Fem	die-x
Nennung	N.Reg.Acc.Sg.Fem	Nennung-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
das	ART.Def.Acc.Sg.Neut	die-x
Bewusstsein	N.Reg.Acc.Sg.Neut	Bewusstsein-n
für	APPR	für-i
die	ART.Def.Acc.Pl.Neut	die-x
Ideale	N.Reg.Acc.Pl.Neut	Ideal-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
entwickelten	VFIN.Full.1.Pl.Past.Ind	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
auch	ADV	auch-a
als	APPR	als-i
Erinnerung	N.Reg.Nom.Sg.Fem	Erinnerung-n
für	APPR	für-i
die	ART.Def.Acc.Pl.Masc	die-x
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
in	APPR	in-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
nützlich	ADJD.Pos	nützlich-j
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
von	APPR	von-i
diesen	PRO.Dem.Attr.Dat.Pl.Neut	diese-p
Idealen	N.Reg.Dat.Pl.Neut	Ideal-n
wissen	VFIN.Full.3.Pl.Pres.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Welt	N.Reg.Dat.Sg.Fem	Welt-n
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
Großteil	N.Reg.Nom.Sg.Masc	Großteil-n
der	ART.Def.Gen.Sg.Fem	die-x
Diskussion	N.Reg.Gen.Sg.Fem	Diskussion-n
um	APPR	um-i
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
ganz	ADV	ganz-a
praktischen	ADJA.Pos.Acc.Sg.Masc	praktisch-j
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
damit	PROADV.Dem	damit-x
unmoralischen	ADJA.Pos.Acc.Sg.Masc	unmoralisch-j
<g/>
)	SYM.Paren.Right	)-x
Ansatz	N.Reg.Acc.Sg.Masc	Ansatz-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
darum	PROADV.Dem	darum-x
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
um	APPR	um-i
Hilfe	N.Reg.Acc.Sg.Fem	Hilfe-n
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Sensibilisierung	N.Reg.Dat.Sg.Fem	Sensibilisierung-n
der	ART.Def.Gen.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Gen.Sg.Fem	Öffentlichkeit-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Freie-Software-ideale	N.Reg.Acc.Sg.Fem	Freie-Software-ideale-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/gnu/gnu-linux-faq.html	N.Name	[url]-n
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
das	ART.Def.Nom.Sg.Neut	die-x
benutzte	ADJA.Pos.Nom.Sg.Neut	benutzt-j
System	N.Reg.Nom.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
genannt	VPP.Full.Psp	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#why	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Fem	meiste-p
Betriebssystem-Distributionen	N.Reg.Nom.Pl.Fem	Betriebssystem-Distribution-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
auf	APPR	auf-i
Linux	N.Reg.Acc.Sg.Neut	Linux-n
als	APPR	als-i
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
beruhen	VFIN.Full.3.Pl.Pres.Ind	beruhen-v
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
im	APPRART.Dat.Sg.Masc	in-i
Grunde	N.Reg.Dat.Sg.Masc	Grund-n
modifizierte	ADJA.Pos.Nom.Pl.Fem	modifiziert-j
Varianten	N.Reg.Nom.Pl.Fem	Variante-n
des	ART.Def.Gen.Sg.Neut	die-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
begannen	VFIN.Full.1.Pl.Past.Ind	beginnen-v
1984	CARD	[number]-m
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
von	APPR	von-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
Jahre	N.Reg.Dat.Sg.Neut	Jahr-n
bevor	CONJ.SubFin	bevor-c
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.*.*.*	Torvalds-n
seinen	PRO.Poss.Attr.Acc.Sg.Masc	seine-p
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
anfing	VFIN.Full.3.Sg.Past.Ind	anfangen-v
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unser	PRO.Poss.Attr.Nom.Sg.Neut	unsre-p
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
komplett	ADJD.Pos	komplett-j
freies	ADJA.Pos.Nom.Sg.Neut	frei-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Natürlich	ADV	natürlich-a
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
nicht	PART.Neg	nicht-x
alle	PRO.Indef.Attr.Nom.Pl.Masc	alle-p
Teile	N.Reg.Nom.Pl.Masc	Teil-n
selbst	ADV	selbst-a
entwickelt	VPP.Full.Psp	entwickeln-v
-	SYM.Pun.Hyph	--x
aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hatten	VFIN.Aux.1.Pl.Past.Ind	haben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Vorreiterrolle	N.Reg.Acc.Sg.Fem	Vorreiterrolle-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
entwickelten	VFIN.Full.1.Pl.Past.Ind	entwickeln-v
die	ART.Def.Acc.Pl.Fem	die-x
meisten	PRO.Indef.Attr.Acc.Pl.Fem	meiste-p
der	ART.Def.Gen.Pl.Fem	die-x
zentralen	ADJA.Pos.Gen.Pl.Fem	zentral-j
Komponenten	N.Reg.Gen.Pl.Fem	Komponente-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
den	ART.Def.Acc.Sg.Masc	die-x
größten	ADJA.Sup.Acc.Sg.Masc	groß-j
Einzelbeitrag	N.Reg.Acc.Sg.Masc	Einzelbeitrag-n
zum	APPRART.Dat.Sg.Neut	zu-i
Gesamtsystem	N.Reg.Dat.Sg.Neut	Gesamtsystem-n
bildeten	VFIN.Full.3.Pl.Past.Ind	bilden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
grundlegende	ADJA.Pos.Nom.Sg.Fem	grundlegend-j
Vision	N.Reg.Nom.Sg.Fem	Vision-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ebenfalls	ADV	ebenfalls-a
unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Fairness	N.Reg.Nom.Sg.Fem	Fairness-n
halber	APPO.Gen	halber-x
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
wenigstens	ADV	wenigstens-a
die	ART.Def.Acc.Sg.Fem	die-x
gleiche	ADJA.Pos.Acc.Sg.Fem	gleich-j
Erwähnung	N.Reg.Acc.Sg.Fem	Erwähnung-n
bekommen	VINF.Full	bekommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
und	CONJ.Coord	und-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
GNU-Nutzer	N.Reg.Nom.Pl.Masc	GNU-Nutzer-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
noch	ADV	noch-a
nie	ADV	nie-a
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
gehört	VPP.Full.Psp	gehören|hören-v
haben	VINF.Aux	haben-v
für	APPR	für-i
weiterführende	ADJA.Pos.Acc.Pl.Fem	weiterführend-j
Erklärungen	N.Reg.Acc.Pl.Fem	Erklärung-n
und	CONJ.Coord	und-c
Über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
Projekt	N.Reg.Acc.Sg.Neut	Projekt-n
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
'	SYM.Quot.Right	'-x
zur	APPRART.Dat.Sg.Fem	zu-i
Historie	N.Reg.Dat.Sg.Fem	Historie-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
wichtig	ADJD.Pos	wichtig-j
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#whycare	N.Reg.Nom.Sg.Fem	#whycare-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Obwohl	CONJ.SubFin	obwohl-c
die	ART.Def.Nom.Pl.Masc	die-x
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
zur	APPRART.Dat.Sg.Fem	zu-i
Freie-Software-Gemeinschaft	N.Reg.Dat.Sg.Fem	Freie-Software-Gemeinschaft-n
beitragen	VINF.Full	beitragen-v
<g/>
,	SYM.Pun.Comma	,-x
interessieren	VFIN.Full.3.Pl.Pres.Ind	interessieren-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
von	APPR	von-i
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
nicht	PART.Neg	nicht-x
für	APPR	für-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
für	APPR	für-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
halten	VFIN.Full.3.Pl.Pres.Ind	halten-v
<g/>
,	SYM.Pun.Comma	,-x
neigen	VFIN.Full.3.Pl.Pres.Ind	neigen-v
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
verwirrt	ADJD.Pos	verwirrt-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
und	CONJ.Coord	und-c
weisen	VFIN.Full.3.Pl.Pres.Ind	weisen-v
jenen	PRO.Dem.Attr.Dat.Pl.Masc	jene-p
Entwicklern	N.Reg.Dat.Pl.Masc	Entwickler-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Geschichte	N.Reg.Dat.Sg.Fem	Geschichte-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
zu	PART.Verb	zu-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
eigentlich	ADV	eigentlich-a
gar	ADV	gar-a
nicht	PART.Neg	nicht-x
gespielt	VPP.Full.Psp	spielen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
schenken	VFIN.Full.3.Pl.Pres.Ind	schenken-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
den	ART.Def.Dat.Pl.Fem	die-x
Ansichten	N.Reg.Dat.Pl.Fem	Ansicht-n
jener	PRO.Dem.Attr.Gen.Pl.Masc	jene-p
Entwickler	N.Reg.Gen.Pl.Masc	Entwickler-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
übermäßige	ADJA.Pos.Acc.Sg.Fem	übermäßig-j
Bedeutung	N.Reg.Acc.Sg.Fem	Bedeutung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
erkennt	VFIN.Full.3.Sg.Pres.Ind	erkennen-v
die	ART.Def.Acc.Sg.Fem	die-x
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
unser	PRO.Poss.Attr.Nom.Sg.Masc	unsre-p
Idealismus	N.Reg.Nom.Sg.Masc	Idealismus-n
beim	APPRART.Dat.Sg.Masc	bei-i
Aufbau	N.Reg.Dat.Sg.Masc	Aufbau-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
gespielt	VPP.Full.Psp	spielen-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
an	APPR	an-i
und	CONJ.Coord	und-c
hilft	VFIN.Full.3.Sg.Pres.Ind	helfen-v
der	ART.Def.Dat.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Dat.Sg.Fem	Öffentlichkeit-n
die	ART.Def.Acc.Sg.Fem	die-x
praktische	ADJA.Pos.Acc.Sg.Fem	praktisch-j
Bedeutung	N.Reg.Acc.Sg.Fem	Bedeutung-n
dieser	PRO.Dem.Attr.Gen.Pl.Neut	diese-p
Ideale	N.Reg.Gen.Pl.Neut	Ideal-n
zu	PART.Zu	zu-x
erkennen	VINF.Full	erkennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
wahre	ADJA.Pos.Nom.Sg.Fem	wahr-j
Beziehung	N.Reg.Nom.Sg.Fem	Beziehung-n
zwischen	APPR	zwischen-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
und	CONJ.Coord	und-c
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#what	N.Reg.Nom.Sg.Fem	#what-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Nom.Sg.Neut	GNU-Betriebssystem-n
und	CONJ.Coord	und-c
der	ART.Def.Nom.Sg.Masc	die-x
Linux-Kern	N.Reg.Nom.Sg.Masc	Linux-Kern-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
separate	ADJA.Pos.Nom.Pl.Neut	separat-j
Softwareprojekte	N.Reg.Nom.Pl.Neut	Softwareprojekt-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
ergänzende	ADJA.Pos.Acc.Pl.Fem	ergänzend-j
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
erledigen	VFIN.Full.3.Pl.Pres.Ind	erledigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Typischerweise	ADV	typischerweise-a
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distribution	N.Name.Nom.Sg.Fem	Linux-Distribution-n
verpackt	VPP.Full.Psp	verpacken-v
und	CONJ.Coord	und-c
gemeinsam	ADJD.Pos	gemeinsam-j
eingesetzt	VPP.Full.Psp	einsetzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
kam	VFIN.Full.3.Sg.Past.Ind	kommen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VINF.Full	nennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#howerror	N.Reg.Nom.Sg.Masc	#howerror-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	ADV	zu-a
nennen	VINF.Full	nennen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Verwirrspiel	N.Reg.Nom.Sg.Neut	Verwirrspiel-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
schneller	ADJD.Comp	schnell-j
verbreitet	VPP.Full.Psp	verbreiten-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
als	CONJ.Comp	als-c
die	ART.Def.Nom.Sg.Fem	die-x
korrigierende	ADJA.Pos.Nom.Sg.Fem	korrigierend-j
Information	N.Reg.Nom.Sg.Fem	Information-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.*	die-x
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
Linux	N.Reg.Acc.Sg.Neut	Linux-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
kombinierten	VFIN.Full.3.Pl.Past.Ind	kombinieren-v
<g/>
,	SYM.Pun.Comma	,-x
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
sich	PRO.Refl.Subst.3.Dat.Pl.*	sie-p
nicht	PART.Neg	nicht-x
bewusst	ADJD.Pos	bewusst-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
worauf	PROADV.Inter	worauf-x
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Tätigkeit	N.Reg.Acc.Sg.Fem	Tätigkeit-n
hinauslaufen	VINF.Full	hinauslaufen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
richteten	VFIN.Full.3.Pl.Past.Ind	richten-v
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Aufmerksamkeit	N.Reg.Acc.Sg.Fem	Aufmerksamkeit-n
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
Stück	N.Reg.Acc.Sg.Neut	Stück-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
Linux	N.Reg.Nom.Sg.Neut	Linux-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
realisierten	VFIN.Full.3.Pl.Past.Ind	realisieren-v
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
Kombination	N.Reg.Nom.Sg.Fem	Kombination-n
mehr	ADV	mehr-a
aus	APPR	aus-i
GNU	N.Name.Dat.Sg.*	GNU-n
bestand	VFIN.Full.3.Sg.Past.Ind	bestehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
fingen	VFIN.Full.3.Pl.Past.Ind	fangen-v
an	PART.Verb	an-x
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
obwohl	CONJ.SubFin	obwohl-c
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Name	N.Reg.Nom.Sg.Masc	Name-n
nicht	PART.Neg	nicht-x
zu	APPR	zu-i
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
passte	VFIN.Full.3.Sg.Past.Ind	passen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
dauerte	VFIN.Full.3.Sg.Past.Ind	dauern-v
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
um	APPR	um-i
zu	PART.Zu	zu-x
erkennen	VINF.Full	erkennen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
das	ART.Def.Acc.Sg.Neut	die-x
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
Problem	N.Reg.Acc.Sg.Neut	Problem-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
und	CONJ.Coord	und-c
um	CONJ.SubInf	um-c
dann	ADV	dann-a
zu	PART.Zu	zu-x
bitten	VINF.Full	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Gewohnheit	N.Reg.Acc.Sg.Fem	Gewohnheit-n
zu	PART.Zu	zu-x
korrigieren	VINF.Full	korrigieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bis	APPR	bis-i
dahin	PROADV.Dem	dahin-x
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
das	ART.Def.Nom.Sg.Neut	die-x
Durcheinander	N.Reg.Nom.Sg.Neut	Durcheinander-n
schon	ADV	schon-a
einen	ART.Indef.Acc.Sg.Masc	eine-x
großen	ADJA.Pos.Acc.Sg.Masc	groß-j
Vorsprung	N.Reg.Acc.Sg.Masc	Vorsprung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
noch	ADV	noch-a
nie	ADV	nie-a
gehört	VPP.Full.Psp	gehören|hören-v
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
Richtig	ADJD.Pos	richtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sahen	VFIN.Full.3.Pl.Past.Ind	sehen-v
andere	PRO.Indef.Subst.Nom.Pl.*	andere-p
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Namen	N.Reg.Acc.Sg.Masc	Name-n
verwenden	VINF.Full	verwenden-v
und	CONJ.Coord	und-c
gingen	VFIN.Full.3.Pl.Past.Ind	gehen-v
davon	PROADV.Dem	davon-x
aus	PART.Verb	aus-x
<g/>
,	SYM.Pun.Comma	,-x
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
müsste	VFIN.Mod.3.Sg.Past.Subj	müssen-v
richtig	ADJD.Pos	richtig-j
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
verbreitet	VFIN.Full.3.Sg.Pres.Ind	verbreiten-v
auch	ADV	auch-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
falsches	ADJA.Pos.Nom.Sg.Neut	falsch-j
Bild	N.Reg.Nom.Sg.Neut	Bild-n
des	ART.Def.Gen.Sg.Masc	die-x
Systemursprungs	N.Reg.Gen.Sg.Masc	Systemursprung-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
zu	APPR	zu-i
der	ART.Def.Dat.Sg.Fem	die-x
Annahme	N.Reg.Dat.Sg.Fem	Annahme-n
neigt	VFIN.Full.3.Sg.Pres.Ind	neigen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Systemgeschichte	N.Reg.Nom.Sg.Fem	Systemgeschichte-n
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
so	ADV	so-a
gewesen	VPP.Aux.Psp	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wie	CONJ.Comp	wie-c
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
auf	APPR	auf-i
diesem	PRO.Dem.Attr.Dat.Sg.Masc	diese-p
Namen	N.Reg.Dat.Sg.Masc	Name-n
passt	VFIN.Full.3.Sg.Pres.Ind	passen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
häufig	ADJD.Pos	häufig-j
angenommen	VPP.Full.Psp	annehmen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
von	APPR	von-i
Linus	N.Name.Dat.Sg.Fem	Linus-n
Torvalds	N.Name.Dat.Sg.*	Torvalds-n
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
1991	CARD	[number]-m
begonnen	VPP.Full.Psp	beginnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
falsche	ADJA.Pos.Nom.Sg.Neut	falsch-j
Bild	N.Reg.Nom.Sg.Neut	Bild-n
neigt	VFIN.Full.3.Sg.Pres.Ind	neigen-v
die	ART.Def.Acc.Sg.Fem	die-x
Idee	N.Reg.Acc.Sg.Fem	Idee-n
zu	PART.Zu	zu-x
verstärken	VINF.Full	verstärken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
genannt	VPP.Full.Psp	nennen-v
werden	VINF.Aux	werden-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Attr.Nom.Pl.Fem	viele-p
der	ART.Def.Gen.Pl.Fem	die-x
hier	ADV	hier-a
gestellten	ADJA.Pos.Gen.Pl.Fem	gestellt-j
Fragen	N.Reg.Gen.Pl.Fem	Frage-n
stellen	VFIN.Full.3.Pl.Pres.Ind	stellen-v
Versuche	N.Reg.Acc.Pl.Masc	Versuch-n
dar	PART.Verb	dar-x
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
zu	PART.Zu	zu-x
rechtfertigen	VINF.Full	rechtfertigen-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Benutzer	N.Reg.Acc.Sg.Masc	Benutzer-n
gewohnt	VPP.Full.Psp	wohnen-v
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sollte	VFIN.Mod.3.Sg.Past.Subj	sollen-v
immer	ADV	immer-a
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
statt	APPR	statt-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
gesagt	VPP.Full.Psp	sagen-v
werden	VINF.Aux	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#always	ADJA.Pos.Nom.Sg.Neut	#always-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Nicht	PART.Neg	nicht-x
immer	ADV	immer-a
-	SYM.Pun.Hyph	--x
nur	ADV	nur-a
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
spricht	VFIN.Full.3.Sg.Pres.Ind	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bezieht	VFIN.Full.3.Sg.Pres.Ind	beziehen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
konkret	ADJD.Pos	konkret-j
auf	APPR	auf-i
den	ART.Def.Acc.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
Linux	N.Reg.Nom.Sg.Neut	Linux-n
genannt	VPP.Full.Psp	nennen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
von	APPR	von-i
seinem	PRO.Poss.Attr.Dat.Sg.Masc	seine-p
Entwickler	N.Reg.Dat.Sg.Masc	Entwickler-n
gewählten	ADJA.Pos.Acc.Sg.Masc	gewählt-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
das	ART.Def.Nom.Sg.Neut	die-x
Gesamtsystem	N.Reg.Nom.Sg.Neut	Gesamtsystem-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
genannt	VPP.Full.Psp	nennen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
als	APPR	als-i
Konsequenz	N.Reg.Nom.Sg.Fem	Konsequenz-n
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
mit	APPR	mit-i
demselben	PRO.Dem.Attr.Dat.Sg.Masc	dieselbe-p
Namen	N.Reg.Dat.Sg.Masc	Name-n
wie	CONJ.Comp	wie-c
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
genannt	VPP.Full.Psp	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
bewirkt	VFIN.Full.3.Sg.Pres.Ind	bewirken-v
vielerlei	PRO.Indef.Attr.*.*.*	vielerlei-p
Verwirrung	N.Reg.Acc.Sg.Fem	Verwirrung-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
nur	ADV	nur-a
Experten	N.Reg.Nom.Pl.Masc	Experte-n
sagen	VINF.Full	sagen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Aussage	N.Reg.Nom.Sg.Fem	Aussage-n
über	APPR	über-i
den	ART.Def.Acc.Sg.Masc	die-x
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
oder	CONJ.Coord	oder-c
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
gemacht	VPP.Full.Psp	machen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Indem	CONJ.SubFin	indem-c
das	ART.Def.Nom.Sg.Neut	die-x
Gesamtsystem	N.Reg.Nom.Sg.Neut	Gesamtsystem-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
der	ART.Def.Nom.Sg.Masc	die-x
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
genannt	VPP.Full.Psp	nennen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
vermeidet	VFIN.Full.3.Sg.Pres.Ind	vermeiden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
die	ART.Def.Acc.Sg.Fem	die-x
Mehrdeutigkeit	N.Reg.Acc.Sg.Fem	Mehrdeutigkeit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
genau	ADJD.Pos	genau-j
so	ADV	so-a
erfolgreich	ADJD.Pos	erfolgreich-j
gewesen	VPP.Aux.Psp	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
GNU	N.Reg.Acc.Sg.Neut	GNU-n
gegeben	VPP.Full.Psp	geben-v
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#linuxalone	N.Reg.Nom.Sg.Fem	#linuxalone-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
In	APPR	in-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
alternativen	ADJA.Pos.Dat.Sg.Fem	alternativ-j
Welt	N.Reg.Dat.Sg.Fem	Welt-n
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
heute	ADV	heute-a
so	ADV	so-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Name.Acc.Sg.*	Linux-System-n
nicht	PART.Neg	nicht-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
überhaupt	ADV	überhaupt-a
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Niemand	PRO.Indef.Subst.Nom.Sg.Masc	niemand-p
versuchte	VFIN.Full.3.Sg.Past.Ind	versuchen-v
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
Achtzigern	N.Reg.Dat.Pl.Masc	Achtziger-n
außer	APPR	außer-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
und	CONJ.Coord	und-c
(	SYM.Paren.Left	(-x
<g/>
später	ADJD.Comp	später-j
<g/>
)	SYM.Paren.Right	)-x
der	ART.Def.Dat.Sg.Fem	die-x
CSRG	N.Name.Dat.Sg.Fem	CSRG-n
aus	APPR	aus-i
Berkeley	N.Name.Dat.Sg.Neut	Berkeley-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
insbesondere	ADV	insbesondere-a
vom	APPRART.Dat.Sg.Masc	von-i
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
gebeten	VPP.Full.Psp	bitten-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
frei	ADJD.Pos	frei-j
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.Gen.Sg.Masc	Torvalds-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
1990	CARD	[number]-m
teilweise	ADV	teilweise-a
durch	APPR	durch-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
Vortrag	N.Reg.Acc.Sg.Masc	Vortrag-n
über	APPR	über-i
GNU	N.Name.Acc.Sg.Masc	GNU-n
in	APPR	in-i
Finnland	N.Name.Dat.Sg.Neut	Finnland-n
beeinflusst	VPP.Full.Psp	beeinflussen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
möglich	ADJD.Pos	möglich-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
auch	ADV	auch-a
ohne	APPR	ohne-i
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Einfluss	N.Reg.Acc.Sg.Masc	Einfluss-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
unixoiden	ADJA.Pos.Acc.Sg.Masc	unixoid-j
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
geschrieben	VPP.Full.Psp	schreiben-v
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
geworden	VPP.Aux.Psp	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
Linus	N.Name.Nom.Sg.Fem	Linus-n
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
erneut	ADJD.Pos	erneut-j
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
GNU	N.Reg.Dat.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.*	GPL-n
freigab	VFIN.Full.3.Sg.Past.Ind	freigeben-v
<g/>
,	SYM.Pun.Comma	,-x
1992	CARD	[number]-m
frei	ADJD.Pos	frei-j
(	SYM.Paren.Left	(-x
<g/>
siehe	VIMP.Full.2.Sg	siehe-v
Versionshinweise	N.Reg.Nom.Pl.Masc	Versionshinweis-n
für	APPR	für-i
Version	N.Reg.Acc.Sg.Fem	Version-n
0.12	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Selbst	ADV	selbst-a
wenn	CONJ.SubFin	wenn-c
Torvalds	N.Name.Gen.Sg.*	Torvalds-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
unter	APPR	unter-i
irgendeiner	PRO.Indef.Attr.Dat.Sg.Fem	irgendeine-p
anderen	ADJA.Pos.Dat.Sg.Fem	ander-j
freien	ADJA.Pos.Dat.Sg.Fem	frei-j
Softwarelizenz	N.Reg.Dat.Sg.Fem	Softwarelizenz-n
freigegeben	VPP.Full.Psp	freigeben-v
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Nom.Sg.Masc	eine-x
freier	ADJA.Pos.Nom.Sg.Masc	frei-j
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
allein	ADV	allein-a
hätte	VFIN.Aux.3.Sg.Past.Subj	haben-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Welt	N.Reg.Dat.Sg.Fem	Welt-n
nicht	PART.Neg	nicht-x
viel	ADV	viel-a
bewegt	VPP.Full.Psp	bewegen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Bedeutung	N.Reg.Nom.Sg.Fem	Bedeutung-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
kam	VFIN.Full.3.Sg.Past.Ind	kommen-v
davon	PROADV.Dem	davon-x
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
größeren	ADJA.Comp.Dat.Sg.Masc	groß-j
Rahmen	N.Reg.Dat.Sg.Masc	Rahmen-n
<g/>
,	SYM.Pun.Comma	,-x
einem	ART.Indef.Dat.Sg.Neut	eine-x
komplett	ADJD.Pos	komplett-j
freien	ADJA.Pos.Dat.Sg.Neut	frei-j
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
zu	PART.Zu	zu-x
passen	VINF.Full	passen-v
<g/>
:	SYM.Pun.Colon	:-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
besser	ADJD.Comp	gut-j
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
die	ART.Def.Acc.Pl.Masc	die-x
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
mit	APPR	mit-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Aufforderung	N.Reg.Dat.Sg.Fem	Aufforderung-n
nicht	PART.Neg	nicht-x
entzweit	VPP.Full.Psp	entzweien-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#divide	N.Reg.Nom.Sg.Fem	#divide-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Indem	CONJ.SubFin	indem-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
darum	PROADV.Dem	darum-x
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
spalten	VFIN.Full.1.Pl.Pres.Ind	spalten-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
niemanden	PRO.Indef.Subst.Acc.Sg.Masc	niemand-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
darum	PROADV.Dem	darum-x
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Acc.Sg.Neut	GNU-Betriebssystem-n
zu	PART.Zu	zu-x
schenken	VINF.Full	schenken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
kritisiert	VFIN.Full.3.Sg.Pres.Ind	kritisieren-v
oder	CONJ.Coord	oder-c
verdrängt	VFIN.Full.3.Sg.Pres.Ind	verdrängen-v
niemanden	PRO.Indef.Subst.Acc.Sg.Masc	niemand-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
jedoch	ADV	jedoch-a
Leute	N.Reg.Acc.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
mögen	VFIN.Full.3.Pl.Pres.Ind	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Manchmal	ADV	manchmal-a
bleiben	VFIN.Full.3.Pl.Pres.Ind	bleiben-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
uns	PRO.Refl.Subst.3.Dat.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Antwort	N.Reg.Acc.Sg.Fem	Antwort-n
schuldig	ADJD.Pos	schuldig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gelegentlich	ADJD.Pos	gelegentlich-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
so	ADV	so-a
unhöflich	ADJD.Pos	unhöflich-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
fragt	VFIN.Full.3.Sg.Pres.Ind	fragen-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
absichtlich	ADJD.Pos	absichtlich-j
versuchen	VFIN.Full.3.Pl.Pres.Ind	versuchen-v
<g/>
,	SYM.Pun.Comma	,-x
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
durch	ADV	durch-a
mit	APPR	mit-i
Schweigen	N.Reg.Dat.Sg.Neut	Schweigen-n
unter	APPR	unter-i
Druck	N.Reg.Acc.Sg.Masc	Druck-n
zu	PART.Zu	zu-x
setzen	VINF.Full	setzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
bringt	VFIN.Full.3.Sg.Pres.Ind	bringen-v
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
nicht	PART.Neg	nicht-x
zum	APPRART.Dat.Sg.Neut	zu-i
Schweigen	N.Reg.Dat.Sg.Neut	Schweigen-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
tendiert	ADJD.Pos	tendiert-j
dazu	PROADV.Dem	dazu-x
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
zu	PART.Zu	zu-x
spalten	VINF.Full	spalten-v
<g/>
;	SYM.Pun.Sent	;-x
deswegen	PROADV.Dem	deswegen-x
hoffen	VFIN.Full.1.Pl.Pres.Ind	hoffen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.*.*	sie-p
überzeugen	VINF.Full	überzeugen-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
aufzuhören	VINF.Full.zu	aufhören-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nur	ADV	nur-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
sekundäre	ADJA.Pos.Nom.Sg.Fem	sekundär-j
Ursache	N.Reg.Nom.Sg.Fem	Ursache-n
der	ART.Def.Gen.Sg.Fem	die-x
Spaltung	N.Reg.Gen.Sg.Fem	Spaltung-n
in	APPR	in-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
größte	ADJA.Sup.Nom.Sg.Fem	groß-j
Spaltung	N.Reg.Nom.Sg.Fem	Spaltung-n
der	ART.Def.Gen.Sg.Fem	die-x
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zwischen	APPR	zwischen-i
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
als	APPR	als-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
soziale	ADJA.Pos.Acc.Sg.Fem	sozial-j
und	CONJ.Coord	und-c
ethische	ADJA.Pos.Acc.Sg.Fem	ethisch-j
Frage	N.Reg.Acc.Sg.Fem	Frage-n
zu	PART.Zu	zu-x
schätzen	VINF.Full	schätzen-v
wissen	VINF.Full	wissen-v
und	CONJ.Coord	und-c
proprietäre	ADJA.Pos.Acc.Pl.Fem	proprietär-j
Software	N.Reg.Acc.Pl.Fem	Software-n
als	APPR	als-i
soziales	ADJA.Pos.Acc.Sg.Neut	sozial-j
Problem	N.Reg.Acc.Sg.Neut	Problem-n
verstehen	VINF.Full	verstehen-v
(	SYM.Paren.Left	(-x
<g/>
Unterstützer	N.Reg.Nom.Sg.Masc	Unterstützer-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Gen.Sg.Fem	Freie-Software-Bewegung-n
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
diejenigen	PRO.Dem.Subst.Acc.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
nur	ADV	nur-a
praktischen	ADJA.Pos.Acc.Sg.Masc	praktisch-j
Nutzen	N.Reg.Acc.Sg.Masc	Nutzen-n
anführen	VFIN.Full.3.Pl.Pres.Ind	anführen-v
und	CONJ.Coord	und-c
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
nur	ADV	nur-a
als	APPR	als-i
effizientes	ADJA.Pos.Acc.Sg.Neut	effizient-j
Entwicklungsmodell	N.Reg.Acc.Sg.Neut	Entwicklungsmodell-n
präsentieren	VINF.Full	präsentieren-v
(	SYM.Paren.Left	(-x
<g/>
Open-Source-Bewegung	N.Reg.Nom.Sg.Fem	Open-Source-Bewegung-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Meinungsverschiedenheit	N.Reg.Nom.Sg.Fem	Meinungsverschiedenheit-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
Namensfrage	N.Reg.Nom.Sg.Fem	Namensfrage-n
-	SYM.Pun.Hyph	--x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
unterschiedlicher	ADJA.Pos.Gen.Pl.Masc	unterschiedlich-j
Grundwerte	N.Reg.Gen.Pl.Masc	Grundwert-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
wichtig	ADJD.Pos	wichtig-j
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Meinungsverschiedenheit	N.Reg.Acc.Sg.Fem	Meinungsverschiedenheit-n
zu	PART.Zu	zu-x
erkennen	VINF.Full	erkennen-v
und	CONJ.Coord	und-c
darüber	PROADV.Dem	darüber-x
nachzudenken	VINF.Full.zu	nachdenken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Fem	die-x
Bezeichnungen	N.Reg.Nom.Pl.Fem	Bezeichnung-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
und	CONJ.Coord	und-c
Open	FM	Open-x
Source	FM	Source-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
die	ART.Def.Nom.Pl.Neut	die-x
Banner	N.Reg.Nom.Pl.Neut	Banner-n
der	ART.Def.Gen.Pl.Fem	die-x
beiden	PRO.Indef.Attr.Gen.Pl.Fem	beide-p
Positionen	N.Reg.Gen.Pl.Fem	Position-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Siehe	VIMP.Full.2.Sg	siehe-v
Warum	PROADV.Inter	warum-x
Open	FM	Open-x
Source	FM	Source-x
das	ART.Def.Nom.Sg.Neut	die-x
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
von	APPR	von-i
Freie	N.Reg.Nom.Sg.Fem	Freie-n
Software	N.Reg.Dat.Sg.Fem	Software-n
verfehlt	VPP.Full.Psp	verfehlen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Uneinigkeit	N.Reg.Nom.Sg.Fem	Uneinigkeit-n
über	APPR	über-i
Werte	N.Reg.Acc.Pl.Masc	Wert-n
deckt	VFIN.Full.3.Sg.Pres.Ind	decken-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
zum	APPRART.Dat.Sg.Masc	zu-i
Teil	N.Reg.Dat.Sg.Masc	Teil-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
Maß	N.Reg.Dat.Sg.Neut	Maß-n
an	APPR	an-i
Aufmerksamkeit	N.Reg.Acc.Sg.Fem	Aufmerksamkeit-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Sg.Fem	die-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
der	ART.Def.Dat.Sg.Fem	die-x
Rolle	N.Reg.Dat.Sg.Fem	Rolle-n
des	ART.Def.Gen.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
in	APPR	in-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
schenkt	VFIN.Full.3.Sg.Pres.Ind	schenken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
schätzen	VFIN.Full.3.Pl.Pres.Ind	schätzen-v
<g/>
,	SYM.Pun.Comma	,-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
eher	ADV	eher-a
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
lernen	VFIN.Full.3.Pl.Pres.Ind	lernen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
beachten	VFIN.Full.3.Pl.Pres.Ind	beachten-v
eher	ADV	eher-a
unsere	PRO.Poss.Attr.Nom.Pl.Neut	unsre-p
philosophischen	ADJA.Pos.Nom.Pl.Neut	philosophisch-j
Argumente	N.Reg.Nom.Pl.Neut	Argument-n
für	APPR	für-i
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
(	SYM.Paren.Left	(-x
<g/>
weshalb	PROADV.Inter	weshalb-x
die	ART.Def.Acc.Sg.Fem	die-x
Wahl	N.Reg.Acc.Sg.Fem	Wahl-n
des	ART.Def.Gen.Sg.Neut	die-x
Systemnamens	N.Reg.Gen.Sg.Neut	Systemnamens-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Gesellschaft	N.Reg.Acc.Sg.Fem	Gesellschaft-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
großen	ADJA.Pos.Acc.Sg.Masc	groß-j
Unterschied	N.Reg.Acc.Sg.Masc	Unterschied-n
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Allerdings	ADV	allerdings-a
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
Uneinigkeit	N.Reg.Nom.Sg.Fem	Uneinigkeit-n
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
auch	ADV	auch-a
bestehen	VINF.Full	bestehen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
jeder	PRO.Indef.Subst.Nom.Sg.Masc	jede-p
den	ART.Def.Acc.Sg.Masc	die-x
eigentlichen	ADJA.Pos.Acc.Sg.Masc	eigentlich-j
Ursprung	N.Reg.Acc.Sg.Masc	Ursprung-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
und	CONJ.Coord	und-c
richtigen	ADJA.Pos.Acc.Sg.Masc	richtig-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
kennen	VINF.Full	kennen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
echter	ADJA.Pos.Nom.Sg.Masc	echt-j
Streitpunkt	N.Reg.Nom.Sg.Masc	Streitpunkt-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
nur	ADV	nur-a
verschwinden	VINF.Full	verschwinden-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
schätzen	VFIN.Full.1.Pl.Pres.Ind	schätzen-v
<g/>
,	SYM.Pun.Comma	,-x
entweder	CONJ.Coord	entweder-c
jeden	PRO.Indef.Subst.Acc.Sg.Masc	jede-p
überzeugen	VINF.Full	überzeugen-v
(	SYM.Paren.Left	(-x
<g/>
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
nicht	PART.Neg	nicht-x
einfach	ADJD.Pos	einfach-j
sein	VINF.Aux	sein-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
)	SYM.Paren.Right	)-x
oder	CONJ.Coord	oder-c
vollständig	ADJD.Pos	vollständig-j
besiegt	VPP.Full.Psp	besiegen-v
werden	VINF.Aux	werden-v
(	SYM.Paren.Left	(-x
<g/>
hoffentlich	ADV	hoffentlich-a
nicht	PART.Neg	nicht-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unterstützt	VFIN.Full.3.Sg.Pres.Ind	unterstützen-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
nicht	PART.Neg	nicht-x
das	ART.Def.Acc.Sg.Neut	die-x
individuelle	ADJA.Pos.Acc.Sg.Neut	individuell-j
Recht	N.Reg.Acc.Sg.Neut	Recht-n
auf	APPR	auf-i
Redefreiheit	N.Reg.Acc.Sg.Fem	Redefreiheit-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
durch	APPR	durch-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
beliebigen	ADJA.Pos.Acc.Sg.Masc	beliebig-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
zu	PART.Zu	zu-x
benennen	VINF.Full	benennen-v
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
Einzelne	ADJA.Pos.Nom.Pl.Masc	einzeln-j
wählen	VFIN.Full.3.Pl.Pres.Ind	wählen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#freespeech	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Ja	PART.Ans	ja-x
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Tat	N.Reg.Dat.Sg.Fem	Tat-n
glauben	VFIN.Full.1.Pl.Pres.Ind	glauben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Recht	N.Reg.Acc.Sg.Neut	Recht-n
auf	APPR	auf-i
Redefreiheit	N.Reg.Acc.Sg.Fem	Redefreiheit-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Neut	die-x
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
jeden	PRO.Indef.Attr.Acc.Sg.Masc	jede-p
Namen	N.Reg.Acc.Sg.Masc	Name-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
möchte	VFIN.Mod.3.Sg.Past.Subj	mögen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
gerecht	ADJD.Pos	gerecht-j
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Masc	die-x
Werte	N.Reg.Acc.Pl.Masc	Wert-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
fördern	VINF.Full	fördern-v
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
GNU	N.Name.Acc.Sg.Fem	GNU-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
und	CONJ.Coord	und-c
andere	PRO.Indef.Subst.Nom.Sg.Neut	andere-p
zu	PART.Zu	zu-x
informieren	VINF.Full	informieren-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
diese	PRO.Dem.Attr.Nom.Pl.Masc	diese-p
Werte	N.Reg.Nom.Pl.Masc	Wert-n
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
ins	APPRART.Acc.Sg.Neut	in-i
Leben	N.Reg.Acc.Sg.Neut	Leben-n
gerufen	VPP.Full.Psp	rufen-v
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
jedem	PRO.Indef.Subst.Dat.Sg.*	jede-p
die	ART.Def.Acc.Sg.Fem	die-x
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
bekannt	ADJD.Pos	bekannt-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Erwähnung	N.Reg.Nom.Sg.Fem	Erwähnung-n
von	N.Name.*.*.*	von-n
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.*.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
'	SYM.Quot.Right	'-x
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
nicht	PART.Neg	nicht-x
selbstverständlich	ADJD.Pos	selbstverständlich-j
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#everyoneknows	ADJA.Pos.Nom.Sg.Neut	#everyoneknows-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Erfahrung	N.Reg.Nom.Sg.Fem	Erfahrung-n
zeigt	VFIN.Full.3.Sg.Pres.Ind	zeigen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
und	CONJ.Coord	und-c
die	ART.Def.Nom.Pl.Neut	die-x
Rechner-nutzende	N.Reg.Nom.Pl.Neut	Rechner-nutzende-n
Öffentlichkeit	N.Reg.Acc.Sg.Fem	Öffentlichkeit-n
im	APPRART.Dat.Sg.Neut	in-i
Allgemeinen	ADJA.Pos.Dat.Sg.Neut	allgemein-j
oft	ADV	oft-a
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
wissen	VINF.Full	wissen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Artikel	N.Reg.Nom.Pl.Masc	Artikel-n
über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
erwähnen	VFIN.Full.3.Pl.Pres.Ind	erwähnen-v
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
oder	CONJ.Coord	oder-c
die	ART.Def.Acc.Pl.Neut	die-x
Ideale	N.Reg.Acc.Pl.Neut	Ideal-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
GNU	N.Name.Nom.Sg.*	GNU-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU-Nutzer	N.Reg.Nom.Pl.Masc	GNU-Nutzer-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
noch	ADV	noch-a
nie	ADV	nie-a
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
gehört	VPP.Full.Psp	gehören|hören-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
weitere	ADJA.Comp.Acc.Sg.Fem	weit-j
Auskunft	N.Reg.Acc.Sg.Fem	Auskunft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.*	die-x
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
Geeks	N.Reg.Nom.Pl.Masc	Geeks-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
an	APPR	an-i
die	ART.Def.Acc.Pl.Masc	die-x
Geeks	N.Reg.Acc.Pl.Masc	Geeks-n
denken	VFIN.Full.3.Pl.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Masc	die-p
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
kennen	VFIN.Full.3.Pl.Pres.Ind	kennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Geeks	N.Reg.Nom.Pl.Masc	Geeks-n
wissen	VFIN.Full.3.Pl.Pres.Ind	wissen-v
oft	ADV	oft-a
über	APPR	über-i
GNU	N.Name.Gen.Sg.Fem	GNU-n
Bescheid	N.Reg.Acc.Sg.Masc	Bescheid-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
viele	PRO.Indef.Subst.Nom.Pl.Masc	viele-p
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
völlig	ADJD.Pos	völlig-j
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Vorstellung	N.Reg.Acc.Sg.Fem	Vorstellung-n
davon	PROADV.Dem	davon-x
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
GNU	ADJD.Pos	GNU-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
denken	VFIN.Full.3.Pl.Pres.Ind	denken-v
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Sammlung	N.Reg.Nom.Sg.Fem	Sammlung-n
von	APPR	von-i
Hilfsprogrammen	N.Reg.Dat.Pl.Neut	Hilfsprogramm-n
oder	CONJ.Coord	oder-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
zur	APPRART.Dat.Sg.Fem	zu-i
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
von	APPR	von-i
Hilfsprogrammen	N.Reg.Dat.Pl.Neut	Hilfsprogramm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
typische	ADJA.Pos.Nom.Sg.Masc	typisch-j
Wortlaut	N.Reg.Nom.Sg.Masc	Wortlaut-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Frage	N.Reg.Gen.Sg.Fem	Frage-n
veranschaulicht	VFIN.Full.3.Sg.Pres.Ind	veranschaulichen-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
anderes	PRO.Indef.Subst.Acc.Sg.Neut	andere-p
weit	ADJD.Pos	weit-j
verbreitetes	ADJA.Pos.Acc.Sg.Neut	verbreitet-j
Missverständnis	N.Reg.Acc.Sg.Fem	Missverständnis-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Von	APPR	von-i
GNUs	N.Name.Gen.Sg.*	GNUs-n
Rolle	N.Reg.Dat.Sg.Fem	Rolle-n
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
von	APPR	von-i
irgendwas	PRO.Indef.Subst.*.*.*	irgendwas-p
zu	PART.Zu	zu-x
sprechen	VINF.Full	sprechen-v
setzt	VFIN.Full.3.Sg.Pres.Ind	setzen-v
voraus	PART.Verb	voraus-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GNU	N.Name.Nom.Sg.Neut	GNU-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Gruppe	N.Reg.Acc.Sg.Fem	Gruppe-n
von	APPR	von-i
Personen	N.Reg.Dat.Pl.Fem	Person-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
sinnvoll	ADJD.Pos	sinnvoll-j
<g/>
,	SYM.Pun.Comma	,-x
über	APPR	über-i
die	ART.Def.Acc.Sg.Fem	die-x
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
des	ART.Def.Gen.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
in	APPR	in-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
oder	CONJ.Coord	oder-c
einer	ART.Indef.Dat.Sg.Fem	eine-x
anderen	ADJA.Pos.Dat.Sg.Fem	ander-j
Aktivität	N.Reg.Dat.Sg.Fem	Aktivität-n
zu	PART.Zu	zu-x
sprechen	VINF.Full	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
jedoch	ADV	jedoch-a
von	APPR	von-i
die	ART.Def.Dat.Pl.Fem	die-x
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
zu	PART.Zu	zu-x
sprechen	VINF.Full	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
die	ART.Def.Nom.Sg.Fem	die-x
Rolle	N.Reg.Nom.Sg.Fem	Rolle-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
in	APPR	in-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
System	N.Reg.Dat.Sg.Neut	System-n
bekannt	ADJD.Pos	bekannt-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wichtig	ADJD.Pos	wichtig-j
<g/>
,	SYM.Pun.Comma	,-x
welcher	PRO.Inter.Attr.Nom.Sg.Masc	welche-p
Name	N.Reg.Nom.Sg.Masc	Name-n
benutzt	VPP.Full.Psp	benutzen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#everyoneknows2	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Worte	N.Reg.Nom.Pl.Neut	Wort-n
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
Wissen	N.Reg.Acc.Sg.Neut	Wissen-n
widerspiegeln	VFIN.Full.3.Pl.Pres.Ind	widerspiegeln-v
<g/>
,	SYM.Pun.Comma	,-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
andere	PRO.Indef.Subst.Acc.Pl.*	andere-p
nicht	PART.Neg	nicht-x
unterrichtet	ADJD.Pos	unterrichtet-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
vom	APPRART.Dat.Sg.Neut	von-i
GNU	N.Reg.Dat.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
gehört	VPP.Full.Psp	gehören|hören-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
denken	VINF.Full	denken-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
,	SYM.Pun.Comma	,-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
von	APPR	von-i
Linus	N.Name.Dat.Sg.Fem	Linus-n
Torvalds	N.Name.*.*.*	Torvalds-n
gestartet	VPP.Full.Psp	starten-v
und	CONJ.Coord	und-c
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
offener	ADJA.Pos.Nom.Sg.Masc	offen-j
Quellcode	N.Reg.Nom.Sg.Masc	Quellcode-n
'	SYM.Quot.Right	'-x
<g/>
Open	FM	Open-x
Source	FM	Source-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
nicht	PART.Neg	nicht-x
erklären	VFIN.Full.3.Pl.Pres.Ind	erklären-v
<g/>
,	SYM.Pun.Comma	,-x
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
dann	ADV	dann-a
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
mit	APPR	mit-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
abzukürzen	VINF.Full.zu	abkürzen-v
nicht	PART.Neg	nicht-x
genauso	ADV	genauso-a
wie	CONJ.Comp	wie-c
Microsoft	N.Name.Nom.Sg.*	Microsoft-n
Windows	N.Name.Nom.Sg.*	Windows-n
mit	APPR	mit-i
Windows	N.Name.Dat.Sg.*	Windows-n
abzukürzen	VINF.Full.zu	abkürzen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#windows	ADJA.Pos.Nom.Sg.Neut	#windows-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
sinnvoll	ADJD.Pos	sinnvoll-j
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
häufig	ADJD.Pos	häufig-j
verwendeten	ADJA.Pos.Acc.Sg.Masc	verwendet-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
abzukürzen	VINF.Full.zu	abkürzen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Sg.Fem	die-x
Abkürzung	N.Reg.Nom.Sg.Fem	Abkürzung-n
irreführend	ADJD.Pos	irreführend-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Fast	ADV	fast-a
jeder	PRO.Indef.Subst.Nom.Sg.Masc	jede-p
in	APPR	in-i
den	ART.Def.Dat.Pl.Neut	die-x
entwickelten	ADJA.Pos.Dat.Pl.Neut	entwickelt-j
Ländern	N.Reg.Dat.Pl.Neut	Land-n
weiß	VFIN.Full.3.Sg.Pres.Ind	wissen-v
wirklich	ADJD.Pos	wirklich-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
Windows-System	N.Reg.Nom.Sg.Neut	Windows-System-n
von	APPR	von-i
Microsoft	N.Name.Dat.Sg.*	Microsoft-n
erstellt	VPP.Full.Psp	erstellen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Abkürzung	N.Reg.Nom.Sg.Fem	Abkürzung-n
von	APPR	von-i
Microsoft	N.Name.Nom.Sg.*	Microsoft-n
Windows	N.Name.Dat.Sg.*	Windows-n
mit	APPR	mit-i
Windows	N.Name.Dat.Sg.*	Windows-n
führt	VFIN.Full.3.Sg.Pres.Ind	führen-v
also	ADV	also-a
niemanden	PRO.Indef.Subst.Acc.Sg.Masc	niemand-p
hinsichtlich	APPR	hinsichtlich-i
Natur	N.Reg.Gen.Sg.Fem	Natur-n
und	CONJ.Coord	und-c
Ursprungs	N.Reg.Gen.Sg.Masc	Ursprung-n
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Irre	N.Reg.Acc.Sg.Fem	Irre-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
aber	ADV	aber-a
mit	APPR	mit-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
abzukürzen	VINF.Full.zu	abkürzen-v
<g/>
,	SYM.Pun.Comma	,-x
vermittelt	VFIN.Full.3.Sg.Pres.Ind	vermitteln-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
falsche	ADJA.Pos.Nom.Sg.Fem	falsch-j
Vorstellung	N.Reg.Nom.Sg.Fem	Vorstellung-n
davon	PROADV.Dem	davon-x
<g/>
,	SYM.Pun.Comma	,-x
wo	PROADV.Inter	wo-x
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
her	ADV	her-a
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
selbst	ADV	selbst-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
irreführend	ADJD.Pos	irreführend-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
GNU	N.Name.Nom.Sg.*	GNU-n
und	CONJ.Coord	und-c
Microsoft	N.Name.Nom.Sg.*	Microsoft-n
nicht	PART.Neg	nicht-x
dasselbe	PRO.Dem.Subst.Nom.Sg.Neut	dieselbe-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Microsoft	N.Name.Nom.Sg.*	Microsoft-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	ADJD.Pos	GNU-j
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNU	N.Name.Nom.Sg.*	GNU-n
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
Sammlung	N.Reg.Nom.Sg.Fem	Sammlung-n
von	APPR	von-i
Dienstprogrammen	N.Reg.Dat.Pl.Neut	Dienstprogramm-n
zur	APPRART.Dat.Sg.Fem	zu-i
Programmierung	N.Reg.Dat.Sg.Fem	Programmierung-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
in	APPR	in-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
enthalten	VPP.Full.Psp	enthalten-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#tools	ADJA.Pos.Nom.Sg.Neut	#tools-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
<g/>
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
für	APPR	für-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
vollständiges	ADJA.Pos.Acc.Sg.Neut	vollständig-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
betrachten	VFIN.Full.3.Pl.Pres.Ind	betrachten-v
<g/>
,	SYM.Pun.Comma	,-x
bekommen	VFIN.Full.3.Pl.Pres.Ind	bekommen-v
häufig	ADJD.Pos	häufig-j
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
überhaupt	ADV	überhaupt-a
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
erfahren	VFIN.Full.3.Pl.Pres.Ind	erfahren-v
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Vorstellung	N.Reg.Acc.Sg.Fem	Vorstellung-n
von	APPR	von-i
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
GNU	ADJD.Pos	GNU-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
denken	VFIN.Full.3.Pl.Pres.Ind	denken-v
vielleicht	ADV	vielleicht-a
<g/>
,	SYM.Pun.Comma	,-x
GNU	ADJD.Pos	GNU-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Sammlung	N.Reg.Gen.Sg.Fem	Sammlung-n
von	APPR	von-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
-	SYM.Pun.Hyph	--x
oft	ADV	oft-a
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Programmierwerkzeuge	N.Reg.Acc.Pl.Neut	Programmierwerkzeug-n
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
einige	PRO.Indef.Subst.Nom.Pl.Neut	einige-p
unserer	PRO.Poss.Attr.Gen.Pl.Neut	unsre-p
Programmierwerkzeuge	N.Reg.Gen.Pl.Neut	Programmierwerkzeug-n
eigenständig	ADJD.Pos	eigenständig-j
populär	ADJD.Pos	populär-j
geworden	VPP.Aux.Psp	werden-v
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Vorstellung	N.Reg.Nom.Sg.Fem	Vorstellung-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GNU	N.Name.Nom.Sg.Neut	GNU-n
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Betriebssystems	N.Reg.Gen.Sg.Neut	Betriebssystem-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
schwer	ADJD.Pos	schwer-j
in	APPR	in-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
konzeptionellen	ADJA.Pos.Acc.Sg.Masc	konzeptionell-j
Rahmen	N.Reg.Acc.Sg.Masc	Rahmen-n
einzuordnen	VINF.Full.zu	einordnen-v
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
dem	PRO.Rel.Subst.Dat.Sg.Masc	die-p
das	ART.Def.Nom.Sg.Neut	die-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
mit	APPR	mit-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
bezeichnet	VPP.Full.Psp	bezeichnen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
nach	APPR	nach-i
dem	ART.Def.Dat.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Dat.Sg.Neut	GNU-Betriebssystem-n
benannt	VPP.Full.Psp	benennen-v
-	SYM.Pun.Hyph	--x
das	ART.Def.Nom.Sg.Neut	die-x
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
(	SYM.Paren.Left	(-x
<g/>
siehe	VIMP.Full.2.Sg	siehe-v
Neue	ADJA.Pos.Nom.Sg.Fem	neu-j
Unix-Implementierung	N.Reg.Nom.Sg.Fem	Unix-Implementierung-n
<g/>
:	SYM.Pun.Colon	:-x
Ursprüngliche	ADJA.Pos.Nom.Sg.Fem	ursprünglich-j
Ankündigung	N.Reg.Nom.Sg.Fem	Ankündigung-n
[	SYM.Paren.Left	[-x
<g/>
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
<g/>
]	SYM.Paren.Right	]-x
(	SYM.Paren.Left	(-x
<g/>
von	APPR	von-i
1983	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
entwickelten	VFIN.Full.1.Pl.Past.Ind	entwickeln-v
Programme	N.Reg.Acc.Pl.Neut	Programm-n
wie	CONJ.Comp	wie-c
GCC	N.Name.Nom.Sg.*	GCC-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.*	GNU-n
Emacs	N.Name.Nom.Sg.*	Emacs-n
<g/>
,	SYM.Pun.Comma	,-x
GAS	N.Reg.Nom.Sg.Neut	Gas-n
<g/>
,	SYM.Pun.Comma	,-x
GLIBC	N.Name.Nom.Sg.*	GLIBC-n
<g/>
,	SYM.Pun.Comma	,-x
BASH	N.Name.Nom.Sg.*	BASH-n
usw.	ADV	usw.-a
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Acc.Sg.Neut	GNU-Betriebssystem-n
brauchten	VFIN.Full.1.Pl.Past.Ind	brauchen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GCC	N.Name.Nom.Sg.*	GCC-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
Compiler	N.Reg.Nom.Sg.Masc	Compiler-n
Collection	N.Reg.Nom.Sg.Fem	Collection-n
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Kompiler	N.Reg.Nom.Sg.Masc	Kompiler-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Acc.Sg.Neut	GNU-Betriebssystem-n
geschrieben	VPP.Full.Psp	schreiben-v
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Masc	die-x
vielen	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
am	APPRART.Dat.Sg.Masc	an-i
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
arbeiten	VFIN.Full.3.Pl.Pres.Ind	arbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
entwickelten	VFIN.Full.3.Pl.Past.Ind	entwickeln-v
auch	ADV	auch-a
Ghostscript	N.Name.Nom.Sg.*	Ghostscript-n
<g/>
,	SYM.Pun.Comma	,-x
GNUCash	N.Name.*.*.*	GNUCash-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.*.*.*	GNU-n
Chess	N.Name.Nom.Sg.*	Chess-n
und	CONJ.Coord	und-c
GNOME	N.Reg.Nom.Pl.Masc	Gnom-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Unterschied	N.Reg.Nom.Sg.Masc	Unterschied-n
zwischen	APPR	zwischen-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
und	CONJ.Coord	und-c
einem	ART.Indef.Dat.Sg.Masc	eine-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
'	SYM.Quot.Right	'-x
<g/>
Kernel	N.Reg.Nom.Sg.Masc	Kernel-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#osvskernel	N.Reg.Nom.Sg.Masc	#osvskernel-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
verwenden	VFIN.Full.1.Pl.Pres.Ind	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
meint	VFIN.Full.3.Sg.Pres.Ind	meinen-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Sammlung	N.Reg.Nom.Sg.Fem	Sammlung-n
von	APPR	von-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Acc.Pl.Neut	die-p
ausreicht	VFIN.Full.3.Sg.Pres.Ind	ausreichen-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
für	APPR	für-i
verschiedenste	ADJA.Sup.Acc.Pl.Fem	verschieden-j
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
universelles	ADJA.Pos.Nom.Sg.Neut	universell-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
vollständig	ADJD.Pos	vollständig-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
handhaben	VINF.Full	handhaben-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
viele	PRO.Indef.Attr.Acc.Pl.Masc	viele-p
Benutzer	N.Reg.Acc.Pl.Masc	Benutzer-n
durchführen	VINF.Full	durchführen-v
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eines	PRO.Indef.Subst.Nom.Sg.Neut	eine-p
der	ART.Def.Gen.Pl.Neut	die-x
Programme	N.Reg.Gen.Pl.Neut	Programm-n
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
-	SYM.Pun.Hyph	--x
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
den	ART.Def.Dat.Pl.Neut	die-x
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
ausgeführten	ADJA.Pos.Dat.Pl.Neut	ausgeführt-j
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
die	ART.Def.Acc.Pl.Fem	die-x
Systemressourcen	N.Reg.Acc.Pl.Fem	Systemressource-n
zuweist	VFIN.Full.3.Sg.Pres.Ind	zuweisen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
kümmert	VFIN.Full.3.Sg.Pres.Ind	kümmern-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auch	ADV	auch-a
um	APPR	um-i
das	ART.Def.Acc.Sg.Neut	die-x
Starten	N.Reg.Acc.Sg.Neut	Starten-n
und	CONJ.Coord	und-c
Stoppen	N.Reg.Acc.Sg.Neut	Stoppen-n
anderer	ADJA.Pos.Gen.Pl.Neut	ander-j
Programme	N.Reg.Gen.Pl.Neut	Programm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Um	CONJ.SubInf	um-c
die	ART.Def.Acc.Pl.Neut	die-x
Dinge	N.Reg.Acc.Pl.Neut	Ding-n
zu	PART.Zu	zu-x
verwirren	VINF.Full	verwirren-v
<g/>
,	SYM.Pun.Comma	,-x
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
einige	PRO.Indef.Attr.Nom.Pl.*	einige-p
Leute	N.Reg.Nom.Pl.*	Leute-n
die	ART.Def.Acc.Sg.Fem	die-x
Bezeichnung	N.Reg.Acc.Sg.Fem	Bezeichnung-n
"	SYM.Quot.Left	"-x
<g/>
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
"	SYM.Quot.Left	"-x
und	CONJ.Coord	und-c
meinen	VFIN.Full.3.Pl.Pres.Ind	meinen-v
eigentlich	ADV	eigentlich-a
den	ART.Def.Acc.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Verwendung	N.Reg.Nom.Sg.Fem	Verwendung-n
beider	PRO.Indef.Attr.Gen.Pl.Masc	beide-p
Begriffe	N.Reg.Gen.Pl.Masc	Begriff-n
reichen	VFIN.Full.3.Pl.Pres.Ind	reichen-v
viele	PRO.Indef.Attr.Acc.Pl.Neut	viele-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
zurück	PART.Verb	zurück-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Verwendung	N.Reg.Nom.Sg.Fem	Verwendung-n
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
<g/>
"	SYM.Quot.Left	"-x
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
findet	VFIN.Full.3.Sg.Pres.Ind	finden-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
in	APPR	in-i
vielen	PRO.Indef.Attr.Dat.Pl.Neut	viele-p
Lehrbüchern	N.Reg.Dat.Pl.Neut	Lehrbuch-n
über	APPR	über-i
den	ART.Def.Acc.Sg.Masc	die-x
Systementwurf	N.Reg.Acc.Sg.Masc	Systementwurf-n
und	CONJ.Coord	und-c
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
bis	APPR	bis-i
in	APPR	in-i
die	ART.Def.Acc.Pl.*	die-x
Achtziger	N.Reg.Acc.Pl.*	Achtziger-n
zurück	PART.Verb	zurück-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zur	APPRART.Dat.Sg.Fem	zu-i
gleichen	ADJA.Pos.Dat.Sg.Fem	gleich-j
Zeit	N.Reg.Dat.Sg.Fem	Zeit-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
Achtzigern	N.Reg.Dat.Pl.Masc	Achtziger-n
das	ART.Def.Nom.Sg.Neut	die-x
Unix-Betriebssystem	N.Reg.Nom.Sg.Neut	Unix-Betriebssystem-n
verstanden	VPP.Full.Psp	verstehen-v
<g/>
,	SYM.Pun.Comma	,-x
alle	PRO.Indef.Attr.Acc.Pl.Neut	alle-p
Systemprogramme	N.Reg.Acc.Pl.Neut	Systemprogramm-n
zu	PART.Zu	zu-x
enthalten	VINF.Full	enthalten-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
Berkeleys	N.Name.Gen.Sg.Neut	Berkeley-n
Unix-Version	N.Reg.Nom.Sg.Fem	Unix-Version-n
enthielt	VFIN.Full.3.Sg.Past.Ind	enthalten-v
sogar	ADV	sogar-a
Spiele	N.Reg.Acc.Pl.Neut	Spiel-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
GNU	N.Name.Nom.Sg.*	GNU-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
unixoides	ADJA.Pos.Acc.Sg.Neut	unixoid-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
werden	VINF.Aux	werden-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
,	SYM.Pun.Comma	,-x
verwendeten	VFIN.Full.1.Pl.Past.Ind	verwenden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
gleiche	ADJA.Pos.Acc.Sg.Fem	gleich-j
Weise	N.Reg.Acc.Sg.Fem	Weise-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Meistens	ADV	meistens-a
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
vom	APPRART.Dat.Sg.Neut	von-i
"	SYM.Quot.Left	"-x
<g/>
Linux-Betriebssystem	N.Reg.Dat.Sg.Neut	Linux-Betriebssystem-n
<g/>
"	SYM.Quot.Left	"-x
sprechen	VFIN.Full.3.Pl.Pres.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
in	APPR	in-i
dem	ART.Def.Dat.Sg.Masc	die-x
Sinne	N.Reg.Dat.Sg.Masc	Sinn-n
wie	CONJ.Comp	wie-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
:	SYM.Pun.Colon	:-x
die	ART.Def.Acc.Sg.Fem	die-x
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Sammlung	N.Reg.Acc.Sg.Fem	Sammlung-n
von	APPR	von-i
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
darauf	PROADV.Dem	darauf-x
beziehen	VFIN.Full.3.Pl.Pres.Ind	beziehen-v
<g/>
,	SYM.Pun.Comma	,-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
bitte	ADV	bitte-a
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nur	ADV	nur-a
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
gemeint	VPP.Full.Psp	meinen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
der	ART.Def.Nom.Sg.Masc	die-x
richtige	ADJA.Pos.Nom.Sg.Masc	richtig-j
Name	N.Reg.Nom.Sg.Masc	Name-n
dafür	PROADV.Dem	dafür-x
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
bitte	ADV	bitte-a
auch	ADV	auch-a
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Unklarheiten	N.Reg.Acc.Pl.Fem	Unklarheit-n
zu	PART.Zu	zu-x
vermeiden	VINF.Full	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
welcher	PRO.Inter.Attr.Nom.Sg.Masc	welche-p
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
Software	N.Reg.Gen.Sg.Fem	Software-n
gemeint	VPP.Full.Psp	meinen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
anderen	ADJA.Pos.Acc.Sg.Masc	ander-j
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
wie	CONJ.Comp	wie-c
Systemdistribution	N.Name.Nom.Sg.*	Systemdistribution-n
anstelle	APPR	anstelle-i
von	APPR	von-i
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Programmsammlung	N.Reg.Acc.Sg.Fem	Programmsammlung-n
verwenden	VINF.Full	verwenden-v
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
schön	ADJD.Pos	schön-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dann	ADV	dann-a
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
über	APPR	über-i
GNU	N.Reg.Acc.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Reg.Acc.Pl.Fem	Linux-Distribution-n
sprechen	VFIN.Full.3.Pl.Pres.Ind	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Systems	N.Reg.Gen.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
Fundament	N.Reg.Nom.Sg.Neut	Fundament-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Hauses	N.Reg.Gen.Sg.Neut	Haus-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Haus	N.Reg.Nom.Sg.Neut	Haus-n
fast	ADV	fast-a
komplett	ADJD.Pos	komplett-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
Fundament	N.Reg.Acc.Sg.Neut	Fundament-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#house	N.Reg.Nom.Sg.Fem	#house-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
ganz	ADV	ganz-a
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
Fundament	N.Reg.Nom.Sg.Neut	Fundament-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Hauses	N.Reg.Gen.Sg.Neut	Haus-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
aufzubauen	VINF.Full.zu	aufbauen-v
nicht	PART.Neg	nicht-x
ganz	ADV	ganz-a
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
Aufbauen	N.Reg.Nom.Sg.Neut	Aufbauen-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Hauses	N.Reg.Gen.Sg.Neut	Haus-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
Haus	N.Reg.Nom.Sg.Neut	Haus-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
aus	APPR	aus-i
vielen	PRO.Indef.Attr.Dat.Pl.Neut	viele-p
kleinen	ADJA.Pos.Dat.Pl.Neut	klein-j
Bauteilen	N.Reg.Dat.Pl.Neut	Bauteil-n
errichtet	VPP.Full.Psp	errichten-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
vor	APPR	vor-i
Ort	N.Reg.Dat.Sg.Masc	Ort-n
zugeschnitten	VPP.Full.Psp	zuschneiden-v
und	CONJ.Coord	und-c
zusammengefügt	VPP.Full.Psp	zusammenfügen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
müssen	VFIN.Mod.3.Pl.Pres.Ind	müssen-v
gemeinsam	ADJD.Pos	gemeinsam-j
von	APPR	von-i
unten	ADV	unten-a
nach	ADV	nach-a
oben	ADV	oben-a
gesetzt	VPP.Full.Psp	setzen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
somit	ADV	somit-a
das	ART.Def.Nom.Sg.Neut	die-x
Fundament	N.Reg.Nom.Sg.Neut	Fundament-n
nicht	PART.Neg	nicht-x
errichtet	VPP.Full.Psp	errichten-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
wesentliches	ADJA.Pos.Nom.Sg.Neut	wesentlich-j
Gewerk	N.Reg.Nom.Sg.Neut	Gewerk-n
nicht	PART.Neg	nicht-x
errichtet	VPP.Full.Psp	errichten-v
worden	VPP.Aux.Psp	werden-v
<g/>
;	SYM.Pun.Sent	;-x
alles	PRO.Indef.Subst.Nom.Sg.Neut	alle-p
was	FM	was-x
man	FM	man-x
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Loch	N.Reg.Nom.Sg.Neut	Loch-n
im	APPRART.Dat.Sg.Masc	in-i
Boden	N.Reg.Dat.Sg.Masc	Boden-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Gegensatz	N.Reg.Dat.Sg.Masc	Gegensatz-n
dazu	PROADV.Dem	dazu-x
besteht	VFIN.Full.3.Sg.Pres.Ind	bestehen-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
aus	APPR	aus-i
komplexen	ADJA.Pos.Dat.Pl.Fem	komplex-j
Komponenten	N.Reg.Dat.Pl.Fem	Komponente-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
in	APPR	in-i
beliebiger	ADJA.Pos.Dat.Sg.Fem	beliebig-j
Reihenfolge	N.Reg.Dat.Sg.Fem	Reihenfolge-n
entwickelt	VPP.Full.Psp	entwickeln-v
werden	VINF.Aux	werden-v
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Pl.Fem	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Fem	meiste-p
Komponenten	N.Reg.Nom.Pl.Fem	Komponente-n
entwickelt	VPP.Full.Psp	entwickeln-v
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
meiste	PRO.Indef.Attr.Nom.Sg.Fem	meiste-p
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
erledigt	VPP.Full.Psp	erledigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
viel	ADV	viel-a
mehr	ADV	mehr-a
der	ART.Def.Gen.Sg.Fem	die-x
Internationale	ADJA.Pos.Gen.Sg.Fem	international-j
Raumstation	N.Reg.Gen.Sg.Fem	Raumstation-n
ähnlich	ADJD.Pos	ähnlich-j
als	CONJ.Comp	als-c
einem	ART.Indef.Dat.Sg.Neut	eine-x
Haus	N.Reg.Dat.Sg.Neut	Haus-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Raumstationmodule	N.Reg.Nom.Pl.Masc	Raumstationmodul-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Umlaufbahn	N.Reg.Dat.Sg.Fem	Umlaufbahn-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
auf	APPR	auf-i
ein	ART.Indef.Acc.Sg.Neut	eine-x
anderes	ADJA.Pos.Acc.Sg.Neut	ander-j
wichtiges	ADJA.Pos.Acc.Sg.Neut	wichtig-j
Modul	N.Reg.Acc.Sg.Neut	Modul-n
gewartet	VPP.Full.Psp	warten-v
werden	VINF.Aux	werden-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1992.	CARD	[number]-m
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
nicht	PART.Neg	nicht-x
das	ART.Def.Acc.Sg.Neut	die-x
Gehirn	N.Reg.Acc.Sg.Neut	Gehirn-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#brain	N.Name.*.*.*	#brain-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
Rechnersystem	N.Reg.Nom.Sg.Neut	Rechnersystem-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
so	ADV	so-a
wie	CONJ.Comp	wie-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
menschlicher	ADJA.Pos.Nom.Sg.Masc	menschlich-j
Körper	N.Reg.Nom.Sg.Masc	Körper-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
Teil	N.Reg.Nom.Sg.Masc	Teil-n
spielt	VFIN.Full.3.Sg.Pres.Ind	spielen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
des	ART.Def.Gen.Sg.Neut	die-x
menschlichen	ADJA.Pos.Gen.Sg.Neut	menschlich-j
Gehirns	N.Reg.Gen.Sg.Neut	Gehirn-n
vergleichbare	ADJA.Pos.Acc.Sg.Fem	vergleichbar-j
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
meiste	PRO.Indef.Subst.Nom.Sg.Fem	meiste-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
an	APPR	an-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
nicht	PART.Neg	nicht-x
das	ART.Def.Acc.Sg.Neut	die-x
Schreiben	N.Reg.Acc.Sg.Neut	Schreiben-n
des	ART.Def.Gen.Sg.Neut	die-x
Betriebssystemkerns	N.Reg.Gen.Sg.Neut	Betriebssystemkerns-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#kernelmost	N.Reg.Nom.Sg.Fem	#kernelmost-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Nein	PART.Ans	nein-x
<g/>
,	SYM.Pun.Comma	,-x
viele	PRO.Indef.Attr.Nom.Pl.Fem	viele-p
Komponenten	N.Reg.Nom.Pl.Fem	Komponente-n
bedeuten	VFIN.Full.3.Pl.Pres.Ind	bedeuten-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Menge	N.Reg.Acc.Sg.Fem	Menge-n
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
GNU	N.Name.Nom.Sg.*	GNU-n
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
so	ADV	so-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
wie	CONJ.Comp	wie-c
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
'	SYM.Quot.Right	'-x
überhaupt	ADV	überhaupt-a
nicht	PART.Neg	nicht-x
erhalten	VINF.Full	erhalten-v
und	CONJ.Coord	und-c
installieren	VINF.Full	installieren-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#notinstallable	N.Reg.Nom.Sg.Fem	#notinstallable-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
zusammengestellte	ADJA.Pos.Acc.Pl.Fem	zusammengestellt-j
und	CONJ.Coord	und-c
installierbare	ADJA.Pos.Acc.Pl.Fem	installierbar-j
Varianten	N.Reg.Acc.Pl.Fem	Variante-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
verfügbar	ADJD.Pos	verfügbar-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Keine	PRO.Indef.Subst.Nom.Sg.Fem	keine-p
davon	PROADV.Dem	davon-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
einfach	ADV	einfach-a
nur	ADV	nur-a
'	SYM.Quot.Right	'-x
<g/>
GNU	ADJD.Pos	GNU-j
<g/>
'	SYM.Quot.Right	'-x
genannt	VPP.Full.Psp	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
genau	ADJD.Pos	genau-j
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
im	APPRART.Dat.Sg.Masc	in-i
Grunde	N.Reg.Dat.Sg.Masc	Grund-n
genommen	VPP.Full.Psp	nehmen-v
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
glaubten	VFIN.Full.1.Pl.Past.Ind	glauben-v
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
zusammengestellt	ADJD.Pos	zusammengestellt-j
zur	APPRART.Dat.Sg.Fem	zu-i
Installation	N.Reg.Dat.Sg.Fem	Installation-n
freigeben	VINF.Full	freigeben-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Plan	N.Reg.Nom.Sg.Masc	Plan-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
von	APPR	von-i
den	ART.Def.Dat.Pl.Neut	die-x
Ereignissen	N.Reg.Dat.Pl.Neut	Ereignis-n
eingeholt	VPP.Full.Psp	einholen-v
<g/>
:	SYM.Pun.Colon	:-x
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1992	CARD	[number]-m
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
bereits	ADV	bereits-a
GNU-Varianten	N.Reg.Nom.Pl.Masc	GNU-Varianten-n
zusammengestellt	VPP.Full.Psp	zusammenstellen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
Linux	N.Reg.Acc.Sg.Neut	Linux-n
enthielten	VFIN.Full.3.Pl.Past.Ind	enthalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ab	APPR	ab-i
1993	CARD	[number]-m
sponserten	VFIN.Full.1.Pl.Past.Ind	sponserten-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
dann	ADV	dann-a
einen	ART.Indef.Acc.Sg.Masc	eine-x
Versuch	N.Reg.Acc.Sg.Masc	Versuch-n
<g/>
,	SYM.Pun.Comma	,-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
bessere	ADJA.Comp.Acc.Sg.Fem	gut-j
und	CONJ.Coord	und-c
freiere	ADJA.Comp.Acc.Sg.Fem	frei-j
GNU	N.Name.Acc.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distribution	N.Name.Acc.Sg.Fem	Linux-Distribution-n
namens	APPR	namens-i
Debian	N.Name.Nom.Sg.Neut	Debian-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
erstellen	VINF.Full	erstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Gründer	N.Reg.Nom.Sg.Masc	Gründer-n
von	APPR	von-i
Debian	N.Name.Dat.Sg.Neut	Debian-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
bereits	ADV	bereits-a
für	APPR	für-i
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Namen	N.Reg.Acc.Sg.Masc	Name-n
entschieden	VPP.Full.Psp	entscheiden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
baten	VFIN.Full.1.Pl.Past.Ind	bitten-v
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
einfach	ADJD.Pos	einfach-j
nur	ADV	nur-a
'	SYM.Quot.Right	'-x
<g/>
GNU	ADJD.Pos	GNU-j
<g/>
'	SYM.Quot.Right	'-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Systemvariante	N.Reg.Gen.Sg.Fem	Systemvariante-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU	N.Name.Dat.Sg.Masc	GNU-n
Hurd-Systemkern	N.Reg.Dat.Pl.Masc	Hurd-Systemkern-n
sein	VINF.Aux	sein-v
-	SYM.Pun.Hyph	--x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
noch	ADV	noch-a
nicht	PART.Neg	nicht-x
fertig	ADJD.Pos	fertig-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
GNU	N.Name.Nom.Sg.Masc	GNU-n
Hurd-Systemkern	N.Reg.Nom.Sg.Neut	Hurd-Systemkern-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
niemals	ADV	niemals-a
hinreichend	ADJD.Pos	hinreichend-j
fertiggestellt	VPP.Full.Psp	fertigstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
empfehlen	VFIN.Full.1.Pl.Pres.Ind	empfehlen-v
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
nur	ADV	nur-a
denjenigen	PRO.Dem.Subst.Dat.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
Interesse	N.Reg.Acc.Sg.Neut	Interesse-n
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Arbeit	N.Reg.Dat.Sg.Fem	Arbeit-n
daran	PROADV.Dem	daran-x
haben	VINF.Aux	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
So	ADV	so-a
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
GNU	N.Name.Nom.Sg.*	GNU-n
niemals	ADV	niemals-a
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU	N.Name.Dat.Sg.Masc	GNU-n
Hurd-Systemkern	N.Reg.Dat.Pl.Masc	Hurd-Systemkern-n
gebündelt	VPP.Full.Psp	bündeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Jedoch	ADV	jedoch-a
bündelte	VFIN.Full.3.Sg.Past.Ind	bündeln-v
Debian	N.Name.Nom.Sg.Neut	Debian-n
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Kombination	N.Reg.Acc.Sg.Fem	Kombination-n
<g/>
:	SYM.Pun.Colon	:-x
als	CONJ.Comp	als-c
Debian	N.Name.Nom.Sg.Neut	Debian-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Hurd	N.Name.Nom.Sg.*	Hurd-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Derzeit	ADV	derzeit-a
entwickeln	VFIN.Full.1.Pl.Pres.Ind	entwickeln-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
erweiterten	ADJA.Pos.Acc.Sg.Masc	erweitert-j
<g/>
,	SYM.Pun.Comma	,-x
auf	APPR	auf-i
Scheme	N.Reg.Acc.Pl.Neut	Scheme-n
basierten	ADJA.Pos.Acc.Sg.Masc	basiert-j
Paketmanager	N.Reg.Acc.Sg.Masc	Paketmanager-n
namens	APPR	namens-i
Guix	N.Name.Nom.Sg.*	Guix-n
und	CONJ.Coord	und-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
vollständige	ADJA.Pos.Nom.Sg.Fem	vollständig-j
<g/>
,	SYM.Pun.Comma	,-x
darauf	PROADV.Dem	darauf-x
basierende	ADJA.Pos.Nom.Sg.Fem	basierend-j
Systemverteilung	N.Reg.Nom.Sg.Fem	Systemverteilung-n
namens	APPR	namens-i
Guix	FM	Guix-x
System	FM	System-x
Distribution	N.Reg.Acc.Sg.Fem	Distribution-n
bzw.	CONJ.Coord	bzw.-c
kurz	ADJD.Pos	kurz-j
GuixSD	N.Name.Nom.Sg.*	GuixSD-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
schließt	VFIN.Full.3.Sg.Pres.Ind	schließen-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
wesentlichen	ADJA.Pos.Acc.Sg.Masc	wesentlich-j
Teil	N.Reg.Acc.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
neu	ADJD.Pos	neu-j
zu	PART.Zu	zu-x
verpacken	VINF.Full	verpacken-v
ein	PART.Verb	ein-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
machten	VFIN.Full.1.Pl.Past.Ind	machen-v
niemals	ADV	niemals-a
den	ART.Def.Acc.Sg.Masc	die-x
letzten	ADJA.Pos.Acc.Sg.Masc	letzt-j
Schritt	N.Reg.Acc.Sg.Masc	Schritt-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.*	GNU-n
unter	APPR	unter-i
dem	ART.Def.Dat.Sg.Masc	die-x
Namen	N.Reg.Dat.Sg.Masc	Name-n
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
'	SYM.Quot.Right	'-x
zu	PART.Zu	zu-x
verpacken	VINF.Full	verpacken-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ändert	VFIN.Full.3.Sg.Pres.Ind	ändern-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
daran	PROADV.Dem	daran-x
was	PRO.Indef.Subst.*.*.Neut	was-p
GNU	ADJD.Pos	GNU-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
:	SYM.Pun.Colon	:-x
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
benennen	VFIN.Full.1.Pl.Pres.Ind	benennen-v
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
nach	APPR	nach-i
dem	ART.Def.Dat.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
normal	ADJD.Pos	normal-j
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
nach	APPR	nach-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
zu	PART.Zu	zu-x
benennen	VINF.Full	benennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#afterkernel	N.Reg.Nom.Sg.Masc	#afterkernel-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Praxis	N.Reg.Nom.Sg.Fem	Praxis-n
scheint	VFIN.Full.3.Sg.Pres.Ind	scheinen-v
sehr	ADV	sehr-a
selten	ADJD.Pos	selten-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
-	SYM.Pun.Hyph	--x
außer	APPR	außer-i
dem	ART.Def.Dat.Sg.Masc	die-x
Missbrauch	N.Reg.Dat.Sg.Masc	Missbrauch-n
des	ART.Def.Gen.Sg.Masc	die-x
Namens	N.Reg.Gen.Sg.Masc	Name-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
keine	PRO.Indef.Attr.Acc.Pl.Neut	keine-p
anderen	ADJA.Pos.Acc.Pl.Neut	ander-j
Beispiele	N.Reg.Acc.Pl.Neut	Beispiel-n
finden	VINF.Full	finden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Normalerweise	ADV	normalerweise-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
als	CONJ.Comp	als-c
ein	ART.Indef.Acc.Sg.Neut	eine-x
einheitliches	ADJA.Pos.Acc.Sg.Neut	einheitlich-j
Projekt	N.Reg.Acc.Sg.Neut	Projekt-n
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
die	ART.Def.Nom.Pl.Masc	die-x
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
wählen	VFIN.Full.3.Pl.Pres.Ind	wählen-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
als	APPR	als-i
Ganzes	N.Reg.Acc.Sg.Neut	Ganze-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
gewöhnlich	ADJD.Pos	gewöhnlich-j
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
eigenen	ADJA.Pos.Acc.Sg.Masc	eigen-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
-	SYM.Pun.Hyph	--x
stattdessen	ADV	stattdessen-a
sagt	VFIN.Full.3.Sg.Pres.Ind	sagen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
der	ART.Def.Dat.Sg.Fem	die-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
von	APPR	von-i
so-und-so	N.Name.*.*.*	so-und-so-n
oder	CONJ.Coord	oder-c
der	ART.Def.Nom.Sg.Masc	die-x
so-und-so-Betriebssystemkern	N.Reg.Nom.Sg.Masc	so-und-so-Betriebssystemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Weil	CONJ.SubFin	weil-c
diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
beiden	PRO.Indef.Attr.Nom.Pl.Fem	beide-p
Interpretationen	N.Reg.Nom.Pl.Fem	Interpretation-n
synonym	ADJD.Pos	synonym-j
benutzt	VPP.Full.Psp	benutzen-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
der	ART.Def.Nom.Sg.Masc	die-x
Ausdruck	N.Reg.Nom.Sg.Masc	Ausdruck-n
der	ART.Def.Gen.Pl.Masc	die-x
Linux-Betriebssystemkern	N.Reg.Dat.Pl.Masc	Linux-Betriebssystemkern-n
leicht	ADJD.Pos	leicht-j
im	APPRART.Dat.Sg.Masc	in-i
Sinne	N.Reg.Dat.Sg.Masc	Sinn-n
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
missverstanden	VPP.Full.Psp	missverstehen-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
und	CONJ.Coord	und-c
implizieren	VFIN.Full.3.Pl.Pres.Ind	implizieren-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
mehr	PRO.Indef.Subst.*.*.*	mehr-p
als	CONJ.Comp	als-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
sein	VINF.Aux	sein-v
müsse	VFIN.Mod.3.Sg.Pres.Subj	müssen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
des	ART.Def.Gen.Sg.Neut	die-x
Missverständnisses	N.Reg.Gen.Sg.Neut	Missverständnis-n
vermeiden	VINF.Full	vermeiden-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
oder	CONJ.Coord	oder-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
sagt	VFIN.Full.3.Sg.Pres.Ind	sagen-v
oder	CONJ.Coord	oder-c
schreibt	VFIN.Full.3.Sg.Pres.Ind	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
anderes	ADJA.Pos.Nom.Sg.Neut	ander-j
System	N.Reg.Nom.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
das	ART.Def.Acc.Sg.Neut	die-x
Gefühl	N.Reg.Acc.Sg.Neut	Gefühl-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
vermitteln	VINF.Full	vermitteln-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#feel	N.Reg.Nom.Sg.Masc	#feel-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
so	ADV	so-a
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
wie	CONJ.Comp	wie-c
das	ART.Def.Acc.Sg.Neut	die-x
"	SYM.Quot.Left	"-x
<g/>
Gefühl	N.Reg.Acc.Sg.Neut	Gefühl-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
Benutzerschnittstellen	N.Reg.Acc.Pl.Fem	Benutzerschnittstelle-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
jeder	PRO.Indef.Attr.Nom.Sg.Masc	jede-p
moderne	ADJA.Pos.Nom.Sg.Masc	modern-j
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Basis	N.Reg.Acc.Sg.Fem	Basis-n
für	APPR	für-i
ausführbare	ADJA.Pos.Acc.Pl.Neut	ausführbar-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
<g/>
;	SYM.Pun.Sent	;-x
Benutzerschnittstellen	N.Reg.Nom.Pl.Fem	Benutzerschnittstelle-n
gehören	VFIN.Full.3.Pl.Pres.Ind	gehören-v
sonst	ADV	sonst-a
wo	PROADV.Inter	wo-x
im	APPRART.Dat.Sg.Neut	in-i
System	N.Reg.Dat.Sg.Neut	System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Menschliche	ADJA.Pos.Nom.Sg.Fem	menschlich-j
Interaktion	N.Reg.Nom.Sg.Fem	Interaktion-n
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
geschieht	VFIN.Full.3.Sg.Pres.Ind	geschehen-v
immer	ADV	immer-a
durch	APPR	durch-i
andere	ADJA.Pos.Acc.Pl.Neut	ander-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
das	ART.Def.Acc.Sg.Neut	die-x
"	SYM.Quot.Left	"-x
<g/>
Gefühl	N.Reg.Acc.Sg.Neut	Gefühl-n
<g/>
"	SYM.Quot.Left	"-x
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
von	APPR	von-i
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Problem	N.Reg.Nom.Sg.Neut	Problem-n
mit	APPR	mit-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zu	PART.Deg	zu-x
lang	ADJD.Pos	lang-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
kürzeren	ADJA.Comp.Acc.Sg.Masc	kurz-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
zu	PART.Zu	zu-x
empfehlen	VINF.Full	empfehlen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#long	N.Reg.Nom.Sg.Fem	#long-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Acc.Sg.Fem	eine-x
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
lang	ADJD.Pos	lang-j
versuchten	VFIN.Full.3.Pl.Past.Ind	versuchen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
LiGNUx	N.Name.Nom.Sg.*	LiGNUx-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
die	ART.Def.Acc.Pl.Neut	die-x
Worte	N.Reg.Acc.Pl.Neut	Wort-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
und	CONJ.Coord	und-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
vereint	VPP.Full.Psp	vereinen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Reaktion	N.Reg.Nom.Sg.Fem	Reaktion-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
sehr	ADV	sehr-a
schlecht	ADJD.Pos	schlecht-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
viel	ADV	viel-a
besser	ADJD.Comp	gut-j
akzeptiert	VPP.Full.Psp	akzeptieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
kürzeste	ADJA.Sup.Nom.Sg.Masc	kurz-j
legitime	ADJA.Pos.Nom.Sg.Masc	legitim-j
Name	N.Reg.Nom.Sg.Masc	Name-n
für	APPR	für-i
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
System	N.Reg.Acc.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNU	ADJD.Pos	GNU-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nennen	VFIN.Full.1.Pl.Pres.Ind	nennen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
aus	APPR	aus-i
den	ART.Def.Dat.Pl.Masc	die-x
nachstehend	ADJD.Pos	nachstehend-j
angegebenen	ADJA.Pos.Dat.Pl.Masc	angegeben-j
Gründen	N.Reg.Dat.Pl.Masc	Grund-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mit	ADV	mit-a
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
'	SYM.Quot.Right	'-x
<g/>
GliNUx	N.Name.Nom.Sg.*	GliNUx-n
<g/>
'	SYM.Quot.Right	'-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
(	SYM.Paren.Left	(-x
<g/>
statt	CONJ.SubInf	statt-c
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#long1	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
erscheint	VFIN.Full.3.Sg.Pres.Ind	erscheinen-v
in	APPR	in-i
'	SYM.Quot.Right	'-x
<g/>
GliNUx	ADJD.Pos	GliNUx-j
<g/>
'	SYM.Quot.Right	'-x
nicht	PART.Neg	nicht-x
eindeutig	ADJD.Pos	eindeutig-j
genug	ADV	genug-a
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
so	ADV	so-a
nicht	PART.Neg	nicht-x
bemerken	VINF.Full	bemerken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
hier	ADV	hier-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Zusammenhang	N.Reg.Nom.Sg.Masc	Zusammenhang-n
besteht	VFIN.Full.3.Sg.Pres.Ind	bestehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Selbst	ADV	selbst-a
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
in	APPR	in-i
'	SYM.Quot.Right	'-x
<g/>
GliNUx	ADJD.Pos	GliNUx-j
<g/>
'	SYM.Quot.Right	'-x
großgeschrieben	VPP.Full.Psp	großschreiben-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
nicht	PART.Neg	nicht-x
erkennen	VINF.Full	erkennen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
Verweis	N.Reg.Nom.Sg.Masc	Verweis-n
auf	APPR	auf-i
GNU	N.Name.Dat.Sg.*	GNU-n
vorhanden	ADJD.Pos	vorhanden-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
damit	PROADV.Dem	damit-x
vergleichbar	ADJD.Pos	vergleichbar-j
<g/>
,	SYM.Pun.Comma	,-x
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
in	APPR	in-i
Druckform	N.Reg.Dat.Sg.Fem	Druckform-n
so	ADV	so-a
klein	ADJD.Pos	klein-j
zu	PART.Zu	zu-x
setzen	VINF.Full	setzen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Pl.*	die-x
meisten	PRO.Indef.Subst.Nom.Pl.*	meiste-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
lesen	VINF.Full	lesen-v
könnten	VFIN.Mod.3.Pl.Past.Subj	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Problem	N.Reg.Nom.Sg.Neut	Problem-n
mit	APPR	mit-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zu	PART.Deg	zu-x
lang	ADJD.Pos	lang-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Weshalb	PROADV.Inter	weshalb-x
sollte	VFIN.Mod.1.Sg.Past.Subj	sollen-v
ich	PRO.Pers.Subst.1.Nom.Sg.*	sie-p
mir	PRO.Refl.Subst.1.Dat.Sg.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Mühe	N.Reg.Acc.Sg.Fem	Mühe-n
machen	VINF.Full	machen-v
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#long	N.Reg.Nom.Sg.Fem	#long-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
dauert	VFIN.Full.3.Sg.Pres.Ind	dauern-v
nur	ADV	nur-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Sekunde	N.Reg.Acc.Sg.Fem	Sekunde-n
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
[	SYM.Paren.Left	[-x
<g/>
ˈgnuː	N.Name.*.*.*	ˈgnuː-n
slæʃ	N.Name.*.*.*	slæʃ-n
<g/>
]	SYM.Paren.Right	]-x
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
oder	CONJ.Coord	oder-c
einzutippen	VINF.Full.zu	eintippen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
entwickelt	VPP.Full.Psp	entwickeln-v
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
zu	PART.Zu	zu-x
schätzen	VINF.Full	schätzen-v
weiß	VFIN.Full.1.Sg.Pres.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
da	ADV	da-a
nicht	PART.Neg	nicht-x
eine	ART.Indef.Acc.Sg.Fem	eine-x
Sekunde	N.Reg.Acc.Sg.Fem	Sekunde-n
nehmen	VINF.Full	nehmen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
anzuerkennen	VINF.Full.zu	anerkennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Fatalerweise	N.Reg.Nom.Sg.Fem	Fatalerweise-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
fünfsilbig	ADJD.Pos	fünfsilbig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Solch	PRO.Indef.Attr.*.*.*	solch-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
langer	ADJA.Pos.Nom.Sg.Masc	lang-j
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
nicht	PART.Neg	nicht-x
durchsetzen	VINF.Full	durchsetzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
kürzeren	ADJA.Comp.Acc.Sg.Masc	kurz-j
finden	VINF.Full	finden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#long3	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Eigentlich	ADV	eigentlich-a
besteht	VFIN.Full.3.Sg.Pres.Ind	bestehen-v
GNU	N.Name.Nom.Sg.Masc	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
[	SYM.Paren.Left	[-x
<g/>
im	APPRART.Dat.Sg.Neut	in-i
Englischen	N.Reg.Dat.Sg.Neut	Englische-n
<g/>
]	SYM.Paren.Right	]-x
aus	APPR	aus-i
nur	ADV	nur-a
vier	CARD	vier-m
Silben	N.Reg.Dat.Pl.Fem	Silbe-n
[	SYM.Paren.Left	[-x
<g/>
ˈgnuː	CARD	[number]-m
slæʃ	CARD	[number]-m
ˈliːnʊks	N.Reg.Acc.Pl.Masc	ˈliːnʊks-n
<g/>
]	SYM.Paren.Right	]-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Fatalerweise	N.Reg.Nom.Sg.Fem	Fatalerweise-n
<g/>
"	SYM.Quot.Left	"-x
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
fünf	CARD	fünf-m
Silben	N.Reg.Acc.Pl.Fem	Silbe-n
<g/>
,	SYM.Pun.Comma	,-x
dennoch	ADV	dennoch-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Anzeichen	N.Reg.Nom.Sg.Neut	Anzeichen-n
des	ART.Def.Gen.Sg.Masc	die-x
Widerwillens	N.Reg.Gen.Sg.Masc	Widerwille-n
gezeigt	VPP.Full.Psp	zeigen-v
<g/>
,	SYM.Pun.Comma	,-x
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Wort	N.Reg.Acc.Sg.Neut	Wort-n
trotzdem	PROADV.Dem	trotzdem-x
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	ADV	da-a
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ein	ART.Indef.Nom.Sg.Masc	eine-x
sekundärer	ADJA.Pos.Nom.Sg.Masc	sekundär-j
Beitrag	N.Reg.Nom.Sg.Masc	Beitrag-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
tatsächlich	ADJD.Pos	tatsächlich-j
einfach	ADV	einfach-a
nur	ADV	nur-a
GNU	ADJD.Pos	GNU-j
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#justgnu	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Aufgrund	APPR	aufgrund-i
der	ART.Def.Gen.Pl.Fem	die-x
Tatsachen	N.Reg.Gen.Pl.Fem	Tatsache-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Sg.Fem	die-x
beste	ADJA.Sup.Acc.Sg.Fem	gut-j
Lösung	N.Reg.Acc.Sg.Fem	Lösung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aus	APPR	aus-i
folgenden	ADJA.Pos.Dat.Pl.Masc	folgend-j
Gründen	N.Reg.Dat.Pl.Masc	Grund-n
nennen	VFIN.Full.1.Pl.Pres.Ind	nennen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
GNU	ADJD.Pos	GNU-j
<g/>
:	SYM.Pun.Colon	:-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
genau	ADJD.Pos	genau-j
GNU	ADJD.Pos	GNU-j
-	SYM.Pun.Hyph	--x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
anderen	ADJA.Pos.Acc.Sg.Masc	ander-j
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
(	SYM.Paren.Left	(-x
<g/>
nämlich	ADV	nämlich-a
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
zu	PART.Zu	zu-x
unterscheiden	VINF.Full	unterscheiden-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
sinnvoll	ADJD.Pos	sinnvoll-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
unhöflich	ADJD.Pos	unhöflich-j
darum	PROADV.Dem	darum-x
zu	PART.Zu	zu-x
bitten	VINF.Full	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.Gen.Sg.Masc	Torvalds-n
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
schrieb	VFIN.Full.3.Sg.Past.Ind	schreiben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
wichtige	ADJA.Pos.Acc.Sg.Fem	wichtig-j
Systemkomponente	N.Reg.Acc.Sg.Fem	Systemkomponente-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
möchten	VFIN.Mod.1.Pl.Past.Subj	mögen-v
die	ART.Def.Acc.Sg.Fem	die-x
Einführung	N.Reg.Acc.Sg.Fem	Einführung-n
und	CONJ.Coord	und-c
Aufrechterhaltung	N.Reg.Acc.Sg.Fem	Aufrechterhaltung-n
der	ART.Def.Gen.Sg.Fem	die-x
Systementwicklung	N.Reg.Gen.Sg.Fem	Systementwicklung-n
anerkennen	VINF.Full	anerkennen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Linus	N.Name.Acc.Sg.Fem	Linus-n
genauso	ADV	genauso-a
behandeln	VINF.Full	behandeln-v
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
wie	CONJ.Comp	wie-c
diejenigen	PRO.Dem.Subst.Acc.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
bezeichnen	VFIN.Full.3.Pl.Pres.Ind	bezeichnen-v
<g/>
,	SYM.Pun.Comma	,-x
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
behandeln	VINF.Full	behandeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
mit	APPR	mit-i
seinen	PRO.Poss.Attr.Dat.Pl.Fem	seine-p
politischen	ADJA.Pos.Dat.Pl.Fem	politisch-j
Ansichten	N.Reg.Dat.Pl.Fem	Ansicht-n
absolut	ADJD.Pos	absolut-j
nicht	PART.Neg	nicht-x
einverstanden	ADJD.Pos	einverstanden-j
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
gehen	VFIN.Full.1.Pl.Pres.Ind	gehen-v
mit	APPR	mit-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Meinungsverschiedenheit	N.Reg.Dat.Sg.Fem	Meinungsverschiedenheit-n
ehrlich	ADJD.Pos	ehrlich-j
und	CONJ.Coord	und-c
offen	ADJD.Pos	offen-j
um	PART.Verb	um-x
<g/>
,	SYM.Pun.Comma	,-x
anstatt	CONJ.SubInf	anstatt-c
zu	PART.Zu	zu-x
versuchen	VINF.Full	versuchen-v
<g/>
,	SYM.Pun.Comma	,-x
seinen	PRO.Poss.Attr.Acc.Sg.Masc	seine-p
Beitrag	N.Reg.Acc.Sg.Masc	Beitrag-n
zum	APPRART.Dat.Sg.Neut	zu-i
System	N.Reg.Dat.Sg.Neut	System-n
nicht	PART.Neg	nicht-x
anzuerkennen	VINF.Full.zu	anerkennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
nur	ADV	nur-a
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
kennen	VFIN.Full.3.Pl.Pres.Ind	kennen-v
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
einfach	ADV	einfach-a
nicht	PART.Neg	nicht-x
erkennen	VINF.Full	erkennen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
sprechen	VFIN.Full.1.Pl.Pres.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
vom	APPRART.Dat.Sg.Neut	von-i
gleichen	ADJA.Pos.Dat.Sg.Neut	gleich-j
System	N.Reg.Dat.Sg.Neut	System-n
reden	VFIN.Full.1.Pl.Pres.Ind	reden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sagen	VFIN.Full.1.Pl.Pres.Ind	sagen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Zusammenhang	N.Reg.Acc.Sg.Masc	Zusammenhang-n
dazu	PROADV.Dem	dazu-x
herstellen	VINF.Full	herstellen-v
<g/>
,	SYM.Pun.Comma	,-x
worüber	PROADV.Inter	worüber-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
gehört	VPP.Full.Psp	gehören|hören-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Produktes	N.Reg.Gen.Sg.Neut	Produkt-n
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Gebühr	N.Reg.Nom.Sg.Fem	Gebühr-n
entrichtet	VPP.Full.Psp	entrichten-v
werden	VINF.Aux	werden-v
müssen	VINF.Mod	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
auch	ADV	auch-a
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
heißt	VFIN.Full.3.Sg.Pres.Ind	heißen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
GNU	ADJD.Pos	GNU-j
ohne	APPR	ohne-i
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
Gebühr	N.Reg.Acc.Sg.Fem	Gebühr-n
zu	PART.Zu	zu-x
sparen	VINF.Full	sparen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#trademarkfee	N.Reg.Nom.Sg.Fem	#trademarkfee-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
falsch	ADJD.Pos	falsch-j
daran	PROADV.Dem	daran-x
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Grunde	N.Reg.Dat.Sg.Masc	Grund-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nett	ADJD.Pos	nett-j
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.*.*.*	Torvalds-n
auch	ADV	auch-a
einen	ART.Indef.Acc.Sg.Masc	eine-x
Teil	N.Reg.Acc.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
Anerkennung	N.Reg.Gen.Sg.Fem	Anerkennung-n
zukommen	VINF.Full	zukommen-v
zu	PART.Zu	zu-x
lassen	VINF.Full	lassen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
dazu	PROADV.Dem	dazu-x
nicht	PART.Neg	nicht-x
verpflichtet	VPP.Full.Psp	verpflichten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
einfach	ADJD.Pos	einfach-j
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
beziehen	VINF.Full	beziehen-v
möchte	VFIN.Mod.3.Sg.Past.Subj	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Sg.Fem	die-x
Gebühr	N.Reg.Acc.Sg.Fem	Gebühr-n
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
nicht	PART.Neg	nicht-x
zahlen	VINF.Full	zahlen-v
zu	PART.Zu	zu-x
müssen	VINF.Mod	müssen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
nicht	PART.Neg	nicht-x
kritisieren	VINF.Full	kritisieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Attr.Nom.Pl.Neut	viele-p
andere	ADJA.Pos.Nom.Pl.Neut	ander-j
Projekte	N.Reg.Nom.Pl.Neut	Projekt-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
zum	APPRART.Dat.Sg.Neut	zu-i
heutigen	ADJA.Pos.Dat.Sg.Neut	heutig-j
System	N.Reg.Dat.Sg.Neut	System-n
beigetragen	VPP.Full.Psp	beitragen-v
<g/>
:	SYM.Pun.Colon	:-x
TeX	N.Name.Nom.Sg.*	TeX-n
<g/>
,	SYM.Pun.Comma	,-x
X11	N.Name.Nom.Sg.*	X11-n
<g/>
,	SYM.Pun.Comma	,-x
Apache	N.Reg.Nom.Sg.Masc	Apache-n
<g/>
,	SYM.Pun.Comma	,-x
Perl	N.Name.Nom.Sg.Neut	Perl-n
und	CONJ.Coord	und-c
viele	PRO.Indef.Attr.Nom.Pl.Neut	viele-p
weitere	ADJA.Comp.Nom.Pl.Neut	weit-j
Programme	N.Reg.Nom.Pl.Neut	Programm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Implizieren	VFIN.Full.3.Pl.Pres.Ind	implizieren-v
die	ART.Def.Nom.Pl.Neut	die-x
Argumente	N.Reg.Nom.Pl.Neut	Argument-n
nicht	PART.Neg	nicht-x
auch	ADV	auch-a
deren	PRO.Dem.Subst.Gen.Sg.Fem	die-p
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
(	SYM.Paren.Left	(-x
<g/>
was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
aber	ADV	aber-a
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
absurd	ADJD.Pos	absurd-j
langen	ADJA.Pos.Dat.Sg.Masc	lang-j
Namen	N.Reg.Dat.Sg.Masc	Name-n
führen	VINF.Full	führen-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#many	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sagen	VINF.Full	sagen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sollte	VFIN.Mod.1.Sg.Past.Subj	sollen-v
dem	ART.Def.Dat.Sg.Masc	die-x
Hauptentwickler	N.Reg.Dat.Sg.Masc	Hauptentwickler-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Anteil	N.Reg.Acc.Sg.Masc	Anteil-n
der	ART.Def.Gen.Sg.Fem	die-x
Anerkennung	N.Reg.Gen.Sg.Fem	Anerkennung-n
geben	VINF.Full	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Hauptentwickler	N.Reg.Nom.Sg.Masc	Hauptentwickler-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
grundsätzlich	ADJD.Pos	grundsätzlich-j
GNU	ADJD.Pos	GNU-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sogar	ADV	sogar-a
noch	ADV	noch-a
stärker	ADJD.Comp	stark-j
um	APPR	um-i
Ehre	N.Reg.Acc.Sg.Fem	Ehre-n
<g/>
,	SYM.Pun.Comma	,-x
wem	PRO.Inter.Subst.Dat.Sg.Masc	wem-p
Ehre	N.Reg.Acc.Sg.Fem	Ehre-n
gebührt	ADJD.Pos	gebührt-j
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
<g/>
,	SYM.Pun.Comma	,-x
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
glauben	VINF.Full	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
einige	PRO.Indef.Attr.Nom.Sg.Fem	einige-p
sekundäre	ADJA.Pos.Nom.Sg.Fem	sekundär-j
Mitwirkende	N.Reg.Nom.Sg.Fem	Mitwirkend-n
auch	ADV	auch-a
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
verdienen	VINF.Full	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
so	ADV	so-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dann	ADV	dann-a
liegt	VFIN.Full.3.Sg.Pres.Ind	liegen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
fern	ADJD.Pos	fern-j
Einwände	N.Reg.Acc.Pl.Masc	Einwand-n
dagegen	PROADV.Dem	dagegen-x
vorzubringen	VINF.Full.zu	vorbringen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
glauben	VFIN.Full.3.Pl.Pres.Ind	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
X11	N.Name.Nom.Sg.*	X11-n
Anerkennung	N.Reg.Nom.Sg.Fem	Anerkennung-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
verdient	VFIN.Full.3.Sg.Pres.Ind	verdienen-v
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
X11	N.Name.Nom.Sg.Neut	X11-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
bitte	ADV	bitte-a
sehr	ADV	sehr-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
glauben	VFIN.Full.3.Pl.Pres.Ind	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Perl	N.Name.Nom.Sg.Neut	Perl-n
geradezu	ADV	geradezu-a
nach	APPR	nach-i
Erwähnung	N.Reg.Dat.Sg.Fem	Erwähnung-n
schreit	VFIN.Full.3.Sg.Pres.Ind	schreien-v
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Perl	N.Name.Acc.Sg.Neut	Perl-n
schreiben	VINF.Full	schreiben-v
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
nur	ADV	nur-a
zu	PART.Deg	zu-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
langer	ADJA.Pos.Nom.Sg.Masc	lang-j
Name	N.Reg.Nom.Sg.Masc	Name-n
wie	CONJ.Comp	wie-c
beispielsweise	ADV	beispielsweise-a
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
X11	N.Name.Nom.Sg.*	X11-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Apache	N.Reg.Nom.Sg.Masc	Apache-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
TeX	N.Name.Nom.Sg.Neut	TeX-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Perl	N.Name.Nom.Sg.Neut	Perl-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Python	N.Reg.Nom.Sg.Fem	Python-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
FreeCiv	N.Name.Nom.Sg.*	FreeCiv-n
absurd	ADJD.Pos	absurd-j
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
an	APPR	an-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
gewissen	ADJA.Pos.Dat.Sg.Masc	gewiss-j
Punkt	N.Reg.Dat.Sg.Masc	Punkt-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Grenze	N.Reg.Acc.Sg.Fem	Grenze-n
ziehen	VINF.Full	ziehen-v
und	CONJ.Coord	und-c
die	ART.Def.Acc.Pl.Masc	die-x
Namen	N.Reg.Acc.Pl.Masc	Name-n
der	ART.Def.Gen.Pl.*	die-x
vielen	PRO.Indef.Attr.Gen.Pl.*	viele-p
anderen	PRO.Indef.Subst.Gen.Sg.*	andere-p
sekundären	ADJA.Pos.Acc.Pl.Masc	sekundär-j
Beiträge	N.Reg.Acc.Pl.Masc	Beitrag-n
weglassen	VINF.Full	weglassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
eindeutig	ADJD.Pos	eindeutig-j
richtige	ADJA.Pos.Acc.Sg.Fem	richtig-j
Grenze	N.Reg.Acc.Sg.Fem	Grenze-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
<g/>
,	SYM.Pun.Comma	,-x
wo	PROADV.Inter	wo-x
auch	ADV	auch-a
immer	ADV	immer-a
<g/>
,	SYM.Pun.Comma	,-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sprechen	VFIN.Full.1.Pl.Pres.Ind	sprechen-v
uns	PRO.Refl.Subst.1.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
dagegen	PROADV.Dem	dagegen-x
aus	PART.Verb	aus-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unterschiedliche	ADJA.Pos.Nom.Pl.Masc	unterschiedlich-j
Grenzwerte	N.Reg.Nom.Pl.Masc	Grenzwert-n
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
zu	APPR	zu-i
unterschiedlichen	ADJA.Pos.Dat.Pl.Masc	unterschiedlich-j
Systemnamen	N.Reg.Dat.Pl.Masc	Systemname-n
führen	VINF.Full	führen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
Name	N.Reg.Nom.Sg.Masc	Name-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
nicht	PART.Neg	nicht-x
im	APPRART.Dat.Sg.Neut	in-i
Interesse	N.Reg.Dat.Sg.Neut	Interesse-n
von	APPR	von-i
Fairness	N.Reg.Dat.Sg.Fem	Fairness-n
und	CONJ.Coord	und-c
Anerkennung	N.Reg.Dat.Sg.Fem	Anerkennung-n
bei	APPR	bei-i
keinem	PRO.Indef.Attr.Dat.Sg.Masc	keine-p
möglichen	ADJA.Pos.Dat.Sg.Masc	möglich-j
Grenzwert	N.Reg.Dat.Sg.Masc	Grenzwert-n
ergeben	VINF.Full	ergeben-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
nicht	PART.Neg	nicht-x
fair	ADJD.Pos	fair-j
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
ganze	ADJA.Pos.Acc.Sg.Fem	ganz-j
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
einem	ART.Indef.Dat.Sg.Masc	eine-x
sekundären	ADJA.Pos.Dat.Sg.Masc	sekundär-j
Beitrag	N.Reg.Dat.Sg.Masc	Beitrag-n
(	SYM.Paren.Left	(-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
)	SYM.Paren.Right	)-x
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
während	CONJ.SubFin	während-c
der	ART.Def.Nom.Sg.Masc	die-x
Hauptbeitrag	N.Reg.Nom.Sg.Masc	Hauptbeitrag-n
(	SYM.Paren.Left	(-x
<g/>
GNU	N.Name.Nom.*.*	GNU-n
<g/>
)	SYM.Paren.Right	)-x
weggelassen	VPP.Full.Psp	weglassen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zahlreiche	ADJA.Pos.Nom.Pl.Neut	zahlreich-j
andere	ADJA.Pos.Nom.Pl.Neut	ander-j
Projekte	N.Reg.Nom.Pl.Neut	Projekt-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
zum	APPRART.Dat.Sg.Neut	zu-i
heutigen	ADJA.Pos.Dat.Sg.Neut	heutig-j
System	N.Reg.Dat.Sg.Neut	System-n
beigetragen	VPP.Full.Psp	beitragen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
bestehen	VFIN.Full.3.Pl.Pres.Ind	bestehen-v
nicht	PART.Neg	nicht-x
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
Nennung	N.Reg.Acc.Sg.Fem	Nennung-n
von	APPR	von-i
XYZ	N.Reg.Dat.Pl.*	XYZ-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
GNU	N.Name.Nom.Sg.*	GNU-n
besonders	ADV	besonders-a
behandelt	VPP.Full.Psp	behandeln-v
werden	VINF.Aux	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#others	ADJA.Pos.Nom.Sg.Neut	#others-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Tausende	N.Reg.Nom.Pl.Neut	Tausend-n
Projekte	N.Reg.Nom.Pl.Neut	Projekt-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
Programme	N.Reg.Acc.Pl.Neut	Programm-n
entwickelt	VPP.Full.Psp	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
in	APPR	in-i
heutigen	ADJA.Pos.Dat.Sg.Fem	heutig-j
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systemen	N.Reg.Dat.Pl.Neut	Linux-System-n
enthalten	ADJD.Pos	enthalten-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Alle	PRO.Indef.Subst.Nom.Pl.*	alle-p
verdienen	VFIN.Full.3.Pl.Pres.Ind	verdienen-v
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
für	APPR	für-i
ihre	PRO.Poss.Attr.Acc.Pl.Masc	ihre-p
Beiträge	N.Reg.Acc.Pl.Masc	Beitrag-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
die	ART.Def.Nom.Pl.Masc	die-x
Hauptentwickler	N.Reg.Nom.Pl.Masc	Hauptentwickler-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
als	APPR	als-i
Ganzes	N.Reg.Nom.Sg.Neut	Ganze-n
<g/>
,	SYM.Pun.Comma	,-x
sodass	CONJ.SubFin	sodass-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
bitten	VINF.Full	bitten-v
als	APPR	als-i
solche	PRO.Indef.Subst.Nom.Sg.Fem	solche-p
anerkannt	VPP.Full.Psp	anerkennen-v
zu	PART.Zu	zu-x
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
anders	ADV	anders-a
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mehr	PRO.Indef.Subst.*.*.*	mehr-p
als	CONJ.Comp	als-c
nur	ADV	nur-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
beigetragenes	ADJA.Pos.Nom.Sg.Neut	beigetragen-j
Programm	N.Reg.Nom.Sg.Neut	Programm-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
mehr	PRO.Indef.Subst.*.*.*	mehr-p
als	CONJ.Comp	als-c
nur	ADV	nur-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
Sammlung	N.Reg.Nom.Sg.Fem	Sammlung-n
beigetragener	ADJA.Pos.Gen.Pl.Neut	beigetragen-j
Programme	N.Reg.Gen.Pl.Neut	Programm-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Rahmen	N.Reg.Nom.Sg.Masc	Rahmen-n
<g/>
,	SYM.Pun.Comma	,-x
worauf	PROADV.Inter	worauf-x
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
aufbaut	VFIN.Full.3.Sg.Pres.Ind	aufbauen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nur	ADV	nur-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
kleiner	ADJA.Pos.Nom.Sg.Masc	klein-j
Anteil	N.Reg.Nom.Sg.Masc	Anteil-n
des	ART.Def.Gen.Sg.Neut	die-x
heutigen	ADJA.Pos.Gen.Sg.Neut	heutig-j
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
warum	PROADV.Inter	warum-x
sollten	VFIN.Mod.1.Pl.Past.Subj	sollen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
erwähnen	VINF.Full	erwähnen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#allsmall	N.Reg.Nom.Sg.Masc	#allsmall-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
2008	CARD	[number]-m
stellten	VFIN.Full.3.Pl.Past.Ind	stellen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
fest	PART.Verb	fest-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GNU-Pakete	N.Reg.Nom.Pl.Neut	GNU-Paket-n
15	CARD	15-m
%	N.Reg.*.*.Neut	%-n
des	ART.Def.Gen.Sg.Neut	die-x
offiziellen	ADJA.Pos.Gen.Sg.Neut	offiziell-j
Projektarchivs	N.Reg.Gen.Sg.Neut	Projektarchiv-n
(	SYM.Paren.Left	(-x
<g/>
main	N.Name.Gen.Sg.Neut	main-n
<g/>
)	SYM.Paren.Right	)-x
der	ART.Def.Gen.Sg.Fem	die-x
gNewSense	N.Name.*.*.*	gNewSense-n
GNU	N.Name.Gen.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distribution	N.Name.Gen.Sg.Fem	Linux-Distribution-n
ausmachten	VFIN.Full.3.Pl.Past.Ind	ausmachen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
1,5	CARD	[number]-m
%	N.Reg.*.*.Neut	%-n
aus	PART.Verb	aus-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Folglich	ADV	folglich-a
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
dasselbe	PRO.Dem.Attr.Nom.Sg.Neut	dieselbe-p
Argument	N.Reg.Nom.Sg.Neut	Argument-n
noch	ADV	noch-a
viel	ADV	viel-a
stärker	ADJD.Comp	stark-j
auf	APPR	auf-i
die	ART.Def.Acc.Sg.Fem	die-x
Benennung	N.Reg.Acc.Sg.Fem	Benennung-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
zutreffen	VFIN.Full.3.Pl.Pres.Ind	zutreffen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
heutzutage	ADV	heutzutage-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
kleiner	ADJA.Pos.Nom.Sg.Masc	klein-j
Bruchteil	N.Reg.Nom.Sg.Masc	Bruchteil-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
noch	ADV	noch-a
kleinerer	ADJA.Comp.Nom.Sg.Masc	klein-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Kern	N.Reg.Nom.Sg.Masc	Kern-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
;	SYM.Pun.Sent	;-x
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
durch	APPR	durch-i
die	ART.Def.Acc.Sg.Fem	die-x
Kombination	N.Reg.Acc.Sg.Fem	Kombination-n
beider	PRO.Indef.Attr.Gen.Pl.Fem	beide-p
geschaffen	VPP.Full.Psp	schaffen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dadurch	PROADV.Dem	dadurch-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
weiterhin	ADV	weiterhin-a
angebracht	VPP.Full.Psp	anbringen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Attr.Nom.Pl.Neut	viele-p
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
zum	APPRART.Dat.Sg.Neut	zu-i
heutigen	ADJA.Pos.Dat.Sg.Neut	heutig-j
System	N.Reg.Dat.Sg.Neut	System-n
beigetragen	VPP.Full.Psp	beitragen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
GNU	N.Name.Acc.Sg.Masc	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Red	N.Name.*.*.*	Red-n
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Novell	N.Name.Nom.Sg.*	Novell-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
genannt	VPP.Full.Psp	nennen-v
werden	VINF.Aux	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#manycompanies	ADJA.Pos.Nom.Sg.Neut	#manycompani-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
Red	N.Name.*.*.*	Red-n
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
oder	CONJ.Coord	oder-c
Novell	N.Name.Nom.Sg.*	Novell-n
vergleichbar	ADJD.Pos	vergleichbar-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
Organisation	N.Reg.Nom.Sg.Fem	Organisation-n
oder	CONJ.Coord	oder-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
Aktivität	N.Reg.Acc.Sg.Fem	Aktivität-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
(	SYM.Paren.Left	(-x
<g/>
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
vom	APPRART.Dat.Sg.Masc	von-i
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
gesprochen	VPP.Full.Psp	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
bezieht	VFIN.Full.3.Sg.Pres.Ind	beziehen-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
auf	APPR	auf-i
das	ART.Def.Acc.Sg.Neut	die-x
Projekt	N.Reg.Acc.Sg.Neut	Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Nom.Sg.Neut	Linux-System-n
beruht	VFIN.Full.3.Sg.Pres.Ind	beruhen-v
auf	APPR	auf-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
darum	PROADV.Dem	darum-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
GNU	N.Name.Nom.Sg.*	GNU-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
erscheinen	VINF.Full	erscheinen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Großteil	N.Reg.Nom.Sg.Masc	Großteil-n
des	ART.Def.Gen.Sg.Masc	die-x
Beitrags	N.Reg.Gen.Sg.Masc	Beitrag-n
dieser	PRO.Dem.Attr.Gen.Pl.Neut	diese-p
Unternehmen	N.Reg.Gen.Pl.Neut	Unternehmen-n
zum	APPRART.Dat.Sg.Neut	zu-i
GNU	N.Reg.Dat.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
liegt	VFIN.Full.3.Sg.Pres.Ind	liegen-v
im	APPRART.Dat.Sg.Masc	in-i
Quellcode	N.Reg.Dat.Sg.Masc	Quellcode-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
zu	APPR	zu-i
verschiedenen	ADJA.Pos.Dat.Pl.Neut	verschieden-j
GNU-Paketen	N.Reg.Dat.Pl.Neut	GNU-Paket-n
<g/>
,	SYM.Pun.Comma	,-x
einschließlich	APPR	einschließlich-i
GCC	TRUNC.Noun	GCC-x
und	CONJ.Coord	und-c
GNOME	N.Reg.Acc.Pl.Masc	Gnom-n
<g/>
,	SYM.Pun.Comma	,-x
beigetragen	VPP.Full.Psp	beitragen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
jenen	PRO.Dem.Attr.Dat.Pl.Neut	jene-p
Unternehmen	N.Reg.Dat.Pl.Neut	Unternehmen-n
sowie	CONJ.Coord	sowie-c
allen	PRO.Indef.Attr.Dat.Pl.Masc	alle-p
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
GNU-Entwicklern	N.Reg.Dat.Pl.Masc	GNU-Entwickler-n
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
statt	PART.Verb	statt-x
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
'	SYM.Quot.Right	'-x
schreiben	VINF.Full	schreiben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#whyslash	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Nach	APPR	nach-i
den	ART.Def.Dat.Pl.Fem	die-x
Regeln	N.Reg.Dat.Pl.Fem	Regel-n
der	ART.Def.Gen.Sg.Fem	die-x
englischen	ADJA.Pos.Gen.Sg.Fem	englisch-j
Sprache	N.Reg.Gen.Sg.Fem	Sprache-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Konstruktion	N.Reg.Dat.Sg.Fem	Konstruktion-n
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.Neut	GNU-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
'	SYM.Quot.Right	'-x
das	ART.Def.Acc.Sg.Neut	die-x
Wort	N.Reg.Acc.Sg.Neut	Wort-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
durch	APPR	durch-i
GNU	ADJD.Pos	GNU-j
modifiziert	VPP.Full.Psp	modifizieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dies	PRO.Dem.Subst.Nom.Sg.Neut	dies-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
entweder	ADV	entweder-a
GNU-Variante	N.Reg.Acc.Pl.Neut	GNU-Variante-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
oder	CONJ.Coord	oder-c
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
GNU-Paket	N.Reg.Nom.Sg.Neut	GNU-Paket-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
bedeuten	VINF.Full	bedeuten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Keine	PRO.Indef.Subst.Nom.Sg.Fem	keine-p
dieser	PRO.Dem.Attr.Gen.Pl.Fem	diese-p
Bedeutungen	N.Reg.Gen.Pl.Fem	Bedeutung-n
passt	VFIN.Full.3.Sg.Pres.Ind	passen-v
ansatzweise	ADV	ansatzweise-a
zur	APPRART.Dat.Sg.Fem	zu-i
vorhandenen	ADJA.Pos.Dat.Sg.Fem	vorhanden-j
Situation	N.Reg.Dat.Sg.Fem	Situation-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
GNU-Paket	N.Reg.Nom.Sg.Neut	GNU-Paket-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
heißt	VFIN.Full.3.Sg.Pres.Ind	heißen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
Ägide	N.Reg.Dat.Sg.Fem	Ägide-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
entwickelt	VPP.Full.Psp	entwickeln-v
oder	CONJ.Coord	oder-c
speziell	ADJD.Pos	speziell-j
zum	APPRART.Dat.Sg.Neut	zu-i
GNU-Projekt	N.Reg.Dat.Sg.Neut	GNU-Projekt-n
beigesteuert	VPP.Full.Psp	beisteuern-v
worden	VPP.Aux.Psp	werden-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.Gen.Sg.Masc	Torvalds-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
unabhängig	ADJD.Pos	unabhängig-j
als	APPR	als-i
sein	PRO.Poss.Attr.Acc.Sg.Neut	seine-p
eigenes	ADJA.Pos.Acc.Sg.Neut	eigen-j
Projekt	N.Reg.Acc.Sg.Neut	Projekt-n
geschrieben	VPP.Full.Psp	schreiben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Deswegen	PROADV.Dem	deswegen-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Bedeutung	N.Reg.Nom.Sg.Fem	Bedeutung-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
ein	ART.Indef.Nom.Sg.Neut	eine-x
GNU-Paket	N.Reg.Nom.Sg.Neut	GNU-Paket-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
richtig	ADJD.Pos	richtig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
reden	VFIN.Full.1.Pl.Pres.Ind	reden-v
hier	ADV	hier-a
nicht	PART.Neg	nicht-x
von	APPR	von-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
eigenständigen	ADJA.Pos.Dat.Sg.Fem	eigenständig-j
GNU-Variante	N.Reg.Dat.Sg.Fem	GNU-Variante-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Dat.Sg.Masc	Betriebssystemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Name.Nom.Pl.Fem	Linux-Distributionen-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
separate	ADJA.Pos.Acc.Sg.Fem	separat-j
Variante	N.Reg.Acc.Sg.Fem	Variante-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
seitdem	CONJ.SubFin	seitdem-c
die	ART.Def.Nom.Sg.Fem	die-x
Standard-Version	N.Reg.Nom.Sg.Fem	Standard-Version-n
unfreie	ADJA.Pos.Acc.Pl.Neut	unfrei-j
Firmware-BLOBs	N.Reg.Acc.Pl.Neut	Firmware-BLOBs-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
<g/>
,	SYM.Pun.Comma	,-x
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
als	APPR	als-i
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
'	SYM.Quot.Right	'-x
betrachtet	VPP.Full.Psp	betrachten-v
werden	VINF.Aux	werden-v
<g/>
;	SYM.Pun.Sent	;-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
würden	VFIN.Aux.1.Pl.Past.Subj	werden-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
aber	ADV	aber-a
nicht	PART.Neg	nicht-x
so	ADV	so-a
nennen	VINF.Full	nennen-v
wollen	VINF.Mod	wollen-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
zu	PART.Deg	zu-x
irritierend	ADJD.Pos	irritierend-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
reden	VFIN.Full.1.Pl.Pres.Ind	reden-v
über	APPR	über-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Version	N.Reg.Acc.Sg.Fem	Version-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Neut	die-x
Betriebssystem	N.Reg.Dat.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
bei	APPR	bei-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
Linux	N.Reg.Nom.Sg.Neut	Linux-n
als	APPR	als-i
Systemkern	N.Reg.Acc.Sg.Masc	Systemkern-n
auszeichnet	VFIN.Full.3.Sg.Pres.Ind	auszeichnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
Schrägstrich	N.Reg.Nom.Sg.Masc	Schrägstrich-n
liegt	VFIN.Full.3.Sg.Pres.Ind	liegen-v
auf	APPR	auf-i
der	ART.Def.Dat.Sg.Fem	die-x
Hand	N.Reg.Dat.Sg.Fem	Hand-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
Verbindung	N.Reg.Acc.Sg.Fem	Verbindung-n
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
(	SYM.Paren.Left	(-x
<g/>
denken	VFIN.Full.3.Pl.Pres.Ind	denken-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
an	APPR	an-i
Ein	ART.Indef.Acc.Sg.Neut	eine-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Ausgabe	N.Reg.Nom.Sg.Fem	Ausgabe-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
System	N.Reg.Nom.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Verbindung	N.Reg.Nom.Sg.Fem	Verbindung-n
von	APPR	von-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
und	CONJ.Coord	und-c
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
daher	PROADV.Dem	daher-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
andere	ADJA.Pos.Acc.Pl.Fem	ander-j
Möglichkeiten	N.Reg.Acc.Pl.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
um	APPR	um-i
Verbindung	N.Reg.Acc.Sg.Fem	Verbindung-n
auszudrücken	VINF.Full.zu	ausdrücken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Pluszeichen	N.Reg.Acc.Sg.Neut	Pluszeichen-n
für	APPR	für-i
eindeutiger	ADJD.Comp	eindeutig-j
halten	VFIN.Full.3.Pl.Pres.Ind	halten-v
<g/>
,	SYM.Pun.Comma	,-x
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
bitte	ADV	bitte-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Französischen	ADJA.Pos.Dat.Sg.Neut	französisch-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
Bindestrich	N.Reg.Nom.Sg.Masc	Bindestrich-n
eindeutig	ADJD.Pos	eindeutig-j
<g/>
:	SYM.Pun.Colon	:-x
GNU-Linux	N.Name.Nom.Sg.Masc	GNU-Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Auf	APPR	auf-i
Spanisch	ADJD.Pos	spanisch-j
auch	ADV	auch-a
GNU	N.Name.*.*.*	GNU-n
con	N.Name.*.*.*	con-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
anstatt	APPR	anstatt-i
Linux	N.Reg.Gen.Sg.Neut	Linux-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#whyorder	N.Reg.Nom.Sg.Masc	#whyorder-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
richtig	ADJD.Pos	richtig-j
und	CONJ.Coord	und-c
angemessen	ADJD.Pos	angemessen-j
den	ART.Def.Acc.Sg.Masc	die-x
Hauptbeitrag	N.Reg.Acc.Sg.Masc	Hauptbeitrag-n
zuerst	ADV	zuerst-a
zu	PART.Zu	zu-x
erwähnen	VINF.Full	erwähnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Beitrag	N.Reg.Nom.Sg.Masc	Beitrag-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
zum	APPRART.Dat.Sg.Neut	zu-i
System	N.Reg.Dat.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
größer	ADJD.Comp	groß-j
als	CONJ.Comp	als-c
und	CONJ.Coord	und-c
startete	VFIN.Full.3.Sg.Past.Ind	starten-v
vor	APPR	vor-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
tatsächlich	ADV	tatsächlich-a
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Aktivität	N.Reg.Acc.Sg.Fem	Aktivität-n
insgesamt	ADV	insgesamt-a
erst	ADV	erst-a
ins	APPRART.Acc.Sg.Neut	in-i
Leben	N.Reg.Acc.Sg.Neut	Leben-n
gerufen	VPP.Full.Psp	rufen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Darüber	PROADV.Dem	darüber-x
hinaus	APZR	hinaus-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Tatsache	N.Reg.Nom.Sg.Fem	Tatsache-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
die	ART.Def.Acc.Sg.Fem	die-x
unterste	ADJA.Sup.Acc.Sg.Fem	unter-j
Ebene	N.Reg.Acc.Sg.Fem	Ebene-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU	N.Reg.Gen.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systems	N.Reg.Gen.Sg.Neut	Linux-System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.*	GNU-n
die	ART.Def.Nom.Pl.Fem	die-x
technisch	ADJD.Pos	technisch-j
höheren	ADJA.Comp.Nom.Pl.Fem	hoch-j
Ebenen	N.Reg.Nom.Pl.Fem	Ebene-n
erfüllt	VPP.Full.Psp	erfüllen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
bevorzugt	ADJD.Pos	bevorzugt-j
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
jedoch	ADV	jedoch-a
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
viel	ADV	viel-a
besser	ADJD.Comp	gut-j
als	CONJ.Comp	als-c
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
üblicherweise	ADV	üblicherweise-a
tun	VFIN.Full.3.Pl.Pres.Ind	tun-v
<g/>
,	SYM.Pun.Comma	,-x
nämlich	ADV	nämlich-a
GNU	N.Name.Nom.Sg.*	GNU-n
vollständig	ADJD.Pos	vollständig-j
weglassen	VINF.Full	weglassen-v
und	CONJ.Coord	und-c
den	ART.Def.Acc.Sg.Masc	die-x
Anschein	N.Reg.Acc.Sg.Masc	Anschein-n
erwecken	VINF.Full	erwecken-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
Gesamtsystem	N.Reg.Nom.Sg.Neut	Gesamtsystem-n
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
meiner	PRO.Poss.Attr.Gen.Sg.Fem	meine-p
Distribution	N.Reg.Gen.Sg.Fem	Distribution-n
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
"	SYM.Quot.Left	"-x
<g/>
Fubar	ADJD.Pos	Fubar-j
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
sagt	VFIN.Full.3.Sg.Pres.Ind	sagen-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
darüber	PROADV.Dem	darüber-x
aus	PART.Verb	aus-x
<g/>
,	SYM.Pun.Comma	,-x
woraus	FM	woraus-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
besteht	VFIN.Full.3.Sg.Pres.Ind	bestehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
benennen	VINF.Full	benennen-v
dürfen	VINF.Mod	dürfen-v
wie	CONJ.Comp	wie-c
auch	ADV	auch-a
immer	ADV	immer-a
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
mögen	VFIN.Full.3.Pl.Pres.Ind	mögen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#distronames0	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
System	N.Reg.Nom.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Foobar	ADJD.Pos	Foobar-j
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
benennen	VINF.Full	benennen-v
impliziert	VFIN.Full.3.Sg.Pres.Ind	implizieren-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Variante	N.Reg.Acc.Sg.Fem	Variante-n
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
so	ADV	so-a
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
auch	ADV	auch-a
verstanden	VPP.Full.Psp	verstehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
GNU	N.Name.Acc.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distribution	N.Name.*.*.*	Linux-Distribution-n
'	SYM.Quot.Right	'-x
<g/>
Fubar	N.Name.*.*.*	Fubar-n
BSD	N.Name.Acc.Sg.*	BSD-n
<g/>
'	SYM.Quot.Right	'-x
nennen	VINF.Full	nennen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
Fehler	N.Reg.Acc.Sg.Masc	Fehler-n
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
"	SYM.Quot.Left	"-x
<g/>
Dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
System	N.Reg.Nom.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
BSD	N.Name.Nom.Sg.*	BSD-n
<g/>
!	SYM.Pun.Sent	!-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
sagen	VFIN.Full.3.Pl.Pres.Ind	sagen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nun	ADV	nun-a
<g/>
,	SYM.Pun.Comma	,-x
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
auch	ADV	auch-a
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
meiner	PRO.Poss.Attr.Gen.Sg.Fem	meine-p
Distribution	N.Reg.Gen.Sg.Fem	Distribution-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
"	SYM.Quot.Left	"-x
<g/>
Fubar	ADJD.Pos	Fubar-j
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
dadurch	PROADV.Dem	dadurch-x
nicht	PART.Neg	nicht-x
ausgedrückt	VPP.Full.Psp	ausdrücken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wirklich	ADJD.Pos	wirklich-j
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#distronames	ADJA.Pos.Nom.Sg.Neut	#distronam-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
diejenigen	PRO.Dem.Subst.Nom.Pl.Masc	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
die	ART.Def.Acc.Sg.Fem	die-x
"	SYM.Quot.Left	"-x
<g/>
Fubar	N.Name.*.*.*	Fubar-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Distribution	N.Reg.Acc.Sg.Fem	Distribution-n
entwickeln	VINF.Full	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
häufig	ADJD.Pos	häufig-j
gemachten	ADJA.Pos.Acc.Sg.Masc	gemacht-j
Fehler	N.Reg.Acc.Sg.Masc	Fehler-n
wiederholen	VINF.Full	wiederholen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
wissen	VFIN.Full.1.Pl.Pres.Ind	wissen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	PART.Zu	zu-x
schätzen	VINF.Full	schätzen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Distributionen	N.Reg.Nom.Pl.Fem	Distribution-n
wie	CONJ.Comp	wie-c
Debian	N.Name.Nom.Sg.Neut	Debian-n
<g/>
,	SYM.Pun.Comma	,-x
Dragora	N.Name.Nom.Sg.Neut	Dragora-n
<g/>
,	SYM.Pun.Comma	,-x
Musix	N.Name.Nom.Sg.Masc	Musix-n
<g/>
,	SYM.Pun.Comma	,-x
Trisquel	N.Name.Nom.Sg.Masc	Trisquel-n
und	CONJ.Coord	und-c
Venenux	N.Name.Nom.Sg.Fem	Venenux-n
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
als	APPR	als-i
Bestandteil	N.Reg.Nom.Sg.Masc	Bestandteil-n
ihres	PRO.Poss.Attr.Gen.Sg.Masc	ihre-p
offiziellen	ADJA.Pos.Gen.Sg.Masc	offiziell-j
Namens	N.Reg.Gen.Sg.Masc	Name-n
übernommen	VPP.Full.Psp	übernehmen-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
und	CONJ.Coord	und-c
hoffen	VFIN.Full.3.Pl.Pres.Ind	hoffen-v
<g/>
,	SYM.Pun.Comma	,-x
sollten	VFIN.Mod.3.Pl.Past.Subj	sollen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
bei	APPR	bei-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
Distributionen	N.Reg.Dat.Pl.Fem	Distribution-n
involviert	VPP.Full.Psp	involvieren-v
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dazu	PROADV.Dem	dazu-x
zu	PART.Zu	zu-x
ermutigen	VINF.Full	ermutigen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
gleiche	ADJA.Pos.Acc.Sg.Neut	gleich-j
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
offizielle	ADJA.Pos.Nom.Sg.Masc	offiziell-j
Name	N.Reg.Nom.Sg.Masc	Name-n
der	ART.Def.Gen.Sg.Fem	die-x
Distribution	N.Reg.Gen.Sg.Fem	Distribution-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
"	SYM.Quot.Left	"-x
<g/>
Fubar	N.Name.*.*.*	Fubar-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Distribution	N.Reg.Acc.Sg.Fem	Distribution-n
alles	PRO.Indef.Subst.Acc.Sg.Neut	alle-p
andere	PRO.Indef.Subst.Acc.Sg.Neut	andere-p
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Fubar	ADJD.Pos	Fubar-j
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#distronames1	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Fehlinformation	N.Reg.Nom.Sg.Fem	Fehlinformation-n
verbreitet	VPP.Full.Psp	verbreiten-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
GNU	N.Name.Nom.Sg.*	GNU-n
zu	APPR	zu-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
ändert	VFIN.Full.3.Sg.Pres.Ind	ändern-v
und	CONJ.Coord	und-c
deren	PRO.Rel.Attr.Gen.Sg.Fem	die-p
Version	N.Reg.Nom.Sg.Fem	Version-n
davon	PROADV.Dem	davon-x
"	SYM.Quot.Left	"-x
<g/>
Fubar	ADJD.Pos	Fubar-j
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennt	VFIN.Full.3.Sg.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
angemessen	ADJD.Pos	angemessen-j
die	ART.Def.Acc.Sg.Fem	die-x
Fehlinformation	N.Reg.Acc.Sg.Fem	Fehlinformation-n
dadurch	PROADV.Dem	dadurch-x
zu	PART.Zu	zu-x
korrigieren	VINF.Full	korrigieren-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
Fubar	ADJD.Pos	Fubar-j
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nennt	VFIN.Full.3.Sg.Pres.Ind	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
effektiver	ADJD.Comp	effektiv-j
<g/>
,	SYM.Pun.Comma	,-x
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
wie	CONJ.Comp	wie-c
Mandrake	N.Name.Nom.Sg.*	Mandrake-n
<g/>
,	SYM.Pun.Comma	,-x
Red	N.Name.*.*.*	Red-n
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
und	CONJ.Coord	und-c
IBM	N.Name.Nom.Sg.*	IBM-n
darum	PROADV.Dem	darum-x
zu	PART.Zu	zu-x
bitten	VINF.Full	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
Distributionen	N.Reg.Acc.Pl.Fem	Distribution-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
anstatt	CONJ.SubInf	anstatt-c
Einzelne	ADJA.Pos.Acc.Pl.Fem	einzeln-j
darum	PROADV.Dem	darum-x
zu	PART.Zu	zu-x
bitten	VINF.Full	bitten-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#companies	ADJA.Pos.Nom.Sg.Neut	#compani-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
Frage	N.Reg.Nom.Sg.Fem	Frage-n
des	ART.Def.Gen.Sg.Masc	die-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
oder	CONJ.Coord	oder-c
des	ART.Def.Gen.Sg.Masc	die-x
anderen	ADJA.Pos.Gen.Sg.Masc	ander-j
-	SYM.Pun.Hyph	--x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
<g/>
,	SYM.Pun.Comma	,-x
Organisationen	N.Reg.Nom.Pl.Fem	Organisation-n
und	CONJ.Coord	und-c
Einzelne	ADJA.Pos.Nom.Pl.Masc	einzeln-j
darum	PROADV.Dem	darum-x
<g/>
,	SYM.Pun.Comma	,-x
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Verbreitung	N.Reg.Dat.Sg.Fem	Verbreitung-n
der	ART.Def.Gen.Sg.Fem	die-x
Bezeichnung	N.Reg.Gen.Sg.Fem	Bezeichnung-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Tat	N.Reg.Dat.Sg.Fem	Tat-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
drei	CARD	drei-m
Firmen	N.Reg.Nom.Pl.Fem	Firma-n
gefragt	VPP.Full.Psp	fragen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mandrake	N.Name.Nom.Sg.*	Mandrake-n
sagte	VFIN.Full.3.Sg.Past.Ind	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
einige	PRO.Indef.Attr.Acc.Sg.Fem	einige-p
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
IBM	N.Name.Nom.Sg.*	IBM-n
und	CONJ.Coord	und-c
Red	N.Name.*.*.*	Red-n
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
nicht	PART.Neg	nicht-x
gewillt	ADJD.Pos	gewillt-j
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Masc	eine-x
leitender	ADJA.Pos.Nom.Sg.Masc	leitend-j
Angestellter	N.Reg.Nom.Sg.Masc	Angestellte-n
sagte	VFIN.Full.3.Sg.Past.Ind	sagen-v
<g/>
:	SYM.Pun.Colon	:-x
"	SYM.Quot.Left	"-x
<g/>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
rein	ADJD.Pos	rein-j
kommerzielle	ADJA.Pos.Nom.Sg.Fem	kommerziell-j
Entscheidung	N.Reg.Nom.Sg.Fem	Entscheidung-n
<g/>
;	SYM.Pun.Sent	;-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
erwarten	VFIN.Full.1.Pl.Pres.Ind	erwarten-v
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Geld	N.Reg.Acc.Sg.Neut	Geld-n
zu	PART.Zu	zu-x
verdienen	VINF.Full	verdienen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
Mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Worten	N.Reg.Dat.Pl.Neut	Wort-n
<g/>
,	SYM.Pun.Comma	,-x
dieses	PRO.Dem.Attr.Nom.Sg.Neut	diese-p
Unternehmen	N.Reg.Nom.Sg.Neut	Unternehmen-n
interessierte	VFIN.Full.3.Sg.Past.Ind	interessieren-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
nicht	PART.Neg	nicht-x
dafür	PROADV.Dem	dafür-x
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
richtig	ADJD.Pos	richtig-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
nicht	PART.Neg	nicht-x
dazu	PROADV.Dem	dazu-x
bringen	VINF.Full	bringen-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
richtigzustellen	VINF.Full.zu	richtigstellen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
diejenigen	PRO.Dem.Subst.Acc.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
aufgeben	VFIN.Full.3.Pl.Pres.Ind	aufgeben-v
<g/>
,	SYM.Pun.Comma	,-x
nur	ADV	nur-a
weil	CONJ.SubFin	weil-c
der	ART.Def.Nom.Sg.Masc	die-x
Weg	N.Reg.Nom.Sg.Masc	Weg-n
nicht	PART.Neg	nicht-x
einfach	ADJD.Pos	einfach-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Möglicherweise	ADV	möglicherweise-a
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
so	ADV	so-a
viel	PRO.Indef.Attr.*.*.*	viel-p
Einfluss	N.Reg.Nom.Sg.Masc	Einfluss-n
wie	CONJ.Comp	wie-c
IBM	N.Name.Nom.Sg.*	IBM-n
oder	CONJ.Coord	oder-c
Red	N.Name.*.*.*	Red-n
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
dennoch	ADV	dennoch-a
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gemeinsam	ADJD.Pos	gemeinsam-j
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Situation	N.Reg.Acc.Sg.Fem	Situation-n
bis	APPR	bis-i
zu	APPR	zu-i
dem	ART.Def.Dat.Sg.Masc	die-x
Punkt	N.Reg.Dat.Sg.Masc	Punkt-n
ändern	VINF.Full	ändern-v
<g/>
,	SYM.Pun.Comma	,-x
an	APPR	an-i
dem	PRO.Rel.Subst.Dat.Sg.Masc	die-p
Unternehmen	N.Reg.Nom.Pl.Neut	Unternehmen-n
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Gewinn	N.Reg.Acc.Sg.Masc	Gewinn-n
machen	VFIN.Full.3.Pl.Pres.Ind	machen-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
besser	ADJD.Comp	gut-j
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
für	APPR	für-i
Distributionen	N.Reg.Acc.Pl.Fem	Distribution-n
aufzuheben	VINF.Full.zu	aufheben-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
komplett	ADJD.Pos	komplett-j
aus	APPR	aus-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
bestehen	VFIN.Full.3.Pl.Pres.Ind	bestehen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Letzten	ADJA.Pos.Gen.Sg.Neut	letzt-j
Endes	N.Reg.Gen.Sg.Neut	Ende-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
das	ART.Def.Nom.Sg.Neut	die-x
Ideal	N.Reg.Nom.Sg.Neut	Ideal-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
(	SYM.Paren.Left	(-x
<g/>
#reserve	N.Reg.Nom.Sg.Fem	#reserve-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
weit	ADJD.Pos	weit-j
verbreitete	ADJA.Pos.Nom.Sg.Fem	verbreitet-j
Praxis	N.Reg.Nom.Sg.Fem	Praxis-n
<g/>
,	SYM.Pun.Comma	,-x
dem	PRO.Rel.Subst.Dat.Sg.Neut	die-p
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Name.Acc.Sg.*	Linux-System-n
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
hinzuzufügen	VINF.Full.zu	hinzufügen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
für	APPR	für-i
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Acc.Sg.Fem	Gemeinschaft-n
ein	ART.Indef.Nom.Sg.Neut	eine-x
großes	ADJA.Pos.Nom.Sg.Neut	groß-j
Problem	N.Reg.Nom.Sg.Neut	Problem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
lehrt	VFIN.Full.3.Sg.Pres.Ind	lehren-v
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
in	APPR	in-i
Ordnung	N.Reg.Acc.Sg.Fem	Ordnung-n
und	CONJ.Coord	und-c
deren	PRO.Dem.Subst.Gen.Sg.Fem	die-p
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Masc	die-x
Geistes	N.Reg.Gen.Sg.Masc	Geist-n
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Attr.Nom.Pl.Masc	viele-p
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Benutzergruppen	N.Reg.Nom.Pl.Fem	Benutzergruppe-n
machen	VFIN.Full.3.Pl.Pres.Ind	machen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Teil	N.Reg.Dat.Sg.Masc	Teil-n
ihrer	PRO.Poss.Attr.Gen.Sg.Fem	ihre-p
Mission	N.Reg.Gen.Sg.Fem	Mission-n
<g/>
,	SYM.Pun.Comma	,-x
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Nutzung	N.Reg.Dat.Sg.Fem	Nutzung-n
unfreier	ADJA.Pos.Gen.Pl.Fem	unfrei-j
Erweiterungen	N.Reg.Gen.Pl.Fem	Erweiterung-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
und	CONJ.Coord	und-c
laden	VFIN.Full.3.Pl.Pres.Ind	laden-v
vielleicht	ADV	vielleicht-a
sogar	ADV	sogar-a
Verkäufer	N.Reg.Acc.Pl.Masc	Verkäufer-n
ein	PART.Verb	ein-x
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Verkaufstaktiken	N.Reg.Acc.Pl.Fem	Verkaufstaktik-n
für	APPR	für-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
vertreten	VFIN.Full.3.Pl.Pres.Ind	vertreten-v
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
wie	CONJ.Comp	wie-c
das	ART.Def.Acc.Sg.Neut	die-x
Helfen	N.Reg.Acc.Sg.Neut	Helfen-n
der	ART.Def.Gen.Pl.Masc	die-x
Benutzer	N.Reg.Gen.Pl.Masc	Benutzer-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
(	SYM.Paren.Left	(-x
<g/>
einschließlich	APPR	einschließlich-i
der	ART.Def.*.Sg.Fem	die-x
Hilfe	N.Reg.*.Sg.Fem	Hilfe-n
<g/>
,	SYM.Pun.Comma	,-x
unfreie	ADJA.Pos.Acc.Pl.Fem	unfrei-j
Anwendungen	N.Reg.Acc.Pl.Fem	Anwendung-n
und	CONJ.Coord	und-c
Treiber	N.Reg.Acc.Pl.Masc	Treiber-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
)	SYM.Paren.Right	)-x
oder	CONJ.Coord	oder-c
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
sogar	ADV	sogar-a
populärer	ADJD.Comp	populär-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
-	SYM.Pun.Hyph	--x
auf	APPR	auf-i
Kosten	N.Reg.Acc.Pl.*	Kosten-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
versuchen	VINF.Full	versuchen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
zu	PART.Zu	zu-x
ändern	VINF.Full	ändern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	ADV	da-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Großteil	N.Reg.Nom.Sg.Masc	Großteil-n
der	ART.Def.Gen.Sg.Fem	die-x
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
-	SYM.Pun.Hyph	--x
der	ART.Def.Dat.Sg.Fem	die-x
GNU	N.Name.Dat.Sg.Fem	GNU-n
bereits	ADV	bereits-a
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
-	SYM.Pun.Hyph	--x
schon	ADV	schon-a
nicht	PART.Neg	nicht-x
erkennt	VFIN.Full.3.Sg.Pres.Ind	erkennen-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Acc.Sg.Neut	die-p
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Salz	N.Reg.Acc.Sg.Neut	Salz-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Suppe	N.Reg.Dat.Sg.Fem	Suppe-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
diese	PRO.Dem.Subst.Nom.Sg.Fem	diese-p
verfälschten	ADJA.Pos.Nom.Pl.Fem	verfälscht-j
Varianten	N.Reg.Nom.Pl.Fem	Variante-n
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Begründung	N.Reg.Dat.Sg.Fem	Begründung-n
zu	PART.Zu	zu-x
verleugnen	VINF.Full	verleugnen-v
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
seien	VFIN.Aux.3.Pl.Pres.Subj	sein-v
nicht	PART.Neg	nicht-x
wirklich	ADJD.Pos	wirklich-j
GNU	ADJD.Pos	GNU-j
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
den	ART.Def.Dat.Pl.Masc	die-x
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
nicht	PART.Neg	nicht-x
beibringen	VINF.Full	beibringen-v
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
mehr	ADV	mehr-a
zu	PART.Zu	zu-x
schätzen	VINF.Full	schätzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
die	ART.Def.Acc.Sg.Fem	die-x
beabsichtigte	ADJA.Pos.Acc.Sg.Fem	beabsichtigt-j
Botschaft	N.Reg.Acc.Sg.Fem	Botschaft-n
nicht	PART.Neg	nicht-x
erhalten	VINF.Full	erhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
nur	ADV	nur-a
antworten	VINF.Full	antworten-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
hätten	VFIN.Aux.3.Pl.Past.Subj	haben-v
niemals	ADV	niemals-a
gedacht	VPP.Full.Psp	denken|gedenken-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Systeme	N.Reg.Nom.Pl.Neut	System-n
in	APPR	in-i
erster	ADJA.Pos.Dat.Sg.Fem	erst-j
Linie	N.Reg.Dat.Sg.Fem	Linie-n
GNU	ADJD.Pos	GNU-j
wären	VFIN.Aux.3.Pl.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Attr.Nom.Pl.Masc	diese-p
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
dahin	PROADV.Dem	dahin-x
zu	PART.Zu	zu-x
führen	VINF.Full	führen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Verbindung	N.Reg.Acc.Sg.Fem	Verbindung-n
mit	APPR	mit-i
Freiheit	N.Reg.Dat.Sg.Fem	Freiheit-n
zu	PART.Zu	zu-x
sehen	VINF.Full	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
genau	ADJD.Pos	genau-j
entgegengesetzt	ADJD.Pos	entgegengesetzt-j
<g/>
:	SYM.Pun.Colon	:-x
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
informieren	VINF.Full	informieren-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
all	PRO.Indef.Attr.*.*.*	all-p
diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
Systemversionen	N.Reg.Nom.Pl.Fem	Systemversion-n
Varianten	N.Reg.Nom.Pl.Fem	Variante-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
alle	PRO.Indef.Subst.Nom.Pl.*	alle-p
auf	APPR	auf-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
System	N.Reg.Dat.Sg.Neut	System-n
beruhen	VFIN.Full.3.Pl.Pres.Ind	beruhen-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
ausdrücklich	ADJD.Pos	ausdrücklich-j
im	APPRART.Dat.Sg.Neut	in-i
Interesse	N.Reg.Dat.Sg.Neut	Interesse-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
des	ART.Def.Gen.Sg.Masc	die-x
Nutzers	N.Reg.Gen.Sg.Masc	Nutzer-n
existiert	VFIN.Full.3.Sg.Pres.Ind	existieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Verständnis	N.Reg.Dat.Sg.Neut	Verständnis-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
anfangen	VINF.Full	anfangen-v
die	ART.Def.Acc.Pl.Fem	die-x
Distributionen	N.Reg.Acc.Pl.Fem	Distribution-n
zu	PART.Zu	zu-x
erkennen	VINF.Full	erkennen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
als	APPR	als-i
pervertierte	ADJA.Pos.Nom.Pl.Fem	pervertiert-j
<g/>
,	SYM.Pun.Comma	,-x
verfälschte	ADJA.Pos.Nom.Pl.Fem	verfälscht-j
Varianten	N.Reg.Nom.Pl.Fem	Variante-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
umfassen	VFIN.Full.3.Pl.Pres.Ind	umfassen-v
<g/>
,	SYM.Pun.Comma	,-x
anstatt	CONJ.SubInf	anstatt-c
anzunehmen	VINF.Full.zu	annehmen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
seien	VFIN.Aux.3.Pl.Pres.Subj	sein-v
richtige	ADJA.Pos.Nom.Pl.Fem	richtig-j
und	CONJ.Coord	und-c
angemessene	ADJA.Pos.Nom.Pl.Fem	angemessen-j
"	SYM.Quot.Left	"-x
<g/>
Linux-Versionen	N.Reg.Nom.Pl.Fem	Linux-Version-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
sehr	ADV	sehr-a
nützlich	ADJD.Pos	nützlich-j
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Benutzergruppen	N.Reg.Acc.Pl.Fem	Linux-Benutzergruppe-n
zu	PART.Zu	zu-x
gründen	VINF.Full	gründen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nennen	VINF.Full	nennen-v
und	CONJ.Coord	und-c
die	ART.Def.Acc.Pl.Neut	die-x
Ideale	N.Reg.Acc.Pl.Neut	Ideal-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
als	APPR	als-i
Basis	N.Reg.Acc.Sg.Fem	Basis-n
ihrer	PRO.Poss.Attr.Gen.Pl.Fem	ihre-p
Aktivitäten	N.Reg.Gen.Pl.Fem	Aktivität-n
übernehmen	VINF.Full	übernehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Linux-Benutzergruppe	N.Reg.Dat.Sg.Fem	Linux-Benutzergruppe-n
in	APPR	in-i
ihrer	PRO.Poss.Attr.Dat.Sg.Fem	ihre-p
Nähe	N.Reg.Dat.Sg.Fem	Nähe-n
die	ART.Def.Acc.Pl.Neut	die-x
vorstehend	ADJD.Pos	vorstehend-j
beschriebenen	ADJA.Pos.Acc.Pl.Neut	beschrieben-j
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
bestehen	VFIN.Full.3.Pl.Pres.Ind	bestehen-v
<g/>
,	SYM.Pun.Comma	,-x
empfehlen	VFIN.Full.3.Pl.Pres.Ind	empfehlen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
entweder	ADV	entweder-a
innerhalb	APPR	innerhalb-i
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Gruppe	N.Reg.Gen.Sg.Fem	Gruppe-n
für	APPR	für-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Änderung	N.Reg.Acc.Sg.Fem	Änderung-n
ihrer	PRO.Poss.Attr.Gen.Sg.Fem	ihre-p
Ausrichtung	N.Reg.Gen.Sg.Fem	Ausrichtung-n
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
ihres	PRO.Poss.Attr.Gen.Sg.Masc	ihre-p
Namens	N.Reg.Gen.Sg.Masc	Name-n
<g/>
)	SYM.Paren.Right	)-x
einzusetzen	VINF.Full.zu	einsetzen-v
oder	CONJ.Coord	oder-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
neue	ADJA.Pos.Acc.Sg.Fem	neu-j
Gruppe	N.Reg.Acc.Sg.Fem	Gruppe-n
zu	PART.Zu	zu-x
gründen	VINF.Full	gründen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.*	die-x
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
auf	APPR	auf-i
die	ART.Def.Acc.Pl.Neut	die-x
oberflächlicheren	ADJA.Comp.Acc.Pl.Neut	oberflächlich-j
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
konzentrieren	VFIN.Full.3.Pl.Pres.Ind	konzentrieren-v
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
Recht	N.Reg.Acc.Sg.Neut	Recht-n
auf	APPR	auf-i
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
Ansichten	N.Reg.Acc.Pl.Fem	Ansicht-n
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
lassen	VFIN.Full.3.Pl.Pres.Ind	lassen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
mitreißen	VINF.Full	mitreißen-v
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
GNU-Distribution	N.Reg.Nom.Sg.Fem	GNU-Distribution-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
[	SYM.Paren.Left	[-x
<g/>
sic	ITJ	sic-x
<g/>
]	SYM.Paren.Right	]-x
hergestellt	VPP.Full.Psp	herstellen-v
und	CONJ.Coord	und-c
diese	PRO.Dem.Subst.Nom.Pl.Fem	diese-p
dann	ADV	dann-a
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
genannt	VPP.Full.Psp	nennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#gnudist	N.Reg.Nom.Sg.Fem	#gnudist-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Alle	PRO.Indef.Attr.Acc.Pl.Neut	alle-p
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Distributionen	N.Reg.Nom.Pl.Fem	Distribution-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
tatsächlich	ADJD.Pos	tatsächlich-j
Versionen	N.Reg.Nom.Pl.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
als	APPR	als-i
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Zweck	N.Reg.Nom.Sg.Masc	Zweck-n
des	ART.Def.Gen.Sg.Masc	die-x
Begriffs	N.Reg.Gen.Sg.Masc	Begriff-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
<g/>
,	SYM.Pun.Comma	,-x
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Punkt	N.Reg.Acc.Sg.Masc	Punkt-n
zu	PART.Zu	zu-x
vermitteln	VINF.Full	vermitteln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Acc.Sg.Fem	eine-x
neue	ADJA.Pos.Acc.Sg.Fem	neu-j
Distribution	N.Reg.Acc.Sg.Fem	Distribution-n
zu	PART.Zu	zu-x
entwickeln	VINF.Full	entwickeln-v
und	CONJ.Coord	und-c
diese	PRO.Dem.Subst.Nom.Pl.Fem	diese-p
allein	ADV	allein-a
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
Punkt	N.Reg.Acc.Sg.Masc	Punkt-n
schwer	ADJD.Pos	schwer-j
verständlich	ADJD.Pos	verständlich-j
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
auf	APPR	auf-i
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
ankommt	VFIN.Full.3.Sg.Pres.Ind	ankommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bezüglich	APPR	bezüglich-i
der	ART.Def.*.Sg.Fem	die-x
Entwicklung	N.Reg.*.Sg.Fem	Entwicklung-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Distribution	N.Reg.Gen.Sg.Fem	Distribution-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
schon	ADV	schon-a
einmal	ADV	einmal-a
gemacht	VPP.Full.Psp	machen-v
<g/>
,	SYM.Pun.Comma	,-x
als	CONJ.SubFin	als-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
frühe	ADJA.Pos.Acc.Sg.Fem	früh-j
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
von	APPR	von-i
Debian	N.Name.Dat.Sg.Neut	Debian-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
finanzierten	VFIN.Full.3.Pl.Past.Ind	finanzieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
jetzt	ADV	jetzt-a
erneut	ADJD.Pos	erneut-j
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
,	SYM.Pun.Comma	,-x
erscheint	VFIN.Full.3.Sg.Pres.Ind	erscheinen-v
nicht	PART.Neg	nicht-x
nützlich	ADJD.Pos	nützlich-j
<g/>
;	SYM.Pun.Sent	;-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
viel	PRO.Indef.Attr.*.*.*	viel-p
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
und	CONJ.Coord	und-c
<g/>
,	SYM.Pun.Comma	,-x
sofern	CONJ.SubFin	sofern-c
die	ART.Def.Nom.Sg.Fem	die-x
neue	ADJA.Pos.Nom.Sg.Fem	neu-j
Distribution	N.Reg.Nom.Sg.Fem	Distribution-n
keine	PRO.Indef.Attr.Acc.Pl.Masc	keine-p
wesentlichen	ADJA.Pos.Acc.Pl.Masc	wesentlich-j
praktischen	ADJA.Pos.Acc.Pl.Masc	praktisch-j
Vorteile	N.Reg.Acc.Pl.Masc	Vorteil-n
gegenüber	APPR	gegenüber-i
anderen	ADJA.Pos.Dat.Pl.Fem	ander-j
Distributionen	N.Reg.Dat.Pl.Fem	Distribution-n
hätte	VFIN.Full.3.Sg.Past.Subj	haben-v
<g/>
,	SYM.Pun.Comma	,-x
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Zweck	N.Reg.Acc.Sg.Masc	Zweck-n
dienen	VINF.Full	dienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Stattdessen	PROADV.Dem	Stattdessen-x
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Entwicklern	N.Reg.Dat.Pl.Masc	Entwickler-n
von	APPR	von-i
100	CARD	[number]-m
%	N.Reg.*.*.Neut	%-n
freien	ADJA.Pos.Gen.Sg.Fem	frei-j
GNU	N.Name.Gen.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Distributionen	N.Name.Nom.Pl.Fem	Linux-Distributionen-n
wie	CONJ.Comp	wie-c
gNewSense	FM	gNewSense-x
und	CONJ.Coord	und-c
Ututo	FM	Ututo-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
heißt	VFIN.Full.3.Sg.Pres.Ind	heißen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
einfach	ADJD.Pos	einfach-j
'	SYM.Quot.Right	'-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
GNU-Betriebssystemkern	N.Reg.Nom.Sg.Masc	GNU-Betriebssystemkern-n
<g/>
'	SYM.Quot.Right	'-x
und	CONJ.Coord	und-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
vorhandene	ADJA.Pos.Nom.Sg.Fem	vorhanden-j
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Variante	N.Name.Nom.Sg.Fem	Linux-Variante-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
unter	APPR	unter-i
dem	ART.Def.Dat.Sg.Masc	die-x
Namen	N.Reg.Dat.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
freigegeben	VPP.Full.Psp	freigeben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#linuxgnu	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
gute	ADJA.Pos.Nom.Sg.Fem	gut-j
Idee	N.Reg.Nom.Sg.Fem	Idee-n
gewesen	VPP.Aux.Psp	sein-v
sein	VINF.Aux	sein-v
<g/>
,	SYM.Pun.Comma	,-x
Linux	N.Reg.Acc.Sg.Neut	Linux-n
als	APPR	als-i
GNU-Betriebssystemkern	N.Reg.Acc.Sg.Neut	GNU-Betriebssystemkern-n
anzunehmen	VINF.Full.zu	annehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Hätten	VFIN.Aux.1.Pl.Past.Subj	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
damals	ADV	damals-a
realisiert	VPP.Full.Psp	realisieren-v
wie	CONJ.Comp	wie-c
lange	ADV	lange-a
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
dauern	VINF.Full	dauern-v
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
GNU	N.Name.*.*.*	GNU-n
Hurd	N.Name.Acc.Sg.*	Hurd-n
zum	APPRART.Dat.Sg.Neut	zu-i
Laufen	N.Reg.Dat.Sg.Neut	Laufen-n
zu	PART.Zu	zu-x
bringen	VINF.Full	bringen-v
<g/>
,	SYM.Pun.Comma	,-x
dann	ADV	dann-a
hätten	VFIN.Aux.1.Pl.Past.Subj	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
tun	VINF.Full	tun-v
können	VINF.Mod	können-v
(	SYM.Paren.Left	(-x
<g/>
leider	ADV	leider-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
nachträgliche	ADJA.Pos.Nom.Sg.Fem	nachträglich-j
Einsicht	N.Reg.Nom.Sg.Fem	Einsicht-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
vorhandene	ADJA.Pos.Acc.Sg.Fem	vorhanden-j
Version	N.Reg.Acc.Sg.Fem	Version-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
nehmen	VFIN.Full.3.Pl.Pres.Ind	nehmen-v
und	CONJ.Coord	und-c
als	APPR	als-i
GNU	ADJD.Pos	GNU-j
bezeichnen	VINF.Full	bezeichnen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
wenig	PRO.Indef.Subst.*.*.*	wenig-p
wie	CONJ.Comp	wie-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
Version	N.Reg.Acc.Sg.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
herzustellen	VINF.Full.zu	herstellen-v
und	CONJ.Coord	und-c
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
bezeichnen	VINF.Full	bezeichnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
nicht	PART.Neg	nicht-x
richtig	ADJD.Pos	richtig-j
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
möchten	VFIN.Mod.1.Pl.Past.Subj	mögen-v
nicht	PART.Neg	nicht-x
so	ADV	so-a
handeln	VINF.Full	handeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
den	ART.Def.Acc.Sg.Masc	die-x
Einsatz	N.Reg.Acc.Sg.Masc	Einsatz-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
frühen	ADJA.Pos.Dat.Pl.Masc	früh-j
Tagen	N.Reg.Dat.Pl.Masc	Tag-n
verurteilt	VPP.Full.Psp	verurteilen-v
und	CONJ.Coord	und-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
dagegen	PROADV.Dem	dagegen-x
ausgesprochen	VPP.Full.Psp	aussprechen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#condemn	N.Name.*.*.*	#condemn-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
übernahmen	VFIN.Full.1.Pl.Past.Ind	übernehmen-v
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nicht	PART.Neg	nicht-x
als	APPR	als-i
unseren	PRO.Poss.Attr.Acc.Sg.Masc	unsre-p
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
verurteilten	VFIN.Full.3.Pl.Past.Ind	verurteilen-v
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nicht	PART.Neg	nicht-x
oder	CONJ.Coord	oder-c
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
dagegen	PROADV.Dem	dagegen-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1993	CARD	[number]-m
begannen	VFIN.Full.3.Pl.Past.Ind	beginnen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
Vorbereitungen	N.Reg.Acc.Pl.Fem	Vorbereitung-n
zu	PART.Zu	zu-x
erörtern	VINF.Full	erörtern-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Entwicklung	N.Reg.Acc.Sg.Fem	Entwicklung-n
von	APPR	von-i
Debian	N.Name.Dat.Sg.Neut	Debian-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sponsern	VINF.Full	sponsern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
versuchten	VFIN.Full.1.Pl.Past.Ind	versuchen-v
auch	ADV	auch-a
mit	APPR	mit-i
den	ART.Def.Dat.Pl.*	die-x
Leuten	N.Reg.Dat.Pl.*	Leute-n
zusammenzuarbeiten	VINF.Full.zu	zusammenarbeiten-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
GNU-Pakete	N.Reg.Acc.Pl.Neut	GNU-Paket-n
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
Einsatz	N.Reg.Acc.Sg.Masc	Einsatz-n
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
änderten	VFIN.Full.3.Pl.Past.Ind	ändern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
wollten	VFIN.Mod.1.Pl.Past.Ind	wollen-v
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
in	APPR	in-i
den	ART.Def.Dat.Pl.Fem	die-x
Standardfreigaben	N.Reg.Dat.Pl.Fem	Standardfreigabe-n
aufnehmen	VINF.Full	aufnehmen-v
<g/>
,	SYM.Pun.Comma	,-x
sodass	CONJ.SubFin	sodass-c
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
GNU-Pakete	N.Reg.Nom.Pl.Neut	GNU-Paket-n
aus	APPR	aus-i
dem	ART.Def.Dat.Sg.Masc	die-x
Stand	N.Reg.Dat.Sg.Masc	Stand-n
heraus	APZR	heraus-x
in	APPR	in-i
Kombination	N.Reg.Dat.Sg.Fem	Kombination-n
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
funktionieren	VINF.Full	funktionieren-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
die	ART.Def.Nom.Pl.Fem	die-x
Änderungen	N.Reg.Nom.Pl.Fem	Änderung-n
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
oft	ADV	oft-a
spontan	ADJD.Pos	spontan-j
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
portierbar	ADJD.Pos	portierbar-j
<g/>
;	SYM.Pun.Sent	;-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
mussten	VFIN.Mod.3.Pl.Past.Ind	müssen-v
noch	ADV	noch-a
für	APPR	für-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
Installation	N.Reg.Acc.Sg.Fem	Installation-n
bereinigt	VPP.Full.Psp	bereinigen-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.*	die-x
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
die	ART.Def.Acc.Pl.Fem	die-x
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
gemacht	VPP.Full.Psp	machen-v
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
zeigten	VFIN.Full.3.Pl.Past.Ind	zeigen-v
wenig	PRO.Indef.Attr.*.*.*	wenig-p
Interesse	N.Reg.Acc.Sg.Neut	Interesse-n
daran	PROADV.Dem	daran-x
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
zusammenzuarbeiten	VINF.Full.zu	zusammenarbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einer	PRO.Indef.Subst.Nom.Sg.Masc	eine-p
von	APPR	von-i
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
sagte	VFIN.Full.3.Sg.Past.Ind	sagen-v
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
sogar	ADV	sogar-a
<g/>
,	SYM.Pun.Comma	,-x
kein	PRO.Indef.Attr.Acc.Sg.Neut	keine-p
Interesse	N.Reg.Acc.Sg.Neut	Interesse-n
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
Zusammenarbeit	N.Reg.Dat.Sg.Fem	Zusammenarbeit-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
zu	PART.Zu	zu-x
haben	VINF.Aux	haben-v
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
'	SYM.Quot.Right	'-x
<g/>
Linux-Benutzer	N.Reg.Nom.Sg.Masc	Linux-Benutzer-n
<g/>
'	SYM.Quot.Right	'-x
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
kam	VFIN.Full.3.Sg.Past.Ind	kommen-v
wie	CONJ.Comp	wie-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
Schock	N.Reg.Nom.Sg.Masc	Schock-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
die	ART.Def.Nom.Pl.*	die-x
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Pl.Neut	die-x
GNU-Pakete	N.Reg.Nom.Pl.Neut	GNU-Paket-n
auf	APPR	auf-i
andere	ADJA.Pos.Acc.Pl.Neut	ander-j
Systeme	N.Reg.Acc.Pl.Neut	System-n
portierten	VFIN.Full.3.Pl.Past.Ind	portieren-v
<g/>
,	SYM.Pun.Comma	,-x
im	APPRART.Dat.Sg.Masc	in-i
Allgemeinen	ADJA.Pos.Dat.Sg.Masc	allgemein-j
mit	APPR	mit-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
arbeiten	VINF.Full	arbeiten-v
wollten	VFIN.Mod.3.Pl.Past.Ind	wollen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
Änderungen	N.Reg.Acc.Pl.Fem	Änderung-n
installiert	ADJD.Pos	installiert-j
zu	PART.Zu	zu-x
bekommen	VINF.Full	bekommen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Doch	CONJ.Coord	doch-c
diese	PRO.Dem.Attr.Nom.Pl.*	diese-p
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
System	N.Reg.Acc.Sg.Neut	System-n
entwickeln	VFIN.Full.3.Pl.Pres.Ind	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
in	APPR	in-i
erster	ADJA.Pos.Dat.Sg.Fem	erst-j
Linie	N.Reg.Dat.Sg.Fem	Linie-n
auf	APPR	auf-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
beruhte	VFIN.Full.3.Sg.Past.Ind	beruhen-v
<g/>
,	SYM.Pun.Comma	,-x
waren	VFIN.Aux.3.Pl.Past.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
erste	ADJA.Pos.Nom.Sg.Masc	erst-j
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
praktisch	ADJD.Pos	praktisch-j
immer	ADV	immer-a
noch	ADV	noch-a
der	ART.Def.Nom.Sg.Masc	die-x
einzige	ADJA.Pos.Nom.Sg.Masc	einzig-j
<g/>
)	SYM.Paren.Right	)-x
Personenkreis	N.Reg.Nom.Sg.Masc	Personenkreis-n
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
nicht	PART.Neg	nicht-x
bereit	ADJD.Pos	bereit-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
zu	PART.Zu	zu-x
arbeiten	VINF.Full	arbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Erfahrung	N.Reg.Nom.Sg.Fem	Erfahrung-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
zum	APPRART.Dat.Sg.Neut	zu-i
ersten	ADJA.Pos.Dat.Sg.Neut	erst-j
Mal	N.Reg.Dat.Sg.Neut	Mal-n
zeigte	VFIN.Full.3.Sg.Past.Ind	zeigen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Leute	N.Reg.Nom.Pl.*	Leute-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Version	N.Reg.Acc.Sg.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nannten	VFIN.Full.3.Pl.Past.Ind	nennen-v
und	CONJ.Coord	und-c
dass	CONJ.SubFin	dass-c
diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Verwirrung	N.Reg.Nom.Sg.Fem	Verwirrung-n
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
behinderte	VFIN.Full.3.Sg.Past.Ind	behindern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Darum	PROADV.Dem	darum-x
zu	PART.Zu	zu-x
bitten	VINF.Full	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
Antwort	N.Reg.Nom.Sg.Fem	Antwort-n
auf	APPR	auf-i
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Problem	N.Reg.Acc.Sg.Neut	Problem-n
und	CONJ.Coord	und-c
auf	APPR	auf-i
die	ART.Def.Acc.Pl.*	die-x
anderen	PRO.Indef.Subst.Acc.Pl.*	andere-p
durch	APPR	durch-i
die	ART.Def.Acc.Sg.Fem	die-x
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Bezeichnung	N.Reg.Acc.Sg.Fem	Bezeichnung-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
verursachten	ADJA.Pos.Acc.Pl.*	verursacht-j
Probleme	N.Reg.Acc.Pl.Neut	Problem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
so	ADV	so-a
lange	ADV	lange-a
gewartet	VPP.Full.Psp	warten-v
<g/>
,	SYM.Pun.Comma	,-x
bevor	CONJ.SubFin	bevor-c
darum	PROADV.Dem	darum-x
gebeten	VPP.Full.Psp	bitten-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#wait	N.Reg.Nom.Sg.Fem	#wait-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
eigentlich	ADV	eigentlich-a
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
1994	CARD	[number]-m
begannen	VFIN.Full.3.Pl.Past.Ind	beginnen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
mit	APPR	mit-i
Entwicklern	N.Reg.Dat.Pl.Masc	Entwickler-n
und	CONJ.Coord	und-c
Distributoren	N.Reg.Dat.Pl.Masc	Distributor-n
darüber	PROADV.Dem	darüber-x
unter	APPR	unter-i
vier	CARD	vier-m
Augen	N.Reg.Dat.Pl.Neut	Auge-n
zu	PART.Zu	zu-x
reden	VINF.Full	reden-v
und	CONJ.Coord	und-c
führten	VFIN.Full.3.Pl.Past.Ind	führen-v
1996	CARD	[number]-m
eine	ART.Indef.Acc.Sg.Fem	eine-x
öffentlichere	ADJA.Comp.Acc.Sg.Fem	öffentlicher-j
Kampagne	N.Reg.Acc.Sg.Fem	Kampagne-n
durch	PART.Verb	durch-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
solange	ADV	solange-a
weitermachen	VINF.Full	weitermachen-v
<g/>
,	SYM.Pun.Comma	,-x
solange	CONJ.SubFin	solange-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
notwendig	ADJD.Pos	notwendig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
die	ART.Def.Nom.Sg.Fem	die-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
[	SYM.Paren.Left	[-x
<g/>
Name	N.Reg.Nom.Sg.Masc	Name-n
<g/>
]	SYM.Paren.Right	]-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Konvention	N.Reg.Nom.Sg.Fem	Konvention-n
auf	APPR	auf-i
alle	PRO.Indef.Subst.Acc.Pl.*	alle-p
unter	APPR	unter-i
GPL	N.Name.Dat.Sg.*	GPL-n
lizenzierten	ADJA.Pos.Acc.Pl.Neut	lizenziert-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
angewendet	VPP.Full.Psp	anwenden-v
werden	VINF.Aux	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#allgpled	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nennen	VFIN.Full.1.Pl.Pres.Ind	nennen-v
niemals	ADV	niemals-a
einzelne	ADJA.Pos.Acc.Pl.Neut	einzeln-j
Programme	N.Reg.Acc.Pl.Neut	Programm-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
[	SYM.Paren.Left	[-x
<g/>
Name	N.Reg.Nom.Sg.Masc	Name-n
<g/>
]	SYM.Paren.Right	]-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
ein	ART.Indef.Nom.Sg.Neut	eine-x
GNU-Paket	N.Reg.Nom.Sg.Neut	GNU-Paket-n
<g/>
,	SYM.Pun.Comma	,-x
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
GNU	ADJD.Pos	GNU-j
[	SYM.Paren.Left	[-x
<g/>
Name	N.Reg.Nom.Sg.Masc	Name-n
<g/>
]	SYM.Paren.Right	]-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
aus	APPR	aus-i
vielen	PRO.Indef.Attr.Dat.Pl.Neut	viele-p
verschiedenen	ADJA.Pos.Dat.Pl.Neut	verschieden-j
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
hergestellt	VPP.Full.Psp	herstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.Neut	einige-p
der	ART.Def.Gen.Pl.Neut	die-x
Programme	N.Reg.Gen.Pl.Neut	Programm-n
in	APPR	in-i
GNU	N.Name.Dat.Sg.Neut	GNU-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
als	APPR	als-i
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
geschrieben	VPP.Full.Psp	schreiben-v
oder	CONJ.Coord	oder-c
ausdrücklich	ADJD.Pos	ausdrücklich-j
dazu	PROADV.Dem	dazu-x
beigetragen	VPP.Full.Psp	beitragen-v
<g/>
;	SYM.Pun.Sent	;-x
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
die	ART.Def.Nom.Pl.Neut	die-x
GNU-Pakete	N.Reg.Nom.Pl.Neut	GNU-Paket-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
verwenden	VFIN.Full.1.Pl.Pres.Ind	verwenden-v
in	APPR	in-i
deren	PRO.Dem.Attr.Dat.Pl.Masc	die-p
Namen	N.Reg.Dat.Pl.Masc	Name-n
häufig	ADJD.Pos	häufig-j
GNU	ADJD.Pos	GNU-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
liegt	VFIN.Full.3.Sg.Pres.Ind	liegen-v
an	APPR	an-i
den	ART.Def.Dat.Pl.Masc	die-x
Entwicklern	N.Reg.Dat.Pl.Masc	Entwickler-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
<g/>
,	SYM.Pun.Comma	,-x
zu	PART.Zu	zu-x
entscheiden	VINF.Full	entscheiden-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
beitragen	VINF.Full	beitragen-v
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	APPR	zu-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
GNU-Paket	N.Reg.Dat.Sg.Neut	GNU-Paket-n
machen	VINF.Full	machen-v
wollen	VFIN.Mod.3.Pl.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
entwickelt	VPP.Full.Psp	entwickeln-v
und	CONJ.Coord	und-c
möchten	VFIN.Mod.3.Pl.Past.Subj	mögen-v
daraus	PROADV.Dem	daraus-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
GNU-Paket	N.Reg.Acc.Sg.Neut	GNU-Paket-n
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
schreiben	VFIN.Full.3.Pl.Pres.Ind	schreiben-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
bitte	ADV	bitte-a
an	APPR	an-i
<	FM	<-x
<g/>
gnu@gnu.org	FM	gnu@gnu.org-x
<g/>
>	FM	>-x
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
bewerten	VINF.Full	bewerten-v
und	CONJ.Coord	und-c
entscheiden	VINF.Full	entscheiden-v
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
wollen	VFIN.Mod.1.Pl.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
nicht	PART.Neg	nicht-x
fair	ADJD.Pos	fair-j
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
GNU	ADJD.Pos	GNU-j
auf	APPR	auf-i
jedes	PRO.Indef.Attr.Acc.Sg.Neut	jede-p
einzelne	ADJA.Pos.Acc.Sg.Neut	einzeln-j
Programm	N.Reg.Acc.Sg.Neut	Programm-n
zu	PART.Zu	zu-x
legen	VINF.Full	legen-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
GPL	N.Name.Dat.Sg.Fem	GPL-n
freigegeben	VPP.Full.Psp	freigeben-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
schreiben	VINF.Full	schreiben-v
und	CONJ.Coord	und-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
GPL	N.Name.Dat.Sg.Fem	GPL-n
freigeben	VINF.Full	freigeben-v
<g/>
,	SYM.Pun.Comma	,-x
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
geschrieben	VPP.Full.Psp	schreiben-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
oder	CONJ.Coord	oder-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
für	APPR	für-i
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
geschrieben	VPP.Full.Psp	schreiben-v
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Beispielsweise	ADV	beispielsweise-a
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
,	SYM.Pun.Comma	,-x
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
unter	APPR	unter-i
der	ART.Def.Dat.Sg.Fem	die-x
GNU	N.Name.Dat.Sg.Fem	GNU-n
GPL	N.Reg.Nom.Sg.*	GPL-n
freigegeben	VPP.Full.Psp	freigeben-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
Linus	N.Name.Nom.Sg.Fem	Linus-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
nicht	PART.Neg	nicht-x
als	APPR	als-i
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
geschrieben	VPP.Full.Psp	schreiben-v
-	SYM.Pun.Hyph	--x
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
machte	VFIN.Full.3.Sg.Past.Ind	machen-v
die	ART.Def.Acc.Sg.Fem	die-x
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
unabhängig	ADJD.Pos	unabhängig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
etwas	ADV	etwas-a
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
GNU-Paket	N.Reg.Nom.Sg.Neut	GNU-Paket-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Projekt	N.Reg.Nom.Sg.Neut	GNU-Projekt-n
dafür	PROADV.Dem	dafür-x
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
bekommen	VINF.Full	bekommen-v
und	CONJ.Coord	und-c
ein	ART.Indef.Nom.Sg.Masc	eine-x
GNU	N.Reg.Nom.Sg.Masc	GNU-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
unangemessen	ADJD.Pos	unangemessen-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Gegensatz	N.Reg.Dat.Sg.Masc	Gegensatz-n
dazu	PROADV.Dem	dazu-x
verdienen	VFIN.Full.1.Pl.Pres.Ind	verdienen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
durchaus	ADV	durchaus-a
die	ART.Def.Acc.Sg.Fem	die-x
gesamte	ADJA.Pos.Acc.Sg.Fem	gesamt-j
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Acc.Sg.Neut	GNU-Betriebssystem-n
als	APPR	als-i
Ganzes	N.Reg.Acc.Sg.Neut	Ganze-n
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
auch	ADV	auch-a
nicht	PART.Neg	nicht-x
für	APPR	für-i
jedes	PRO.Indef.Attr.Acc.Sg.Neut	jede-p
einzelne	ADJA.Pos.Acc.Sg.Neut	einzeln-j
Programm	N.Reg.Acc.Sg.Neut	Programm-n
darin	PROADV.Dem	darin-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
existiert	VFIN.Full.3.Sg.Pres.Ind	existieren-v
aufgrund	APPR	aufgrund-i
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Entschlossenheit	N.Reg.Gen.Sg.Fem	Entschlossenheit-n
und	CONJ.Coord	und-c
Beharrlichkeit	N.Reg.Gen.Sg.Fem	Beharrlichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
beginnend	ADJD.Pos	beginnend-j
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1984	CARD	[number]-m
<g/>
,	SYM.Pun.Comma	,-x
viele	PRO.Indef.Attr.Acc.Pl.Neut	viele-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
bevor	PART.Verb	bevor-x
Linux	N.Reg.Acc.Sg.Neut	Linux-n
begonnen	VPP.Full.Psp	beginnen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
,	SYM.Pun.Comma	,-x
in	APPR	in-i
dem	PRO.Rel.Subst.Dat.Sg.Neut	die-p
Linux	N.Reg.Nom.Sg.Neut	Linux-n
populär	ADJD.Pos	populär-j
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
im	APPRART.Dat.Sg.Neut	in-i
Wesentlichen	ADJA.Pos.Dat.Sg.Neut	wesentlich-j
das	ART.Def.Nom.Sg.Neut	die-x
gleiche	ADJA.Pos.Nom.Sg.Neut	gleich-j
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Nom.Sg.Neut	GNU-Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
ganz	ADV	ganz-a
das	ART.Def.Nom.Sg.Neut	die-x
gleiche	ADJA.Pos.Nom.Sg.Neut	gleich-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
anderen	ADJA.Pos.Acc.Sg.Masc	ander-j
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
größtenteils	ADV	größtenteils-a
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	ART.Def.Nom.Sg.Neut	die-x
gleiche	ADJA.Pos.Nom.Sg.Neut	gleich-j
System	N.Reg.Nom.Sg.Neut	System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Variante	N.Reg.Nom.Sg.Fem	Variante-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Nom.Sg.Neut	Linux-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
weiterhin	ADV	weiterhin-a
überwiegend	ADJD.Pos	überwiegend-j
in	APPR	in-i
Derivaten	N.Reg.Dat.Pl.Neut	Derivat-n
dieses	PRO.Dem.Attr.Gen.Sg.Neut	diese-p
Systems	N.Reg.Gen.Sg.Neut	System-n
eingesetzt	VPP.Full.Psp	einsetzen-v
werden	VINF.Aux	werden-v
-	SYM.Pun.Hyph	--x
in	APPR	in-i
den	ART.Def.Dat.Pl.Fem	die-x
heutigen	ADJA.Pos.Dat.Pl.Fem	heutig-j
Versionen	N.Reg.Dat.Pl.Fem	Version-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU	N.Reg.Gen.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-Systems	N.Reg.Gen.Sg.Neut	Linux-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
diesen	PRO.Dem.Attr.Dat.Pl.Neut	diese-p
Systemen	N.Reg.Dat.Pl.Neut	System-n
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Identität	N.Reg.Acc.Sg.Fem	Identität-n
verleiht	VFIN.Full.3.Sg.Pres.Ind	verleihen-v
<g/>
,	SYM.Pun.Comma	,-x
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
GNU	N.Name.Nom.Sg.Neut	GNU-n
und	CONJ.Coord	und-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
im	APPRART.Dat.Sg.Masc	in-i
Mittelpunkt	N.Reg.Dat.Sg.Masc	Mittelpunkt-n
dieser	PRO.Dem.Attr.Gen.Pl.Neut	diese-p
Systeme	N.Reg.Gen.Pl.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
vor	APPR	vor-i
allem	PRO.Indef.Subst.Dat.Sg.Neut	alle-p
Linux	N.Reg.Acc.Sg.Neut	Linux-n
allein	ADV	allein-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
vieles	PRO.Indef.Subst.Nom.Sg.Neut	viele-p
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
aus	APPR	aus-i
Unix	N.Name.Dat.Sg.*	Unix-n
stammt	VFIN.Full.3.Sg.Pres.Ind	stammen-v
<g/>
,	SYM.Pun.Comma	,-x
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
GNU	N.Name.Nom.Sg.*	GNU-n
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
an	APPR	an-i
Unix	N.Name.Dat.Sg.*	Unix-n
mithilfe	APPR	mithilfe-i
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
geben	VINF.Full	geben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#unix	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Eigentlich	ADV	eigentlich-a
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
aus	APPR	aus-i
Unix	N.Name.Dat.Sg.*	Unix-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unix	N.Name.Nom.Sg.*	Unix-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
)	SYM.Paren.Right	)-x
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
illegal	ADJD.Pos	illegal-j
gewesen	VPP.Aux.Psp	sein-v
<g/>
,	SYM.Pun.Comma	,-x
etwas	ADV	etwas-a
aus	APPR	aus-i
seinem	PRO.Poss.Attr.Dat.Sg.Masc	seine-p
Quellcodes	N.Reg.Gen.Sg.Masc	Quellcode-n
in	APPR	in-i
GNU	N.Name.Dat.Sg.Neut	GNU-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
Zufall	N.Reg.Nom.Sg.Masc	Zufall-n
<g/>
;	SYM.Pun.Sent	;-x
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
GNU	ADJD.Pos	GNU-j
entwickelten	VFIN.Full.1.Pl.Past.Ind	entwickeln-v
<g/>
:	SYM.Pun.Colon	:-x
da	CONJ.SubFin	da-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Nutzung	N.Reg.Dat.Sg.Fem	Nutzung-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
(	SYM.Paren.Left	(-x
<g/>
oder	CONJ.Coord	oder-c
bei	APPR	bei-i
einem	PRO.Indef.Subst.Dat.Sg.Masc	eine-p
der	ART.Def.Gen.Pl.*	die-x
anderen	PRO.Indef.Subst.Gen.Pl.*	andere-p
damaligen	ADJA.Pos.Gen.Pl.Neut	damalig-j
Betriebssysteme	N.Reg.Gen.Pl.Neut	Betriebssystem-n
<g/>
)	SYM.Paren.Right	)-x
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
haben	VINF.Aux	haben-v
konnte	VFIN.Mod.3.Sg.Past.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
brauchten	VFIN.Full.1.Pl.Past.Ind	brauchen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
System	N.Reg.Acc.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
zu	PART.Zu	zu-x
ersetzen	VINF.Full	ersetzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
konnten	VFIN.Mod.1.Pl.Past.Ind	können-v
keine	PRO.Indef.Attr.Acc.Pl.Neut	keine-p
Programme	N.Reg.Acc.Pl.Neut	Programm-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
kopieren	VINF.Full	kopieren-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
einmal	ADV	einmal-a
Teile	N.Reg.Acc.Pl.Masc	Teil-n
davon	PART.Verb	davon-x
<g/>
;	SYM.Pun.Sent	;-x
alles	PRO.Indef.Subst.Nom.Sg.Neut	alle-p
musste	VFIN.Mod.3.Sg.Past.Ind	müssen-v
neu	ADJD.Pos	neu-j
geschrieben	VPP.Full.Psp	schreiben-v
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
Quellcode	N.Reg.Nom.Sg.Masc	Quellcode-n
in	APPR	in-i
GNU	N.Name.Dat.Sg.Neut	GNU-n
kommt	VFIN.Full.3.Sg.Pres.Ind	kommen-v
aus	APPR	aus-i
Unix	N.Reg.Dat.Sg.Masc	Unix-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Unix-kompatibles	ADJA.Pos.Nom.Sg.Neut	Unix-kompatibel-j
System	N.Reg.Nom.Sg.Neut	System-n
<g/>
;	SYM.Pun.Sent	;-x
deswegen	PROADV.Dem	deswegen-x
kommen	VFIN.Full.3.Pl.Pres.Ind	kommen-v
viele	PRO.Indef.Subst.Nom.Pl.Fem	viele-p
der	ART.Def.Gen.Pl.Fem	die-x
Ideen	N.Reg.Gen.Pl.Fem	Idee-n
und	CONJ.Coord	und-c
Spezifikationen	N.Reg.Gen.Pl.Fem	Spezifikation-n
GNUs	N.Name.Gen.Sg.*	GNUs-n
aus	APPR	aus-i
Unix	N.Name.Dat.Sg.*	Unix-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
für	APPR	für-i
GNU	N.Name.*.*.*	GNU-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
s	PRO.Pers.Subst.3.Acc.Sg.Neut	s-p
Nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
humorvolle	ADJA.Pos.Nom.Sg.Fem	humorvoll-j
Art	N.Reg.Nom.Sg.Fem	Art-n
der	ART.Def.Gen.Sg.Fem	die-x
Danksagung	N.Reg.Gen.Sg.Fem	Danksagung-n
an	APPR	an-i
Unix	N.Reg.Dat.Sg.Masc	Unix-n
und	CONJ.Coord	und-c
folgt	VFIN.Full.3.Sg.Pres.Ind	folgen-v
einer	ART.Indef.Dat.Sg.Fem	eine-x
Hackertradition	N.Reg.Dat.Sg.Fem	Hackertradition-n
von	APPR	von-i
rekursiven	ADJA.Pos.Dat.Pl.Neut	rekursiv-j
Akronymen	N.Reg.Dat.Pl.Neut	Akronym-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
70ern	N.Reg.Dat.Pl.Masc	70ern-n
begannen	VFIN.Full.3.Pl.Past.Ind	beginnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
erste	ADJA.Pos.Nom.Sg.Neut	erst-j
derartige	ADJA.Pos.Nom.Sg.Neut	derartig-j
rekursive	ADJA.Pos.Nom.Sg.Neut	rekursiv-j
Akronym	N.Reg.Nom.Sg.Neut	Akronym-n
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
TINT	N.Name.Dat.Sg.*	TINT-n
(	SYM.Paren.Left	(-x
<g/>
'	SYM.Quot.Right	'-x
<g/>
TINT	N.Name.Nom.Sg.*	TINT-n
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Nicht	PART.Neg	nicht-x
TECO	N.Name.Nom.Sg.*	TECO-n
<g/>
'	SYM.Quot.Right	'-x
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Autor	N.Reg.Nom.Sg.Masc	Autor-n
von	APPR	von-i
TINT	N.Name.Dat.Sg.*	TINT-n
schrieb	VFIN.Full.3.Sg.Past.Ind	schreiben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
andere	ADJA.Pos.Acc.Sg.Fem	ander-j
Implementierung	N.Reg.Acc.Sg.Fem	Implementierung-n
von	APPR	von-i
TECO	N.Name.Dat.Sg.Neut	TECO-n
(	SYM.Paren.Left	(-x
<g/>
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gab	VFIN.Full.3.Sg.Past.Ind	geben-v
bereits	ADV	bereits-a
viele	PRO.Indef.Subst.Acc.Pl.*	viele-p
für	APPR	für-i
verschiedene	ADJA.Pos.Acc.Pl.Neut	verschieden-j
Systeme	N.Reg.Acc.Pl.Neut	System-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
anstatt	CONJ.SubInf	anstatt-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
mit	APPR	mit-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
langweiligen	ADJA.Pos.Dat.Sg.Masc	langweilig-j
Namen	N.Reg.Dat.Sg.Masc	Name-n
wie	CONJ.Comp	wie-c
etwas-oder-anderes	ADJA.Comp.Acc.Sg.Neut	etwas-oder-ander-j
TECO	N.Reg.Acc.Sg.Neut	TECO-n
zu	PART.Zu	zu-x
bezeichnen	VINF.Full	bezeichnen-v
<g/>
,	SYM.Pun.Comma	,-x
dachte	VFIN.Full.3.Sg.Past.Ind	denken-v
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
an	APPR	an-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
cleveren	ADJA.Pos.Acc.Sg.Masc	clever-j
amüsanten	ADJA.Pos.Acc.Sg.Masc	amüsant-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
(	SYM.Paren.Left	(-x
<g/>
genau	ADJD.Pos	genau-j
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
Hacken	N.Reg.Acc.Pl.Fem	Hacke-n
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
<g/>
:	SYM.Pun.Colon	:-x
spielerische	ADJA.Pos.Nom.Sg.Fem	spielerisch-j
Klugheit	N.Reg.Nom.Sg.Fem	Klugheit-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
Hackern	N.Reg.Dat.Pl.Masc	Hacker-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Name	N.Reg.Nom.Sg.Masc	Name-n
so	ADV	so-a
sehr	ADV	sehr-a
gefallen	VPP.Full.Psp	fallen|gefallen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Ansatz	N.Reg.Acc.Sg.Masc	Ansatz-n
imitierten	VFIN.Full.1.Pl.Past.Ind	imitieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
zur	APPRART.Dat.Sg.Fem	zu-i
Tradition	N.Reg.Dat.Sg.Fem	Tradition-n
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
von	APPR	von-i
Grund	N.Reg.Dat.Sg.Masc	Grund-n
auf	APPR	auf-i
neu	ADJD.Pos	neu-j
geschriebenes	ADJA.Pos.Acc.Sg.Neut	geschrieben-j
Progamm	N.Reg.Acc.Sg.Neut	Progamm-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
irgendeinem	PRO.Indef.Attr.Dat.Sg.Neut	irgendeine-p
vorhandenen	ADJA.Pos.Dat.Sg.Neut	vorhanden-j
Programm	N.Reg.Dat.Sg.Neut	Programm-n
ähnlich	ADJD.Pos	ähnlich-j
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
(	SYM.Paren.Left	(-x
<g/>
nehmen	VFIN.Full.1.Pl.Pres.Ind	nehmen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
an	APPR	an-i
der	PRO.Dem.Subst.Dat.Sg.Fem	die-p
Name	N.Reg.Nom.Sg.Masc	Name-n
wäre	VFIN.Aux.1.Sg.Past.Subj	sein-v
Klever	N.Reg.Nom.Sg.Masc	Klever-n
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
diesem	PRO.Dem.Subst.Dat.Sg.Masc	diese-p
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
rekursiven	ADJA.Pos.Gen.Sg.Neut	rekursiv-j
Akronyms	N.Reg.Gen.Sg.Neut	Akronyms-n
zu	PART.Zu	zu-x
geben	VINF.Full	geben-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
MINK	N.Name.Nom.Sg.Neut	MINK-n
für	APPR	für-i
MINK	N.Name.Nom.Sg.Neut	MINK-n
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Nicht	PART.Neg	nicht-x
Klever	N.Reg.Nom.Sg.Masc	Klever-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
diesem	PRO.Dem.Attr.Dat.Sg.Masc	diese-p
Geist	N.Reg.Dat.Sg.Masc	Geist-n
nannten	VFIN.Full.1.Pl.Past.Ind	nennen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
unseren	PRO.Poss.Attr.Acc.Sg.Masc	unsre-p
Ersatz	N.Reg.Acc.Sg.Masc	Ersatz-n
für	APPR	für-i
Unix	N.Name.Nom.Sg.Masc	Unix-n
GNU	N.Name.Acc.Sg.Masc	GNU-n
<g/>
'	SYM.Quot.Right	'-x
Nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Historisch	ADJD.Pos	historisch-j
gesehen	VPP.Full.Psp	sehen-v
wollte	VFIN.Mod.3.Sg.Past.Ind	wollen-v
AT	N.Name.Nom.Sg.*	AT-n
<g/>
&	CONJ.Coord	&-c
<g/>
T	N.Name.Nom.Sg.*	t-n
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Rel.Subst.Nom.Pl.Fem	welche-p
Unix	N.Reg.Acc.Sg.Masc	Unix-n
entwickelten	VFIN.Full.3.Pl.Past.Ind	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
irgendjemand	PRO.Indef.Subst.Nom.Sg.Masc	irgendjemand-p
durch	APPR	durch-i
das	ART.Def.Acc.Sg.Neut	die-x
Verwenden	N.Reg.Acc.Sg.Neut	Verwenden-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
im	APPRART.Dat.Sg.Masc	in-i
Namen	N.Reg.Dat.Sg.Masc	Name-n
eines	ART.Indef.Gen.Sg.Neut	eine-x
ähnlichen	ADJA.Pos.Gen.Sg.Neut	ähnlich-j
Systems	N.Reg.Gen.Sg.Neut	System-n
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
gab	VFIN.Full.3.Sg.Past.Ind	geben-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
einmal	ADV	einmal-a
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
99	CARD	99-m
<g/>
%	N.Reg.*.*.Neut	%-n
<g/>
ig	ADJD.Pos	ig-j
kopierten	ADJA.Pos.Dat.Sg.Neut	kopiert-j
System	N.Reg.Dat.Sg.Neut	System-n
von	APPR	von-i
Unix	N.Reg.Dat.Sg.Masc	Unix-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
AT	N.Name.Nom.Sg.*	AT-n
<g/>
&	CONJ.Coord	&-c
<g/>
T	N.Name.Nom.Sg.*	t-n
drohte	VFIN.Full.3.Sg.Past.Ind	drohen-v
tatsächlich	ADJD.Pos	tatsächlich-j
jedermann	PRO.Indef.Subst.*.*.*	jedermann-p
zu	PART.Zu	zu-x
verklagen	VINF.Full	verklagen-v
<g/>
,	SYM.Pun.Comma	,-x
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
AT	N.Name.Dat.Sg.*	AT-n
<g/>
&	CONJ.Coord	&-c
<g/>
T	N.Name.Dat.Sg.*	t-n
auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
zollt	VFIN.Full.3.Sg.Pres.Ind	zollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
der	ART.Def.Nom.Sg.Masc	die-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
jede	PRO.Indef.Subst.Nom.Sg.Fem	jede-p
der	ART.Def.Gen.Pl.Fem	die-x
verschiedenen	ADJA.Pos.Gen.Pl.Fem	verschieden-j
modifizierten	ADJA.Pos.Gen.Pl.Fem	modifiziert-j
Versionen	N.Reg.Gen.Pl.Fem	Version-n
von	APPR	von-i
Unix	N.Name.Dat.Sg.*	Unix-n
(	SYM.Paren.Left	(-x
<g/>
alle	PRO.Indef.Attr.Acc.Pl.Fem	alle-p
proprietären	ADJA.Pos.Acc.Pl.Fem	proprietär-j
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
Unix	N.Name.Nom.Sg.*	Unix-n
<g/>
)	SYM.Paren.Right	)-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
völlig	ADJD.Pos	völlig-j
anderen	ADJA.Pos.Acc.Sg.Masc	ander-j
Namen	N.Reg.Acc.Sg.Masc	Name-n
hatten	VFIN.Aux.3.Pl.Past.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
der	PRO.Rel.Subst.Nom.Sg.Masc	die-p
nicht	PART.Neg	nicht-x
Unix	ADJD.Pos	Unix-j
einschloss	VFIN.Full.3.Sg.Past.Ind	einschließen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sollte	VFIN.Mod.3.Sg.Past.Subj	sollen-v
auch	ADV	auch-a
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
BSD	N.Name.Nom.Sg.*	BSD-n
gesagt	VPP.Full.Psp	sagen-v
werden	VINF.Aux	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#bsd	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nennen	VFIN.Full.1.Pl.Pres.Ind	nennen-v
die	ART.Def.Acc.Pl.Neut	die-x
BSD-Systeme	N.Reg.Acc.Pl.Neut	BSD-System-n
(	SYM.Paren.Left	(-x
<g/>
FreeBSD	N.Name.Nom.*.*	FreeBSD-n
usw.	ADV	usw.-a
<g/>
)	SYM.Paren.Right	)-x
nicht	PART.Neg	nicht-x
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
BSD-Systeme	N.Reg.Nom.Pl.Neut	BSD-System-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
dieser	PRO.Dem.Attr.Nom.Sg.Masc	diese-p
Begriff	N.Reg.Nom.Sg.Masc	Begriff-n
nicht	PART.Neg	nicht-x
zur	APPRART.Dat.Sg.Fem	zu-i
Geschichte	N.Reg.Dat.Sg.Fem	Geschichte-n
der	ART.Def.Gen.Pl.Neut	die-x
BSD-Systeme	N.Reg.Gen.Pl.Neut	BSD-System-n
passt	VFIN.Full.3.Sg.Pres.Ind	passen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
BSD-System	N.Reg.Nom.Sg.Neut	BSD-System-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
80ern	N.Reg.Dat.Pl.Masc	80ern-n
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
University	N.Name.Dat.Sg.Fem	University-n
of	N.Name.*.*.*	of-n
California	N.Name.Nom.Sg.Neut	California-n
<g/>
,	SYM.Pun.Comma	,-x
Berkeley	N.Name.Nom.Sg.Neut	Berkeley-n
<g/>
,	SYM.Pun.Comma	,-x
als	APPR	als-i
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
entwickelt	VPP.Full.Psp	entwickeln-v
und	CONJ.Coord	und-c
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
frühen	ADJA.Pos.Dat.Pl.Masc	früh-j
90ern	N.Reg.Dat.Pl.Masc	90ern-n
frei	ADJD.Pos	frei-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
heute	ADV	heute-a
existierendes	ADJA.Pos.Nom.Sg.Neut	existierend-j
freies	ADJA.Pos.Nom.Sg.Neut	frei-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nahezu	ADV	nahezu-a
sicher	ADJD.Pos	sicher-j
entweder	CONJ.Coord	entweder-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Variante	N.Reg.Nom.Sg.Fem	Variante-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
oder	CONJ.Coord	oder-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
Art	N.Reg.Nom.Sg.Fem	Art-n
BSD-System	N.Reg.Nom.Sg.Neut	BSD-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Manchmal	ADV	manchmal-a
fragen	VFIN.Full.3.Pl.Pres.Ind	fragen-v
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
ob	CONJ.SubFin	ob-c
auch	ADV	auch-a
BSD	N.Name.Nom.Sg.*	BSD-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Variante	N.Reg.Acc.Sg.Fem	Variante-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Nein	PART.Ans	nein-x
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
BSD-Entwickler	N.Reg.Nom.Pl.Masc	BSD-Entwickler-n
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
dazu	PROADV.Dem	dazu-x
inspiriert	VPP.Full.Psp	inspirieren-v
<g/>
,	SYM.Pun.Comma	,-x
ihren	PRO.Poss.Attr.Acc.Sg.Masc	ihre-p
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
als	APPR	als-i
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
am	APPRART.Dat.Sg.Neut	an-i
Beispiel	N.Reg.Dat.Sg.Neut	Beispiel-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
herzustellen	VINF.Full.zu	herstellen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
explizite	ADJA.Pos.Acc.Pl.Masc	explizit-j
Appelle	N.Reg.Acc.Pl.Masc	Appell-n
von	APPR	von-i
GNU-Aktivisten	N.Reg.Dat.Pl.Masc	GNU-Aktivist-n
halfen	VFIN.Full.3.Pl.Past.Ind	helfen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
davon	PROADV.Dem	davon-x
zu	PART.Zu	zu-x
überzeugen	VINF.Full	überzeugen-v
zu	PART.Zu	zu-x
beginnen	VINF.Full	beginnen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
der	ART.Def.Nom.Sg.Masc	die-x
Quellcode	N.Reg.Nom.Sg.Masc	Quellcode-n
hatte	VFIN.Aux.3.Sg.Past.Ind	haben-v
nur	ADV	nur-a
wenig	PRO.Indef.Attr.*.*.*	wenig-p
Gemeinsamkeiten	N.Reg.Acc.Pl.Fem	Gemeinsamkeit-n
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
BSD-Systeme	N.Reg.Nom.Pl.Neut	BSD-System-n
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
heute	ADV	heute-a
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
GNU-Pakete	N.Reg.Acc.Pl.Neut	GNU-Paket-n
<g/>
,	SYM.Pun.Comma	,-x
genau	ADJD.Pos	genau-j
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
und	CONJ.Coord	und-c
seine	PRO.Poss.Attr.Nom.Pl.Fem	seine-p
Varianten	N.Reg.Nom.Pl.Fem	Variante-n
einige	PRO.Indef.Attr.Acc.Pl.Neut	einige-p
BSD-Programme	N.Reg.Acc.Pl.Neut	BSD-Programm-n
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
<g/>
;	SYM.Pun.Sent	;-x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
jedoch	ADV	jedoch-a
<g/>
,	SYM.Pun.Comma	,-x
alles	PRO.Indef.Subst.Nom.Sg.Neut	alle-p
in	APPR	in-i
allem	PRO.Indef.Subst.Dat.Sg.Neut	alle-p
<g/>
,	SYM.Pun.Comma	,-x
zwei	CARD	zwei-m
verschiedene	ADJA.Pos.Nom.Pl.Neut	verschieden-j
Systeme	N.Reg.Nom.Pl.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
getrennt	ADJD.Pos	getrennt-j
voneinander	ADV	voneinander-a
entwickelten	VFIN.Full.3.Pl.Past.Ind	entwickeln-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Masc	die-x
BSD-Entwickler	N.Reg.Nom.Pl.Masc	BSD-Entwickler-n
schrieben	VFIN.Full.3.Pl.Past.Ind	schreiben-v
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
und	CONJ.Coord	und-c
fügten	VFIN.Full.3.Pl.Past.Ind	fügen-v
ihn	PRO.Pers.Subst.3.Acc.Sg.Masc	sie-p
dem	ART.Def.Dat.Sg.Neut	die-x
GNU-System	N.Reg.Dat.Sg.Neut	GNU-System-n
hinzu	PART.Verb	hinzu-x
<g/>
,	SYM.Pun.Comma	,-x
daher	PROADV.Dem	daher-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
Name	N.Reg.Nom.Sg.Masc	Name-n
wie	CONJ.Comp	wie-c
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
BSD	N.Name.Nom.Sg.*	BSD-n
der	ART.Def.Dat.Sg.Fem	die-x
Situation	N.Reg.Dat.Sg.Fem	Situation-n
nicht	PART.Neg	nicht-x
gerecht	ADJD.Pos	gerecht-j
werden	VINF.Aux	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Zusammenhang	N.Reg.Nom.Sg.Masc	Zusammenhang-n
zwischen	APPR	zwischen-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
GNU	N.Reg.Dat.Sg.Fem	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
viel	ADV	viel-a
enger	ADJD.Comp	eng-j
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
deshalb	PROADV.Dem	deshalb-x
auch	ADV	auch-a
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
angemessen	ADJD.Pos	angemessen-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
Version	N.Reg.Acc.Sg.Fem	Version-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
den	ART.Def.Acc.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Acc.Sg.Masc	Betriebssystemkern-n
von	APPR	von-i
NetBSD	N.Name.Dat.Sg.*	NetBSD-n
verwendet	VPP.Full.Psp	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Seine	PRO.Poss.Attr.Nom.Pl.Masc	seine-p
Entwickler	N.Reg.Nom.Pl.Masc	Entwickler-n
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
Debian	N.Name.Nom.Sg.Neut	Debian-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
NetBSD	N.Name.Nom.Sg.Neut	NetBSD-n
<g/>
,	SYM.Pun.Comma	,-x
aber	ADV	aber-a
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
KernvonNetBSD	N.Name.Nom.Sg.*	KernvonNetBSD-n
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
zutreffender	ADJD.Comp	zutreffend-j
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
NetBSD	N.Name.Nom.Sg.*	NetBSD-n
ein	ART.Indef.Nom.Sg.Neut	eine-x
komplettes	ADJA.Pos.Nom.Sg.Neut	komplett-j
System	N.Reg.Nom.Sg.Neut	System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
der	ART.Def.Nom.Sg.Masc	die-x
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Neut	keine-p
BSD-System	N.Reg.Nom.Sg.Neut	BSD-System-n
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
meiste	PRO.Indef.Subst.Nom.Sg.Neut	meiste-p
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
dem	ART.Def.Dat.Sg.*	die-x
GNU	N.Name.Dat.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Name.Acc.Sg.*	Linux-System-n
gleicht	VFIN.Full.3.Sg.Pres.Ind	gleichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
GNU-Dienstprogramme	N.Reg.Nom.Pl.Neut	GNU-Dienstprogramm-n
unter	APPR	unter-i
Windows	N.Name.Dat.Sg.*	Windows-n
installiert	VPP.Full.Psp	installieren-v
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
bedeutet	VFIN.Full.3.Sg.Pres.Ind	bedeuten-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ein	ART.Indef.Acc.Sg.Neut	eine-x
GNU	N.Reg.Acc.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Windows-System	N.Reg.Nom.Sg.Neut	Windows-System-n
zu	PART.Zu	zu-x
betreiben	VINF.Full	betreiben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#othersys	ADJA.Pos.Nom.Sg.Neut	#othersys-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Nicht	PART.Neg	nicht-x
in	APPR	in-i
demselben	PRO.Dem.Attr.Dat.Sg.Masc	dieselbe-p
Sinne	N.Reg.Dat.Sg.Masc	Sinn-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
unter	APPR	unter-i
GNU	TRUNC.Noun	GNU-x
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
verstehen	VINF.Full	verstehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.Neut	die-x
Dienstprogramme	N.Reg.Nom.Pl.Neut	Dienstprogramm-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nur	ADV	nur-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Teil	N.Reg.Nom.Sg.Masc	Teil-n
der	ART.Def.Gen.Pl.Neut	die-x
GNU-Software	N.Reg.Gen.Pl.Neut	GNU-Software-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
wiederum	ADV	wiederum-a
nur	ADV	nur-a
ein	ART.Indef.Nom.Sg.Masc	eine-x
Teil	N.Reg.Nom.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
darunter	PROADV.Dem	darunter-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
immer	ADV	immer-a
noch	ADV	noch-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
anderes	ADJA.Pos.Acc.Sg.Neut	ander-j
<g/>
,	SYM.Pun.Comma	,-x
komplettes	ADJA.Pos.Acc.Sg.Neut	komplett-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Quellode	N.Reg.Acc.Sg.Masc	Quellode-n
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
gemein	ADJD.Pos	gemein-j
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Alles	PRO.Indef.Subst.Nom.Sg.Neut	alle-p
in	APPR	in-i
allem	PRO.Indef.Subst.Dat.Sg.Neut	alle-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
eine	ART.Indef.Nom.Sg.Fem	eine-x
ganz	ADV	ganz-a
andere	ADJA.Pos.Nom.Sg.Fem	ander-j
Situation	N.Reg.Nom.Sg.Fem	Situation-n
als	CONJ.Comp	als-c
bei	APPR	bei-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nicht	PART.Neg	nicht-x
ohne	APPR	ohne-i
GNU	ADJD.Pos	GNU-j
verwendet	VPP.Full.Psp	verwenden-v
werden	VINF.Aux	werden-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#justlinux	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
von	APPR	von-i
sich	PRO.Refl.Subst.3.Dat.Sg.*	sie-p
selbst	ADV	selbst-a
oder	CONJ.Coord	oder-c
mit	APPR	mit-i
kleinen	ADJA.Pos.Dat.Pl.Neut	klein-j
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Programmen	N.Reg.Dat.Pl.Neut	Programm-n
in	APPR	in-i
einigen	PRO.Indef.Attr.Dat.Pl.Neut	einige-p
Geräten	N.Reg.Dat.Pl.Neut	Gerät-n
verwendet	VPP.Full.Psp	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
kleinen	ADJA.Pos.Nom.Pl.Neut	klein-j
Softwaresysteme	N.Reg.Nom.Pl.Neut	Softwaresystem-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
vom	APPRART.Dat.Sg.Neut	von-i
GNU	N.Reg.Dat.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
weit	ADJD.Pos	weit-j
entfernt	VPP.Full.Psp	entfernen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Benutzer	N.Reg.Nom.Pl.Masc	Benutzer-n
installieren	VFIN.Full.3.Pl.Pres.Ind	installieren-v
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
beispielsweise	ADV	beispielsweise-a
nicht	PART.Neg	nicht-x
auf	APPR	auf-i
PCs	N.Reg.Acc.Pl.Masc	PC-n
und	CONJ.Coord	und-c
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
auch	ADV	auch-a
ziemlich	ADV	ziemlich-a
enttäuschend	ADJD.Pos	enttäuschend-j
finden	VINF.Full	finden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
hilfreich	ADJD.Pos	hilfreich-j
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Geräte	N.Reg.Nom.Pl.Neut	Gerät-n
ausschließlich	ADV	ausschließlich-a
Linux	N.Reg.Acc.Sg.Neut	Linux-n
ausführen	VINF.Full	ausführen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
deutlich	ADJD.Pos	deutlich-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
verschieden	ADJD.Pos	verschieden-j
diese	PRO.Dem.Attr.Nom.Pl.Fem	diese-p
kleinen	ADJA.Pos.Nom.Pl.Fem	klein-j
Plattformen	N.Reg.Nom.Pl.Fem	Plattform-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
viel	ADV	viel-a
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
erforderlich	ADJD.Pos	erforderlich-j
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
GNU	N.Reg.Acc.Pl.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#howmuch	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
'	SYM.Quot.Right	'-x
<g/>
Wie	CONJ.Comp	wie-c
viel	ADV	viel-a
<g/>
'	SYM.Quot.Right	'-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
sinnvolle	ADJA.Pos.Nom.Sg.Fem	sinnvoll-j
Frage	N.Reg.Nom.Sg.Fem	Frage-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
genaue	ADJA.Pos.Acc.Pl.Fem	genau-j
Grenzen	N.Reg.Acc.Pl.Fem	Grenze-n
aufweist	VFIN.Full.3.Sg.Pres.Ind	aufweisen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.*	GNU-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
von	APPR	von-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
gepflegtes	ADJA.Pos.Nom.Sg.Neut	gepflegt-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
umfasst	VFIN.Full.3.Sg.Pres.Ind	umfassen-v
weit	ADJD.Pos	weit-j
mehr	PRO.Indef.Subst.*.*.*	mehr-p
als	CONJ.Comp	als-c
nur	ADV	nur-a
die	ART.Def.Nom.Pl.Neut	die-x
GNU-Softwarepakete	N.Reg.Nom.Pl.Neut	GNU-Softwarepaket-n
(	SYM.Paren.Left	(-x
<g/>
von	APPR	von-i
denen	PRO.Rel.Subst.Dat.Pl.Neut	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
genaue	ADJA.Pos.Acc.Sg.Fem	genau-j
Aufstellung	N.Reg.Acc.Sg.Fem	Aufstellung-n
haben	VINF.Aux	haben-v
<g/>
)	SYM.Paren.Right	)-x
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
ständig	ADJD.Pos	ständig-j
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
weitere	ADJA.Comp.Nom.Pl.Neut	weit-j
Pakete	N.Reg.Nom.Pl.Neut	Paket-n
hinzugefügt	VPP.Full.Psp	hinzufügen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Trotz	APPR	trotz-i
dieser	PRO.Dem.Attr.Gen.Pl.Fem	diese-p
Änderungen	N.Reg.Gen.Pl.Fem	Änderung-n
bleibt	VFIN.Full.3.Sg.Pres.Ind	bleiben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
das	ART.Def.Nom.Sg.Neut	die-x
Hinzufügen	N.Reg.Nom.Sg.Neut	Hinzufügen-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
führt	VFIN.Full.3.Sg.Pres.Ind	führen-v
im	APPRART.Dat.Sg.Neut	in-i
Ergebnis	N.Reg.Dat.Sg.Neut	Ergebnis-n
zu	APPR	zu-i
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
einen	ART.Indef.Acc.Sg.Masc	eine-x
Teil	N.Reg.Acc.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Systems	N.Reg.Gen.Sg.Neut	GNU-System-n
verwendet	VPP.Full.Psp	verwenden-v
und	CONJ.Coord	und-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
Teil	N.Reg.Acc.Sg.Masc	Teil-n
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
aussagekräftige	ADJA.Pos.Acc.Sg.Fem	aussagekräftig-j
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
'	SYM.Quot.Right	'-x
<g/>
wie	PROADV.Inter	wie-x
viel	PRO.Indef.Attr.*.*.*	viel-p
<g/>
'	SYM.Quot.Right	'-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
verwendet	VFIN.Full.3.Sg.Pres.Ind	verwenden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Betrachtet	VFIN.Full.3.Sg.Pres.Ind	betrachten-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
auf	APPR	auf-i
der	ART.Def.Dat.Sg.Fem	die-x
Ebene	N.Reg.Dat.Sg.Fem	Ebene-n
der	ART.Def.Gen.Pl.Neut	die-x
Pakete	N.Reg.Gen.Pl.Neut	Paket-n
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
wesentliches	ADJA.Pos.Acc.Sg.Neut	wesentlich-j
Paket	N.Reg.Acc.Sg.Neut	Paket-n
im	APPRART.Dat.Sg.Neut	in-i
GNU	N.Reg.Dat.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Aufnahme	N.Reg.Nom.Sg.Fem	Aufnahme-n
von	APPR	von-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
wesentlichen	ADJA.Pos.Dat.Sg.Neut	wesentlich-j
GNU-Paket	N.Reg.Dat.Sg.Neut	GNU-Paket-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ausreichend	ADJD.Pos	ausreichend-j
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Bitte	N.Reg.Dat.Sg.Fem	Bitte-n
nach	APPR	nach-i
gleicher	ADJA.Pos.Dat.Sg.Fem	gleich-j
Erwähnung	N.Reg.Dat.Sg.Fem	Erwähnung-n
zu	PART.Zu	zu-x
rechtfertigen	VINF.Full	rechtfertigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
komplette	ADJA.Pos.Acc.Pl.Neut	komplett-j
Linux-Systeme	N.Reg.Acc.Pl.Neut	Linux-System-n
[	SYM.Paren.Left	[-x
<g/>
sic	ITJ	sic-x
<g/>
]	SYM.Paren.Right	]-x
ohne	APPR	ohne-i
GNU	N.Name.Acc.Sg.Fem	GNU-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#linuxsyswithoutgnu	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
Komplettsysteme	N.Reg.Acc.Pl.Neut	Komplettsystem-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
Linux	N.Reg.Acc.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
GNU	ADJD.Pos	GNU-j
enthalten	VFIN.Full.3.Pl.Pres.Ind	enthalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Android	N.Name.Nom.Sg.*	Android-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Beispiel	N.Reg.Nom.Sg.Neut	Beispiel-n
dafür	PROADV.Dem	dafür-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
Fehler	N.Reg.Nom.Sg.Masc	Fehler-n
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Systeme	N.Reg.Acc.Pl.Neut	System-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
genauso	ADV	genauso-a
wie	CONJ.Comp	wie-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ein	ART.Indef.Nom.Sg.Masc	eine-x
Fehler	N.Reg.Nom.Sg.Masc	Fehler-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.*	GNU-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
System	N.Reg.Acc.Sg.Neut	System-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Android	N.Name.Nom.Sg.*	Android-n
unterscheidet	VFIN.Full.3.Sg.Pres.Ind	unterscheiden-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
vom	APPRART.Dat.Sg.Neut	von-i
GNU	N.Reg.Dat.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
sehr	ADV	sehr-a
-	SYM.Pun.Hyph	--x
weil	CONJ.SubFin	weil-c
die	ART.Def.Nom.Pl.*	die-x
beiden	PRO.Indef.Subst.Nom.Pl.*	beide-p
sehr	ADV	sehr-a
wenig	PRO.Indef.Attr.*.*.*	wenig-p
Quellcode	N.Reg.Acc.Sg.Masc	Quellcode-n
gemein	ADJD.Pos	gemein-j
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Tatsächlich	ADJD.Pos	tatsächlich-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
einzige	PRO.Indef.Subst.Nom.Sg.Neut	einzige-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
sie	PRO.Pers.Subst.3.Nom.Sg.Fem	sie-p
gemein	ADJD.Pos	gemein-j
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
gesamte	ADJA.Pos.Acc.Sg.Neut	gesamt-j
GNU	N.Reg.Acc.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Nom.Sg.Neut	Linux-System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
für	APPR	für-i
notwendig	ADJD.Pos	notwendig-j
erachten	VINF.Full	erachten-v
<g/>
,	SYM.Pun.Comma	,-x
Dinge	N.Reg.Acc.Pl.Neut	Ding-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
wie	CONJ.Coord	wie-c
<g/>
:	SYM.Pun.Colon	:-x
""	ADJA.Pos.Nom.Sg.Masc	""-j
<g/>
Android	N.Reg.Nom.Sg.Masc	Android-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
die	ART.Def.Nom.Pl.Neut	die-x
üblichen	ADJA.Pos.Nom.Pl.Neut	üblich-j
Linux	N.Reg.Nom.Sg.Neut	Linux-n
[	SYM.Paren.Left	[-x
<g/>
sic	ITJ	sic-x
<g/>
]	SYM.Paren.Right	]-x
<g/>
-	SYM.Pun.Hyph	--x
<g/>
Bibliotheken	N.Reg.Acc.Pl.Fem	Bibliothek-n
und	CONJ.Coord	und-c
-	SYM.Pun.Hyph	--x
<g/>
Dienstprogramme	N.Reg.Nom.Pl.Neut	Dienstprogramm-n
[	SYM.Paren.Left	[-x
<g/>
also	ADV	also-a
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
<g/>
]	SYM.Paren.Right	]-x
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
</s>
</align>
<align>
<s>
Android	N.Name.Nom.Sg.*	Android-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
ebenso	ADV	ebenso-a
viel	PRO.Indef.Subst.*.*.*	viel-p
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
wie	CONJ.Comp	wie-c
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Android	N.Name.Nom.Sg.*	Android-n
ersetzt	VFIN.Full.3.Sg.Pres.Ind	ersetzen-v
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
stattdessen	PROADV.Dem	stattdessen-x
durch	APPR	durch-i
Google-Software	N.Reg.Acc.Sg.Fem	Google-Software-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
ganz	ADV	ganz-a
anders	ADV	anders-a
funktioniert	VFIN.Full.3.Sg.Pres.Ind	funktionieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Acc.Sg.Neut	was-p
Android	N.Name.Nom.Sg.*	Android-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
unterscheidet	VFIN.Full.3.Sg.Pres.Ind	unterscheiden-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Nichtvorhandensein	N.Reg.Nom.Sg.Neut	Nichtvorhandensein-n
von	APPR	von-i
GNU	N.Name.Dat.Sg.*	GNU-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
richtig	ADJD.Pos	richtig-j
'	SYM.Quot.Right	'-x
<g/>
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
'	SYM.Quot.Right	'-x
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auf	APPR	auf-i
GNU	N.Reg.Acc.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
Android	N.Reg.Acc.Sg.Neut	Android-n
bezieht	VFIN.Full.3.Sg.Pres.Ind	beziehen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#usegnulinuxandandroidlinuxsyswithoutgnu	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Ganz	ADV	ganz-a
und	CONJ.Coord	und-c
gar	ADV	gar-a
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Sg.Fem	diese-p
Verwendung	N.Reg.Nom.Sg.Fem	Verwendung-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
so	ADV	so-a
vorbelastet	ADJD.Pos	vorbelastet-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
eigentlich	ADV	eigentlich-a
gemeinte	ADJA.Pos.Nom.Sg.Fem	gemeint-j
Bedeutung	N.Reg.Nom.Sg.Fem	Bedeutung-n
nicht	PART.Neg	nicht-x
verstanden	VPP.Full.Psp	verstehen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Nom.Sg.Fem	Öffentlichkeit-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
wohl	ADV	wohl-a
als	APPR	als-i
sehr	ADV	sehr-a
sonderbar	ADJD.Pos	sonderbar-j
empfinden	VFIN.Full.3.Pl.Pres.Ind	empfinden-v
von	APPR	von-i
Android	N.Reg.Dat.Sg.Masc	Android-n
als	APPR	als-i
'	SYM.Quot.Right	'-x
<g/>
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
'	SYM.Quot.Right	'-x
zu	PART.Zu	zu-x
sprechen	VINF.Full	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
wie	CONJ.Comp	wie-c
mit	ADV	mit-a
jemanden	PRO.Indef.Subst.Acc.Sg.Masc	jemand-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
Unterhaltung	N.Reg.Acc.Sg.Fem	Unterhaltung-n
führen	VINF.Full	führen-v
und	CONJ.Coord	und-c
anschließend	ADJD.Pos	anschließend-j
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
mit	APPR	mit-i
den	ART.Def.Dat.Pl.Neut	die-x
Eingeweiden	N.Reg.Dat.Pl.Neut	Eingeweide-n
oder	CONJ.Coord	oder-c
dem	ART.Def.Dat.Sg.Neut	die-x
Kreislaufsystem	N.Reg.Dat.Sg.Neut	Kreislaufsystem-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Person	N.Reg.Gen.Sg.Fem	Person-n
unterhielt	VFIN.Full.3.Sg.Past.Ind	unterhalten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sollte	VFIN.Mod.3.Sg.Past.Subj	sollen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
dabei	PROADV.Dem	dabei-x
tatsächlich	ADJD.Pos	tatsächlich-j
um	APPR	um-i
GNU	N.Reg.Acc.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
handeln	VINF.Full	handeln-v
<g/>
,	SYM.Pun.Comma	,-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
die	ART.Def.Nom.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Nom.Sg.Fem	Öffentlichkeit-n
die	ART.Def.Acc.Sg.Fem	die-x
Vorstellung	N.Reg.Acc.Sg.Fem	Vorstellung-n
von	N.Name.*.*.*	von-n
'	SYM.Quot.Right	'-x
<g/>
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
'	SYM.Quot.Right	'-x
-	SYM.Pun.Hyph	--x
neben	APPR	neben-i
dem	ART.Def.Dat.Sg.Masc	die-x
üblichen	ADJA.Pos.Dat.Sg.Fem	üblich-j
Missverständnis	N.Reg.Dat.Sg.Fem	Missverständnis-n
hinaus	APZR	hinaus-x
-	SYM.Pun.Hyph	--x
verstehen	VINF.Full	verstehen-v
<g/>
:	SYM.Pun.Colon	:-x
an	APPR	an-i
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
denkend	ADJD.Pos	denkend-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Gebrauch	N.Reg.Nom.Sg.Masc	Gebrauch-n
von	APPR	von-i
Android	N.Name.Dat.Sg.*	Android-n
und	CONJ.Coord	und-c
GNU	N.Name.Dat.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
völlig	ADJD.Pos	völlig-j
verschieden	ADJD.Pos	verschieden-j
<g/>
,	SYM.Pun.Comma	,-x
so	ADV	so-a
unterschiedlich	ADJD.Pos	unterschiedlich-j
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
Auto	N.Reg.Nom.Sg.Neut	Auto-n
<g/>
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
Fahrradfahren	VINF.Full	fahrradfahren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Tatsache	N.Reg.Nom.Sg.Fem	Tatsache-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Pl.Masc	die-x
ersten	ADJA.Pos.Nom.Pl.Masc	erst-j
beiden	PRO.Indef.Attr.Gen.Pl.Neut	beide-p
erstgenannten	ADJA.Pos.Gen.Sg.Neut	erstgenannt-j
Linux	N.Reg.Gen.Sg.Neut	Linux-n
enthalten	VFIN.Full.3.Pl.Pres.Ind	enthalten-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
für	APPR	für-i
deren	PRO.Poss.Attr.Acc.Sg.Masc	die-p
Gebrauch	N.Reg.Acc.Sg.Masc	Gebrauch-n
irrelevant	ADJD.Pos	irrelevant-j
<g/>
,	SYM.Pun.Comma	,-x
ebenso	ADV	ebenso-a
wie	CONJ.Comp	wie-c
die	ART.Def.Nom.Sg.Fem	die-x
Tatsache	N.Reg.Nom.Sg.Fem	Tatsache-n
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
sowohl	CONJ.Coord	sowohl-c
ein	ART.Indef.Nom.Sg.Neut	eine-x
Auto	N.Reg.Nom.Sg.Neut	Auto-n
und	CONJ.Coord	und-c
als	APPR	als-i
auch	ADV	auch-a
ein	ART.Indef.Nom.Sg.Neut	eine-x
Fahrrad	N.Reg.Nom.Sg.Neut	Fahrrad-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
Metallkonstruktion	N.Reg.Acc.Sg.Fem	Metallkonstruktion-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
Gebrauch	N.Reg.Acc.Sg.Masc	Gebrauch-n
jener	PRO.Indef.Subst.Gen.Pl.*	jene-p
beiden	PRO.Indef.Subst.Gen.Pl.*	beide-p
irrelevant	ADJD.Pos	irrelevant-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
über	APPR	über-i
Autos	N.Reg.Acc.Pl.Neut	Auto-n
und	CONJ.Coord	und-c
Fahrräder	N.Reg.Acc.Pl.Neut	Fahrrad-n
sprechen	VINF.Full	sprechen-v
mag	VFIN.Mod.3.Sg.Pres.Ind	mögen-v
<g/>
,	SYM.Pun.Comma	,-x
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
von	APPR	von-i
"	SYM.Quot.Left	"-x
<g/>
mit	APPR	mit-i
Metallgegenständen	N.Reg.Dat.Pl.Masc	Metallgegenstand-n
mitfahren	VFIN.Full.3.Pl.Pres.Ind	mitfahren-v
<g/>
"	SYM.Quot.Left	"-x
sprechen	VINF.Full	sprechen-v
-	SYM.Pun.Hyph	--x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
denn	CONJ.Comp	denn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
spielt	VFIN.Full.3.Sg.Pres.Ind	spielen-v
mit	APPR	mit-i
der	ART.Def.Dat.Sg.Fem	die-x
Leserschaft	N.Reg.Dat.Sg.Fem	Leserschaft-n
und	CONJ.Coord	und-c
würde	VFIN.Aux.3.Sg.Past.Subj	werden-v
"	SYM.Quot.Left	"-x
<g/>
mit	APPR	mit-i
Autos	N.Reg.Dat.Pl.Neut	Auto-n
und	CONJ.Coord	und-c
Fahrräder	N.Reg.Acc.Pl.Neut	Fahrrad-n
<g/>
"	SYM.Quot.Left	"-x
sagen	VINF.Full	sagen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
einfachste	ADJA.Sup.Nom.Sg.Fem	einfach-j
Möglichkeit	N.Reg.Nom.Sg.Fem	Möglichkeit-n
über	APPR	über-i
GNU	N.Reg.Acc.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
Android	N.Reg.Acc.Sg.Neut	Android-n
zu	PART.Zu	zu-x
sprechen	VINF.Full	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Verwendung	N.Reg.Nom.Sg.Fem	Verwendung-n
von	N.Name.*.*.*	von-n
mit	APPR	mit-i
GNU	N.Name.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
Android	N.Reg.Dat.Sg.Neut	Android-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
nicht	PART.Neg	nicht-x
einfach	ADV	einfach-a
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
GNU	N.Name.Nom.Sg.*	GNU-n
genannt	VPP.Full.Psp	nennen-v
und	CONJ.Coord	und-c
damit	PROADV.Dem	damit-x
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.*.*.*	Torvalds-n
<g/>
'	SYM.Quot.Right	'-x
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
als	APPR	als-i
Aushängeschild	N.Reg.Acc.Sg.Neut	Aushängeschild-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Gen.Sg.Fem	Gemeinschaft-n
gestärkt	VPP.Full.Psp	stärken-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#helplinus	ADJA.Pos.Nom.Sg.Neut	#helplinus-j
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.Gen.Sg.Masc	Torvalds-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
"	SYM.Quot.Left	"-x
<g/>
Aushängeschild	N.Reg.Nom.Sg.Neut	Aushängeschild-n
<g/>
"	SYM.Quot.Left	"-x
(	SYM.Paren.Left	(-x
<g/>
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Wortwahl	N.Reg.Nom.Sg.Fem	Wortwahl-n
anderer	ADJA.Pos.Gen.Pl.Masc	ander-j
Menschen	N.Reg.Gen.Pl.Masc	Mensch-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
<g/>
)	SYM.Paren.Right	)-x
für	APPR	für-i
seine	PRO.Poss.Attr.Acc.Pl.Neut	seine-p
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sein	PRO.Poss.Attr.Nom.Sg.Neut	seine-p
Ziel	N.Reg.Nom.Sg.Neut	Ziel-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
populärer	ADJD.Comp	populär-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
glauben	VINF.Full	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
dessen	PRO.Dem.Subst.Gen.Sg.Masc	die-p
Wert	N.Reg.Nom.Sg.Masc	Wert-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Gesellschaft	N.Reg.Acc.Sg.Fem	Gesellschaft-n
lediglich	ADV	lediglich-a
in	APPR	in-i
den	ART.Def.Dat.Pl.Masc	die-x
praktischen	ADJA.Pos.Dat.Pl.Masc	praktisch-j
Vorteilen	N.Reg.Dat.Pl.Masc	Vorteil-n
liegt	VFIN.Full.3.Sg.Pres.Ind	liegen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
bietet	VFIN.Full.3.Sg.Pres.Ind	bieten-v
<g/>
:	SYM.Pun.Colon	:-x
seiner	PRO.Poss.Attr.Dat.Sg.Fem	seine-p
Leistung	N.Reg.Dat.Sg.Fem	Leistung-n
<g/>
,	SYM.Pun.Comma	,-x
Verlässlichkeit	N.Reg.Dat.Sg.Fem	Verlässlichkeit-n
und	CONJ.Coord	und-c
einfacher	ADJA.Pos.Dat.Sg.Fem	einfach-j
Verfügbarkeit	N.Reg.Dat.Sg.Fem	Verfügbarkeit-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
zur	APPRART.Dat.Sg.Fem	zu-i
Zusammenarbeit	N.Reg.Dat.Sg.Fem	Zusammenarbeit-n
nie	ADV	nie-a
als	APPR	als-i
ethischen	ADJA.Pos.Acc.Sg.Masc	ethisch-j
Grundsatz	N.Reg.Acc.Sg.Masc	Grundsatz-n
befürwortet	VPP.Full.Psp	befürworten-v
<g/>
,	SYM.Pun.Comma	,-x
weshalb	PROADV.Inter	weshalb-x
die	ART.Def.Nom.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Nom.Sg.Fem	Öffentlichkeit-n
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nicht	PART.Neg	nicht-x
mit	APPR	mit-i
diesem	PRO.Dem.Attr.Dat.Sg.Masc	diese-p
Grundsatz	N.Reg.Dat.Sg.Masc	Grundsatz-n
verbindet	VFIN.Full.3.Sg.Pres.Ind	verbinden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linus	N.Name.Nom.Sg.Fem	Linus-n
bekundet	VFIN.Full.3.Sg.Pres.Ind	bekunden-v
seine	PRO.Poss.Attr.Acc.Sg.Fem	seine-p
Uneinigkeit	N.Reg.Acc.Sg.Fem	Uneinigkeit-n
mit	APPR	mit-i
den	ART.Def.Dat.Pl.Neut	die-x
Idealen	N.Reg.Dat.Pl.Neut	Ideal-n
der	ART.Def.Gen.Sg.Fem	die-x
Freie-Software-Bewegung	N.Reg.Gen.Sg.Fem	Freie-Software-Bewegung-n
öffentlich	ADJD.Pos	öffentlich-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
entwickelte	VFIN.Full.3.Sg.Past.Ind	entwickeln-v
für	APPR	für-i
viele	PRO.Indef.Attr.Acc.Pl.Neut	viele-p
Jahre	N.Reg.Acc.Pl.Neut	Jahr-n
mit	APPR	mit-i
seiner	PRO.Poss.Attr.Dat.Sg.Fem	seine-p
Arbeit	N.Reg.Dat.Sg.Fem	Arbeit-n
unfreie	ADJA.Pos.Acc.Sg.Fem	unfrei-j
Software	N.Reg.Acc.Sg.Fem	Software-n
(	SYM.Paren.Left	(-x
<g/>
und	CONJ.Coord	und-c
sagte	VFIN.Full.3.Sg.Past.Ind	sagen-v
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
auch	ADV	auch-a
vor	APPR	vor-i
einem	ART.Indef.Dat.Sg.Neut	eine-x
großen	ADJA.Pos.Dat.Sg.Neut	groß-j
Publikum	N.Reg.Dat.Sg.Neut	Publikum-n
bei	APPR	bei-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
World-Messe	FM	World-Messe-x
<g/>
)	SYM.Paren.Right	)-x
und	CONJ.Coord	und-c
lud	VFIN.Full.3.Sg.Past.Ind	laden-v
öffentlich	ADJD.Pos	öffentlich-j
Mitentwickler	N.Reg.Nom.Sg.Masc	Mitentwickler-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
Systemkern	N.Reg.Dat.Sg.Masc	Systemkern-n
<g/>
,	SYM.Pun.Comma	,-x
ein	PART.Verb	ein-x
<g/>
,	SYM.Pun.Comma	,-x
Software	N.Reg.Nom.Sg.Fem	Software-n
zu	PART.Zu	zu-x
verwenden	VINF.Full	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
darauf	PROADV.Dem	darauf-x
mit	APPR	mit-i
ihm	PRO.Pers.Subst.3.Dat.Sg.Masc	sie-p
zu	PART.Zu	zu-x
arbeiten	VINF.Full	arbeiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
sogar	ADV	sogar-a
noch	ADV	noch-a
weiter	PART.Verb	weiter-x
und	CONJ.Coord	und-c
weist	VFIN.Full.3.Sg.Pres.Ind	weisen-v
Leute	N.Reg.Acc.Pl.*	Leute-n
zurecht	PART.Verb	zurecht-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
vorschlagen	VFIN.Full.3.Pl.Pres.Ind	vorschlagen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Ingenieure	N.Reg.Nom.Pl.Masc	Ingenieur-n
und	CONJ.Coord	und-c
Wissenschaftler	N.Reg.Nom.Pl.Masc	Wissenschaftler-n
soziale	ADJA.Pos.Acc.Pl.Fem	sozial-j
Konsequenzen	N.Reg.Acc.Pl.Fem	Konsequenz-n
unserer	PRO.Poss.Attr.Gen.Sg.Fem	unsre-p
technischen	ADJA.Pos.Gen.Sg.Fem	technisch-j
Arbeit	N.Reg.Gen.Sg.Fem	Arbeit-n
berücksichtigen	VINF.Full	berücksichtigen-v
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
-	SYM.Pun.Hyph	--x
weist	VFIN.Full.3.Sg.Pres.Ind	weisen-v
die	ART.Def.Acc.Pl.Fem	die-x
Lektionen	N.Reg.Acc.Pl.Fem	Lektion-n
zurück	PART.Verb	zurück-x
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Gesellschaft	N.Reg.Acc.Sg.Fem	Gesellschaft-n
aus	APPR	aus-i
der	ART.Def.Dat.Sg.Fem	die-x
Entwicklung	N.Reg.Dat.Sg.Fem	Entwicklung-n
der	ART.Def.Gen.Sg.Fem	die-x
Atombombe	N.Reg.Gen.Sg.Fem	Atombombe-n
lernte	VFIN.Full.3.Sg.Past.Ind	lernen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
daran	PROADV.Dem	daran-x
zu	PART.Zu	zu-x
beanstanden	VINF.Full	beanstanden-v
<g/>
,	SYM.Pun.Comma	,-x
aus	APPR	aus-i
Beweggründen	N.Reg.Dat.Pl.Masc	Beweggrund-n
des	ART.Def.Gen.Sg.Neut	die-x
Lernens	N.Reg.Gen.Sg.Neut	Lernen-n
und	CONJ.Coord	und-c
aus	APPR	aus-i
Spaß	N.Reg.Dat.Sg.Masc	Spaß-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Programm	N.Reg.Acc.Sg.Neut	Programm-n
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
<g/>
;	SYM.Pun.Sent	;-x
der	ART.Def.Nom.Sg.Masc	die-x
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
Linus	N.Name.Nom.Sg.Fem	Linus-n
aus	APPR	aus-i
diesen	PRO.Dem.Attr.Dat.Pl.Masc	diese-p
Gründen	N.Reg.Dat.Pl.Masc	Grund-n
geschrieben	VPP.Full.Psp	schreiben-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
war	VFIN.Aux.3.Sg.Past.Ind	sein-v
ein	ART.Indef.Nom.Sg.Masc	eine-x
wichtiger	ADJA.Pos.Nom.Sg.Masc	wichtig-j
Beitrag	N.Reg.Nom.Sg.Masc	Beitrag-n
zu	APPR	zu-i
unserer	PRO.Poss.Attr.Dat.Sg.Fem	unsre-p
Gemeinschaft	N.Reg.Dat.Sg.Fem	Gemeinschaft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
diese	PRO.Dem.Attr.Nom.Pl.Masc	diese-p
Beweggründe	N.Reg.Nom.Pl.Masc	Beweggrund-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
der	ART.Def.Nom.Sg.Masc	die-x
Grund	N.Reg.Nom.Sg.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
das	ART.Def.Nom.Sg.Neut	die-x
komplette	ADJA.Pos.Nom.Sg.Neut	komplett-j
freie	ADJA.Pos.Nom.Sg.Neut	frei-j
System	N.Reg.Nom.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
GNU	N.Name.Nom.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
existiert	VFIN.Full.3.Sg.Pres.Ind	existieren-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Zukunft	N.Reg.Dat.Sg.Fem	Zukunft-n
nicht	PART.Neg	nicht-x
sichern	VINF.Full	sichern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Öffentlichkeit	N.Reg.Nom.Sg.Fem	Öffentlichkeit-n
muss	VFIN.Mod.3.Sg.Pres.Ind	müssen-v
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
wissen	VINF.Full	wissen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Linus	N.Name.Nom.Sg.Fem	Linus-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
das	ART.Def.Acc.Sg.Neut	die-x
Recht	N.Reg.Acc.Sg.Neut	Recht-n
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
seine	PRO.Poss.Attr.Acc.Pl.Fem	seine-p
Ansichten	N.Reg.Acc.Pl.Fem	Ansicht-n
zu	PART.Zu	zu-x
werben	VINF.Full	werben-v
<g/>
;	SYM.Pun.Sent	;-x
jedoch	ADV	jedoch-a
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
die	ART.Def.Nom.Pl.Masc	die-x
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
wissen	VINF.Full	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
besagte	ADJA.Pos.Nom.Sg.Neut	besagt-j
Betriebssystem	N.Reg.Nom.Sg.Neut	Betriebssystem-n
von	APPR	von-i
Idealen	N.Reg.Dat.Pl.Neut	Ideal-n
der	ART.Def.Gen.Sg.Fem	die-x
Freiheit	N.Reg.Gen.Sg.Fem	Freiheit-n
stammt	VFIN.Full.3.Sg.Pres.Ind	stammen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
von	APPR	von-i
seinen	PRO.Poss.Attr.Dat.Pl.Fem	seine-p
Ansichten	N.Reg.Dat.Pl.Fem	Ansicht-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Werk	N.Reg.Acc.Sg.Neut	Werk-n
von	APPR	von-i
Linus	N.Name.Dat.Sg.Fem	Linus-n
Torvalds	N.Name.Dat.Sg.*	Torvalds-n
als	APPR	als-i
GNU	N.Name.Dat.Sg.*	GNU-n
zu	PART.Zu	zu-x
bezeichnen	VINF.Full	bezeichnen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#claimlinux	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
machen	VFIN.Full.1.Pl.Pres.Ind	machen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
von	APPR	von-i
Torvalds	N.Name.Dat.Sg.*	Torvalds-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
<g/>
;	SYM.Pun.Sent	;-x
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
darauf	PROADV.Dem	darauf-x
bedacht	VPP.Full.Psp	bedenken-v
<g/>
,	SYM.Pun.Comma	,-x
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
nicht	PART.Neg	nicht-x
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
zuzuschreiben	VINF.Full.zu	zuschreiben-v
oder	CONJ.Coord	oder-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
als	APPR	als-i
'	SYM.Quot.Right	'-x
<g/>
GNU	ADJD.Pos	GNU-j
<g/>
'	SYM.Quot.Right	'-x
zu	PART.Zu	zu-x
bezeichnen	VINF.Full	bezeichnen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
über	APPR	über-i
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystems	N.Reg.Gen.Sg.Neut	Gesamtsystem-n
sprechen	VFIN.Full.1.Pl.Pres.Ind	sprechen-v
<g/>
,	SYM.Pun.Comma	,-x
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
ihm	PRO.Pers.Subst.3.Dat.Sg.Masc	sie-p
der	ART.Def.Nom.Sg.Masc	die-x
Name	N.Reg.Nom.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
einen	ART.Indef.Acc.Sg.Masc	eine-x
Teil	N.Reg.Acc.Sg.Masc	Teil-n
der	ART.Def.Gen.Sg.Fem	die-x
Anerkennung	N.Reg.Gen.Sg.Fem	Anerkennung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
Linus	N.Name.Nom.Sg.Fem	Linus-n
Torvalds	N.Name.*.*.*	Torvalds-n
damit	PROADV.Dem	damit-x
einverstanden	ADJD.Pos	einverstanden-j
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Linux	N.Reg.Nom.Sg.Neut	Linux-n
nur	ADV	nur-a
der	ART.Def.Nom.Sg.Masc	die-x
Betriebssystemkern	N.Reg.Nom.Sg.Masc	Betriebssystemkern-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#linusagreed	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Anfangs	ADV	anfangs-a
erkannte	VFIN.Full.3.Sg.Past.Ind	erkennen-v
er	PRO.Pers.Subst.3.Nom.Sg.Masc	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
an	PART.Verb	an-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
erste	ADJA.Pos.Nom.Sg.Masc	erst-j
Versionshinweis	N.Reg.Nom.Sg.Masc	Versionshinweis-n
von	APPR	von-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
besagt	VFIN.Full.3.Sg.Pres.Ind	besagen-v
<g/>
:	SYM.Pun.Colon	:-x
"	SYM.Quot.Left	"-x
<g/>
Die	ART.Def.Nom.Pl.Neut	die-x
meisten	PRO.Indef.Subst.Nom.Pl.Neut	meiste-p
der	ART.Def.Gen.Pl.Neut	die-x
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
verwendeten	ADJA.Pos.Gen.Pl.Neut	verwendet-j
Dienstprogramme	N.Reg.Gen.Pl.Neut	Dienstprogramm-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
GNU-Software	ADJA.Pos.Nom.Pl.Fem	GNU-Softwar-j
und	CONJ.Coord	und-c
stehen	VFIN.Full.3.Pl.Pres.Ind	stehen-v
unter	APPR	unter-i
dem	ART.Def.Dat.Sg.Masc	die-x
GNU	N.Name.*.*.*	GNU-n
Copyleft	N.Name.Dat.Sg.*	Copyleft-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Diese	PRO.Dem.Attr.Nom.Pl.Neut	diese-p
Dienstprogramme	N.Reg.Nom.Pl.Neut	Dienstprogramm-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
in	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Distribution	N.Reg.Dat.Sg.Fem	Distribution-n
-	SYM.Pun.Hyph	--x
fragt	VFIN.Full.3.Sg.Pres.Ind	fragen-v
mich	PRO.Pers.Subst.1.Acc.Sg.*	sie-p
(	SYM.Paren.Left	(-x
<g/>
oder	CONJ.Coord	oder-c
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
)	SYM.Paren.Right	)-x
für	APPR	für-i
weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Informationen	N.Reg.Acc.Pl.Fem	Information-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
<g/>
<s>
"	SYM.Quot.Left	"-x
Warum	PROADV.Inter	warum-x
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
der	ART.Def.Dat.Sg.Fem	die-x
GNU	N.Name.Dat.Sg.Fem	GNU-n
Hurd-Systemkern	N.Reg.Nom.Sg.Neut	Hurd-Systemkern-n
nie	ADV	nie-a
fertiggestellt	VPP.Full.Psp	fertigstellen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
GNU-System	N.Reg.Acc.Sg.Neut	GNU-System-n
als	APPR	als-i
Ganzes	N.Reg.Acc.Sg.Neut	Ganze-n
freigegeben	VPP.Full.Psp	freigeben-v
und	CONJ.Coord	und-c
die	ART.Def.Acc.Sg.Fem	die-x
Frage	N.Reg.Acc.Sg.Fem	Frage-n
vergessen	VPP.Full.Psp	vergessen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Acc.Sg.Neut	was-p
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
sei	VFIN.Aux.3.Sg.Pres.Subj	sein-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#finishhurd	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
möchten	VFIN.Mod.1.Pl.Past.Subj	mögen-v
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
GNU-Betriebssystem	N.Reg.Acc.Sg.Neut	GNU-Betriebssystem-n
anerkannt	VPP.Full.Psp	anerkennen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ganz	ADV	ganz-a
gleich	ADV	gleich-a
welcher	PRO.Inter.Attr.Nom.Sg.Masc	welche-p
Kern	N.Reg.Nom.Sg.Masc	Kern-n
damit	PROADV.Dem	damit-x
genutzt	VPP.Full.Psp	nutzen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.*.*.*	GNU-n
Hurd	N.Name.Nom.Sg.*	Hurd-n
gut	ADJD.Pos	gut-j
genug	ADV	genug-a
funktionierend	ADJD.Pos	funktionierend-j
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
um	CONJ.SubInf	um-c
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
konkurrieren	VINF.Full	konkurrieren-v
<g/>
,	SYM.Pun.Comma	,-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
große	ADJA.Pos.Nom.Sg.Fem	groß-j
Aufgabenstellung	N.Reg.Nom.Sg.Fem	Aufgabenstellung-n
und	CONJ.Coord	und-c
nicht	PART.Neg	nicht-x
unbedingt	ADV	unbedingt-a
notwendig	ADJD.Pos	notwendig-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
einzige	PRO.Indef.Subst.Nom.Sg.Neut	einzige-p
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
ethisch	ADJD.Pos	ethisch-j
falsch	ADJD.Pos	falsch-j
mit	APPR	mit-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
als	APPR	als-i
Systemkern	N.Reg.Nom.Sg.Masc	Systemkern-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Aufnahme	N.Reg.Nom.Sg.Fem	Aufnahme-n
von	APPR	von-i
Firmware-BLOBs	N.Reg.Dat.Pl.Fem	Firmware-BLOBs-n
<g/>
!	SYM.Pun.Sent	!-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
beste	ADJA.Sup.Nom.Sg.Fem	gut-j
Lösung	N.Reg.Nom.Sg.Fem	Lösung-n
für	APPR	für-i
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
Problem	N.Reg.Acc.Sg.Neut	Problem-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Entwicklung	N.Reg.Nom.Sg.Fem	Entwicklung-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
freien	ADJA.Pos.Gen.Sg.Masc	frei-j
Ersatzes	N.Reg.Gen.Sg.Masc	Ersatz-n
für	APPR	für-i
die	ART.Def.Acc.Pl.*	die-x
BLOBs	N.Reg.Acc.Pl.*	BLOBs-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Kampf	N.Reg.Nom.Sg.Masc	Kampf-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
bereits	ADV	bereits-a
verloren	VPP.Full.Psp	verlieren-v
-	SYM.Pun.Hyph	--x
die	ART.Def.Nom.Sg.Fem	die-x
Gesellschaft	N.Reg.Nom.Sg.Fem	Gesellschaft-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Entscheidung	N.Reg.Acc.Sg.Fem	Entscheidung-n
getroffen	VPP.Full.Psp	treffen|triefen-v
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
ändern	VINF.Full	ändern-v
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
also	ADV	also-a
noch	ADV	noch-a
darüber	PROADV.Dem	darüber-x
nachdenken	VFIN.Full.3.Pl.Pres.Ind	nachdenken-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#lost	N.Reg.Nom.Sg.Fem	#lost-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
kein	PRO.Indef.Attr.Nom.Sg.Masc	keine-p
Kampf	N.Reg.Nom.Sg.Masc	Kampf-n
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Kampagne	N.Reg.Nom.Sg.Fem	Kampagne-n
der	ART.Def.Gen.Sg.Fem	die-x
Bildung	N.Reg.Gen.Sg.Fem	Bildung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wie	PROADV.Inter	wie-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
nennt	VFIN.Full.3.Sg.Pres.Ind	nennen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
in	APPR	in-i
einem	ART.Indef.Dat.Sg.Masc	eine-x
Augenblick	N.Reg.Dat.Sg.Masc	Augenblick-n
von	APPR	von-i
der	ART.Def.Dat.Sg.Fem	die-x
Gesellschaft	N.Reg.Dat.Sg.Fem	Gesellschaft-n
vorgenomme	ADJA.Pos.Nom.Sg.Fem	vorgenomm-j
einzelne	ADJA.Pos.Nom.Sg.Fem	einzeln-j
Entscheidung	N.Reg.Nom.Sg.Fem	Entscheidung-n
<g/>
:	SYM.Pun.Colon	:-x
jede	PRO.Indef.Attr.Nom.Sg.Fem	jede-p
Person	N.Reg.Nom.Sg.Fem	Person-n
<g/>
,	SYM.Pun.Comma	,-x
jede	PRO.Indef.Attr.Nom.Sg.Fem	jede-p
Organisation	N.Reg.Nom.Sg.Fem	Organisation-n
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
entscheiden	VINF.Full	entscheiden-v
<g/>
,	SYM.Pun.Comma	,-x
welcher	PRO.Inter.Attr.Nom.Sg.Masc	welche-p
Name	N.Reg.Nom.Sg.Masc	Name-n
benutzt	VPP.Full.Psp	benutzen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
anderen	PRO.Indef.Subst.Acc.Pl.*	andere-p
nicht	PART.Neg	nicht-x
vorschreiben	VINF.Full	vorschreiben-v
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
für	APPR	für-i
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
selbst	ADV	selbst-a
beschließen	VINF.Full	beschließen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
dadurch	PROADV.Dem	dadurch-x
helfen	VINF.Full	helfen-v
<g/>
,	SYM.Pun.Comma	,-x
andere	PRO.Indef.Subst.Acc.Pl.*	andere-p
zu	PART.Zu	zu-x
informieren	VINF.Full	informieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Gesellschaft	N.Reg.Nom.Sg.Fem	Gesellschaft-n
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Entscheidung	N.Reg.Acc.Sg.Fem	Entscheidung-n
getroffen	VPP.Full.Psp	treffen|triefen-v
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
ändern	VINF.Full	ändern-v
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
was	PRO.Indef.Subst.*.*.Neut	was-p
nützt	VFIN.Full.3.Sg.Pres.Ind	nützen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#whatgood	CARD	[number]-m
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
Alles-oder-Nichts-Situation	N.Reg.Nom.Sg.Fem	Alles-oder-Nichts-Situation-n
<g/>
:	SYM.Pun.Colon	:-x
richtige	ADJA.Pos.Nom.Pl.Neut	richtig-j
und	CONJ.Coord	und-c
falsche	ADJA.Pos.Nom.Pl.Neut	falsch-j
Bilder	N.Reg.Nom.Pl.Neut	Bild-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
mehr	ADV	mehr-a
oder	CONJ.Coord	oder-c
weniger	ADV	weniger-a
von	APPR	von-i
verschiedenen	ADJA.Pos.Dat.Pl.Fem	verschieden-j
Leuten	N.Reg.Dat.Pl.Fem	Leute-n
verbreitet	VPP.Full.Psp	verbreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
wahre	ADJA.Pos.Acc.Sg.Fem	wahr-j
Geschichte	N.Reg.Acc.Sg.Fem	Geschichte-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Ursprung	N.Reg.Acc.Sg.Masc	Ursprung-n
und	CONJ.Coord	und-c
den	ART.Def.Acc.Sg.Masc	die-x
Grund	N.Reg.Acc.Sg.Masc	Grund-n
dafür	PROADV.Dem	dafür-x
zu	PART.Zu	zu-x
erfahren	VINF.Full	erfahren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
die	ART.Def.Acc.Sg.Fem	die-x
unzutreffende	ADJA.Pos.Acc.Sg.Fem	unzutreffend-j
Bezeichnung	N.Reg.Acc.Sg.Fem	Bezeichnung-n
nicht	PART.Neg	nicht-x
überall	ADV	überall-a
selbst	ADV	selbst-a
richtig	ADJD.Pos	richtig-j
stellen	VINF.Full	stellen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
als	CONJ.Comp	als-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
können	VFIN.Mod.1.Pl.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
nur	ADV	nur-a
einige	PRO.Indef.Attr.Nom.Pl.Masc	einige-p
hundert	CARD	hundert-m
Menschen	N.Reg.Nom.Pl.Masc	Mensch-n
sehen	VFIN.Full.3.Pl.Pres.Ind	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
beträchtliche	ADJA.Pos.Nom.Sg.Fem	beträchtlich-j
Anzahl	N.Reg.Nom.Sg.Fem	Anzahl-n
von	APPR	von-i
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
mit	APPR	mit-i
sehr	ADV	sehr-a
wenig	PRO.Indef.Attr.*.*.*	wenig-p
Aufwand	N.Reg.Dat.Sg.Masc	Aufwand-n
informiert	VPP.Full.Psp	informieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Und	CONJ.Coord	und-c
einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
die	ART.Def.Acc.Sg.Fem	die-x
Richtigstellung	N.Reg.Acc.Sg.Fem	Richtigstellung-n
an	APPR	an-i
andere	PRO.Indef.Subst.Acc.Pl.*	andere-p
weitergeben	VINF.Full	weitergeben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
besser	ADJD.Comp	gut-j
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
und	CONJ.Coord	und-c
den	ART.Def.Acc.Sg.Masc	die-x
wahren	ADJA.Pos.Acc.Sg.Masc	wahr-j
Ursprung	N.Reg.Acc.Sg.Masc	Ursprung-n
in	APPR	in-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
zehnminütigen	ADJA.Pos.Dat.Sg.Fem	zehnminütig-j
Erklärung	N.Reg.Dat.Sg.Fem	Erklärung-n
zu	PART.Zu	zu-x
lehren	VINF.Full	lehren-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#explain	N.Name.*.*.*	#explain-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
anderen	PRO.Indef.Subst.Acc.Sg.Masc	andere-p
auf	APPR	auf-i
diese	PRO.Dem.Attr.Acc.Sg.Fem	diese-p
Weise	N.Reg.Acc.Sg.Fem	Weise-n
erklären	VFIN.Full.3.Pl.Pres.Ind	erklären-v
<g/>
,	SYM.Pun.Comma	,-x
wissen	VFIN.Full.1.Pl.Pres.Ind	wissen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
Ihr	PRO.Poss.Attr.Acc.Sg.Neut	ihre-p
Engagement	N.Reg.Acc.Sg.Neut	Engagement-n
zu	PART.Zu	zu-x
schätzen	VINF.Full	schätzen-v
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
die	ART.Def.Nom.Sg.Fem	die-x
beste	ADJA.Sup.Nom.Sg.Fem	gut-j
Methode	N.Reg.Nom.Sg.Fem	Methode-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
so	ADV	so-a
wirkungsvoll	ADJD.Pos	wirkungsvoll-j
wie	CONJ.Comp	wie-c
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
Ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
ineffektiv	ADJD.Pos	ineffektiv-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ineffektiv	ADJD.Pos	ineffektiv-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
vielleicht	ADV	vielleicht-a
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
Wirkung	N.Reg.Acc.Sg.Fem	Wirkung-n
erzielt	VPP.Full.Psp	erzielen-v
und	CONJ.Coord	und-c
sicherlich	ADV	sicherlich-a
nicht	PART.Neg	nicht-x
weitergegeben	VPP.Full.Psp	weitergeben-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
Ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Erklärung	N.Reg.Acc.Sg.Fem	Erklärung-n
hören	VFIN.Full.3.Pl.Pres.Ind	hören-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Aufmerksamkeit	N.Reg.Dat.Sg.Fem	Aufmerksamkeit-n
schenken	VINF.Full	schenken-v
und	CONJ.Coord	und-c
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
ein	ART.Indef.Acc.Sg.Neut	eine-x
richtiges	ADJA.Pos.Acc.Sg.Neut	richtig-j
Bild	N.Reg.Acc.Sg.Neut	Bild-n
des	ART.Def.Gen.Sg.Masc	die-x
Ursprungs	N.Reg.Gen.Sg.Masc	Ursprung-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
erfahren	VINF.Full	erfahren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aber	CONJ.Coord	aber-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
die	ART.Def.Acc.Sg.Fem	die-x
Erklärung	N.Reg.Acc.Sg.Fem	Erklärung-n
anderen	PRO.Indef.Subst.Gen.Sg.*	andere-p
kaum	ADV	kaum-a
wiederholen	VINF.Full	wiederholen-v
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
wann	PROADV.Inter	wann-x
auch	ADV	auch-a
immer	ADV	immer-a
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
um	APPR	um-i
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Man	PRO.Indef.Subst.Nom.Sg.*	man-p
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
einfach	ADJD.Pos	einfach-j
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ohne	CONJ.SubInf	ohne-c
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
besonders	ADV	besonders-a
zu	PART.Zu	zu-x
beabsichtigen	VINF.Full	beabsichtigen-v
<g/>
,	SYM.Pun.Comma	,-x
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
falsches	ADJA.Pos.Acc.Sg.Neut	falsch-j
Bild	N.Reg.Acc.Sg.Neut	Bild-n
zu	PART.Zu	zu-x
verbreiten	VINF.Full	verbreiten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ineffizient	ADJD.Pos	ineffizient-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
viel	ADV	viel-a
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
in	APPR	in-i
Anspruch	N.Reg.Acc.Sg.Masc	Anspruch-n
nimmt	VFIN.Full.3.Sg.Pres.Ind	nehmen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
sagen	VINF.Full	sagen-v
und	CONJ.Coord	und-c
zu	PART.Zu	zu-x
schreiben	VINF.Full	schreiben-v
beansprucht	VFIN.Full.3.Sg.Pres.Ind	beanspruchen-v
täglich	ADJD.Pos	täglich-j
nur	ADV	nur-a
einige	PRO.Indef.Attr.Acc.Pl.Fem	einige-p
Sekunden	N.Reg.Acc.Pl.Fem	Sekunde-n
<g/>
,	SYM.Pun.Comma	,-x
keine	PRO.Indef.Attr.Acc.Pl.Fem	keine-p
Minuten	N.Reg.Acc.Pl.Fem	Minute-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
so	ADV	so-a
weit	ADV	weit-a
mehr	PRO.Indef.Attr.*.*.*	mehr-p
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
zu	PART.Zu	zu-x
erreichen	VINF.Full	erreichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Zwischen	APPR	zwischen-i
Linux	N.Reg.Dat.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
GNU	N.Reg.Dat.Sg.Fem	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
unterscheiden	VINF.Full	unterscheiden-v
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
schreiben	VFIN.Full.3.Pl.Pres.Ind	schreiben-v
und	CONJ.Coord	und-c
reden	VFIN.Full.3.Pl.Pres.Ind	reden-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
bei	APPR	bei-i
weitem	N.Reg.Dat.Sg.*	weitem-n
der	ART.Def.Nom.Sg.Masc	die-x
einfachste	ADJA.Sup.Nom.Sg.Masc	einfach-j
Weg	N.Reg.Nom.Sg.Masc	Weg-n
<g/>
,	SYM.Pun.Comma	,-x
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
effektiv	ADJD.Pos	effektiv-j
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Attr.Nom.Pl.*	einige-p
Leute	N.Reg.Nom.Pl.*	Leute-n
lachen	VFIN.Full.3.Pl.Pres.Ind	lachen-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
aus	PART.Verb	aus-x
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
bittet	VFIN.Full.3.Sg.Pres.Ind	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
unterwerfen	VFIN.Full.3.Pl.Pres.Ind	unterwerfen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
[	SYM.Paren.Left	[-x
<g/>
RMS	N.Name.Nom.Sg.*	RMS-n
<g/>
]	SYM.Paren.Right	]-x
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
Behandlung	N.Reg.Gen.Sg.Fem	Behandlung-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#treatment	N.Reg.Nom.Sg.Fem	#treatment-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Deg	zu-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
vermittelt	ADJD.Pos	vermittelt-j
tendenziell	ADJD.Pos	tendenziell-j
ein	ART.Indef.Acc.Sg.Neut	eine-x
falsches	ADJA.Pos.Acc.Sg.Neut	falsch-j
Bild	N.Reg.Acc.Sg.Neut	Bild-n
der	ART.Def.Gen.Sg.Fem	die-x
Geschichte	N.Reg.Gen.Sg.Fem	Geschichte-n
und	CONJ.Coord	und-c
den	ART.Def.Acc.Sg.Masc	die-x
Grund	N.Reg.Acc.Sg.Masc	Grund-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
Existenz	N.Reg.Acc.Sg.Fem	Existenz-n
des	ART.Def.Gen.Sg.Neut	die-x
Systems	N.Reg.Gen.Sg.Neut	System-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
über	APPR	über-i
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Bitte	N.Reg.Acc.Sg.Fem	Bitte-n
womöglich	ADV	womöglich-a
lachen	VFIN.Full.3.Pl.Pres.Ind	lachen-v
<g/>
,	SYM.Pun.Comma	,-x
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
falsche	ADJA.Pos.Acc.Sg.Neut	falsch-j
Bild	N.Reg.Acc.Sg.Neut	Bild-n
angeeignet	VPP.Full.Psp	aneignen-v
-	SYM.Pun.Hyph	--x
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
denken	VFIN.Full.3.Pl.Pres.Ind	denken-v
<g/>
,	SYM.Pun.Comma	,-x
unsere	PRO.Poss.Attr.Nom.Sg.Fem	unsre-p
Arbeit	N.Reg.Nom.Sg.Fem	Arbeit-n
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
von	APPR	von-i
Linus	N.Name.Dat.Sg.Fem	Linus-n
gemacht	VPP.Full.Psp	machen-v
<g/>
,	SYM.Pun.Comma	,-x
also	ADV	also-a
lachen	VFIN.Full.3.Pl.Pres.Ind	lachen-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
um	APPR	um-i
Anerkennung	N.Reg.Acc.Sg.Fem	Anerkennung-n
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Hätten	VFIN.Aux.3.Pl.Past.Subj	haben-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Wahrheit	N.Reg.Acc.Sg.Fem	Wahrheit-n
gewusst	VPP.Full.Psp	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
nicht	PART.Neg	nicht-x
lachen	VINF.Full	lachen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
nehmen	VFIN.Full.1.Pl.Pres.Ind	nehmen-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	ART.Def.Acc.Sg.Neut	die-x
Risiko	N.Reg.Acc.Sg.Neut	Risiko-n
einer	ART.Indef.Gen.Sg.Fem	eine-x
Bitte	N.Reg.Gen.Sg.Fem	Bitte-n
in	APPR	in-i
Kauf	N.Reg.Acc.Sg.Masc	Kauf-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
manchmal	ADV	manchmal-a
dazu	PROADV.Dem	dazu-x
führt	VFIN.Full.3.Sg.Pres.Ind	führen-v
<g/>
,	SYM.Pun.Comma	,-x
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
verspotten	VINF.Full	verspotten-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Weil	CONJ.SubFin	weil-c
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
oft	ADV	oft-a
nützliche	ADJA.Pos.Nom.Pl.Neut	nützlich-j
Resultate	N.Reg.Nom.Pl.Neut	Resultat-n
ergeben	VPP.Full.Psp	ergeben-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
dem	ART.Def.Dat.Sg.Masc	die-x
GNU-Projekt	N.Reg.Dat.Sg.Masc	GNU-Projekt-n
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
gehen	VFIN.Full.1.Pl.Pres.Ind	gehen-v
das	ART.Def.Acc.Sg.Neut	die-x
Risiko	N.Reg.Acc.Sg.Neut	Risiko-n
des	ART.Def.Gen.Sg.Masc	die-x
unverdienten	ADJA.Pos.Gen.Sg.Masc	unverdient-j
Missbrauchs	N.Reg.Gen.Sg.Masc	Missbrauch-n
ein	PART.Verb	ein-x
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
unsere	PRO.Poss.Attr.Acc.Pl.Neut	unsre-p
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
zu	PART.Zu	zu-x
erreichen	VINF.Full	erreichen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
eine	ART.Indef.Acc.Sg.Fem	eine-x
solche	PRO.Indef.Attr.Acc.Sg.Fem	solche-p
ironischerweise	ADV	ironischerweise-a
unfaire	ADJA.Pos.Acc.Sg.Fem	unfair-j
Situation	N.Reg.Acc.Sg.Fem	Situation-n
aufkommen	VINF.Full	aufkommen-v
sehen	VINF.Full	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
bitte	ADV	bitte-a
schauen	VFIN.Full.3.Pl.Pres.Ind	schauen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nicht	PART.Neg	nicht-x
tatenlos	ADJD.Pos	tatenlos-j
zu	PART.Verb	zu-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Erzählen	VFIN.Full.3.Pl.Pres.Ind	erzählen-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Lachenden	N.Reg.Acc.Sg.Masc	Lachend-n
die	ART.Def.Nom.Sg.Fem	die-x
tatsächliche	ADJA.Pos.Nom.Sg.Fem	tatsächlich-j
Geschichte	N.Reg.Nom.Sg.Fem	Geschichte-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sehen	VFIN.Full.3.Pl.Pres.Ind	sehen-v
<g/>
,	SYM.Pun.Comma	,-x
warum	PROADV.Inter	warum-x
die	ART.Def.Nom.Sg.Fem	die-x
Bitte	N.Reg.Nom.Sg.Fem	Bitte-n
gerechtfertigt	VPP.Full.Psp	rechtfertigen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
diejenigen	PRO.Dem.Subst.Nom.Pl.*	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
auch	ADV	auch-a
nur	ADV	nur-a
etwas	PRO.Indef.Attr.*.*.*	etwas-p
Verstand	N.Reg.Acc.Sg.Masc	Verstand-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
aufhören	VINF.Full	aufhören-v
zu	PART.Zu	zu-x
lachen	VINF.Full	lachen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Einige	PRO.Indef.Subst.Nom.Pl.*	einige-p
missbilligen	VFIN.Full.3.Pl.Pres.Ind	missbilligen-v
einen	PRO.Indef.Subst.Acc.Sg.Masc	eine-p
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
darum	PROADV.Dem	darum-x
bittet	VFIN.Full.3.Sg.Pres.Ind	bitten-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	ADJD.Pos	GNU-j
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Verliert	VFIN.Full.3.Sg.Pres.Ind	verlieren-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
sich	PRO.Refl.Subst.3.Dat.Sg.*	sie-p
mit	APPR	mit-i
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
verscherzt	VFIN.Full.3.Sg.Pres.Ind	verscherzen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#alienate	N.Reg.Nom.Sg.Fem	#alienate-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Nicht	PART.Neg	nicht-x
sehr	ADV	sehr-a
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Systementwickelung	N.Reg.Dat.Sg.Fem	Systementwickelung-n
nicht	PART.Neg	nicht-x
zu	PART.Zu	zu-x
schätzen	VINF.Full	schätzen-v
wissen	VFIN.Full.3.Pl.Pres.Ind	wissen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
kaum	ADV	kaum-a
wesentliche	ADJA.Pos.Acc.Pl.Masc	wesentlich-j
Versuche	N.Reg.Acc.Pl.Masc	Versuch-n
machen	VINF.Full	machen-v
uns	PRO.Pers.Subst.1.Acc.Pl.*	sie-p
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
wirklich	ADJD.Pos	wirklich-j
mit	APPR	mit-i
etwas	PRO.Indef.Subst.*.*.Neut	etwas-p
beschäftigen	VFIN.Full.3.Pl.Pres.Ind	beschäftigen-v
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
unsere	PRO.Poss.Attr.Acc.Pl.Neut	unsre-p
Ziele	N.Reg.Acc.Pl.Neut	Ziel-n
vorbringt	VFIN.Full.3.Sg.Pres.Ind	vorbringen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
freigeben	VFIN.Full.3.Pl.Pres.Ind	freigeben-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wahrscheinlich	ADJD.Pos	wahrscheinlich-j
aus	APPR	aus-i
anderen	ADJA.Pos.Dat.Pl.Masc	ander-j
nicht	PART.Neg	nicht-x
miteinander	ADV	miteinander-a
verwandten	ADJA.Pos.Dat.Pl.Masc	verwandt-j
Gründen	N.Reg.Dat.Pl.Masc	Grund-n
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
etwa	ADV	etwa-a
weil	CONJ.SubFin	weil-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
darum	PROADV.Dem	darum-x
baten	VFIN.Full.1.Pl.Past.Ind	bitten-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unterdessen	ADV	unterdessen-a
unterminieren	VFIN.Full.3.Pl.Pres.Ind	unterminieren-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Möglichkeit	N.Reg.Acc.Sg.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Hilfe	N.Reg.Acc.Sg.Fem	Hilfe-n
von	APPR	von-i
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
zu	PART.Zu	zu-x
gewinnen	VINF.Full	gewinnen-v
<g/>
,	SYM.Pun.Comma	,-x
indem	CONJ.SubFin	indem-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
anderen	PRO.Indef.Subst.Dat.Pl.*	andere-p
beibringen	VFIN.Full.3.Pl.Pres.Ind	beibringen-v
<g/>
,	SYM.Pun.Comma	,-x
unsere	PRO.Poss.Attr.Acc.Sg.Fem	unsre-p
Arbeit	N.Reg.Acc.Sg.Fem	Arbeit-n
jemand	PRO.Indef.Subst.*.*.Masc	jemand-p
anderem	PRO.Indef.Subst.Dat.Sg.*	andere-p
zuzuschreiben	VINF.Full.zu	zuschreiben-v
<g/>
,	SYM.Pun.Comma	,-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
keinen	PRO.Indef.Attr.Acc.Sg.Masc	keine-p
Sinn	N.Reg.Acc.Sg.Masc	Sinn-n
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Dat.Sg.*	sie-p
Gedanken	N.Reg.Acc.Pl.Masc	Gedanke-n
über	APPR	über-i
Leute	N.Reg.Acc.Pl.*	Leute-n
zu	PART.Zu	zu-x
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
mit	APPR	mit-i
denen	PRO.Rel.Subst.Dat.Pl.Fem	die-p
man	PRO.Indef.Subst.Nom.Sg.*	man-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
sich	PRO.Refl.Subst.3.Dat.Pl.*	sie-p
verscherzt	VPP.Full.Psp	verscherzen-v
hat	VFIN.Aux.3.Sg.Pres.Ind	haben-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
zumeist	ADV	zumeist-a
bereits	ADV	bereits-a
unkooperativ	ADJD.Pos	unkooperativ-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
aussichtslos	ADJD.Pos	aussichtslos-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
ein	ART.Indef.Acc.Sg.Neut	eine-x
schwerwiegendes	ADJA.Pos.Acc.Sg.Neut	schwerwiegend-j
Problem	N.Reg.Acc.Sg.Neut	Problem-n
zu	PART.Zu	zu-x
korrigieren	VINF.Full	korrigieren-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
nicht	PART.Neg	nicht-x
die	ART.Def.Acc.Pl.*	die-x
Leute	N.Reg.Acc.Pl.*	Leute-n
zu	PART.Zu	zu-x
entrüsten	VINF.Full	entrüsten-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
bewahren	VFIN.Full.3.Pl.Pres.Ind	bewahren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Daher	PROADV.Dem	daher-x
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
auch	ADV	auch-a
weiterhin	ADV	weiterhin-a
versuchen	VINF.Full	versuchen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
falsche	ADJA.Pos.Acc.Sg.Fem	falsch-j
Bezeichnung	N.Reg.Acc.Sg.Fem	Bezeichnung-n
richtigzustellen	VINF.Full.zu	richtigstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
auch	ADV	auch-a
immer	ADV	immer-a
beigetragen	VPP.Full.Psp	beitragen-v
wurde	VFIN.Aux.3.Sg.Past.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
legitim	ADJD.Pos	legitim-j
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
umzubenennen	VINF.Full.zu	umbenennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#rename	N.Reg.Nom.Sg.Fem	#rename-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
benennen	VFIN.Full.1.Pl.Pres.Ind	benennen-v
nichts	PRO.Indef.Subst.*.*.Neut	nichts-p
um	PART.Verb	um-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
haben	VFIN.Aux.1.Pl.Pres.Ind	haben-v
dieses	PRO.Dem.Attr.Acc.Sg.Neut	diese-p
System	N.Reg.Acc.Sg.Neut	System-n
GNU	ADJD.Pos	GNU-j
genannt	VPP.Full.Psp	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
seitdem	CONJ.SubFin	seitdem-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
im	APPRART.Dat.Sg.Neut	in-i
Jahr	N.Reg.Dat.Sg.Neut	Jahr-n
1983	CARD	[number]-m
ankündigten	VFIN.Full.1.Pl.Past.Ind	ankündigen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Pl.*	die-x
Leute	N.Reg.Nom.Pl.*	Leute-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Dem.Subst.Nom.Pl.*	die-p
versuchten	VFIN.Full.3.Pl.Past.Ind	versuchen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
in	APPR	in-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Dat.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
umzubenennen	VINF.Full.zu	umbenennen-v
<g/>
,	SYM.Pun.Comma	,-x
hätten	VFIN.Aux.3.Pl.Past.Subj	haben-v
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
tun	VINF.Full	tun-v
sollen	VINF.Mod	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
Menschen	N.Reg.Acc.Pl.Masc	Mensch-n
zu	PART.Zu	zu-x
zwingen	VINF.Full	zwingen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#force	N.Reg.Nom.Sg.Fem	#force-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
falsch	ADJD.Pos	falsch-j
<g/>
,	SYM.Pun.Comma	,-x
sie	PRO.Pers.Subst.3.Acc.Sg.Fem	sie-p
zu	PART.Zu	zu-x
zwingen	VINF.Full	zwingen-v
<g/>
,	SYM.Pun.Comma	,-x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
versuchen	VFIN.Full.1.Pl.Pres.Ind	versuchen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
nennen	VFIN.Full.1.Pl.Pres.Ind	nennen-v
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
und	CONJ.Coord	und-c
bitten	VFIN.Full.3.Pl.Pres.Ind	bitten-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
auch	ADV	auch-a
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
Personen	N.Reg.Dat.Pl.Fem	Person-n
nicht	PART.Neg	nicht-x
verklagt	VPP.Full.Psp	verklagen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
das	ART.Def.Acc.Sg.Neut	die-x
Gesamtsystem	N.Reg.Acc.Sg.Neut	Gesamtsystem-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VINF.Full	nennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#whynotsue	N.Reg.Nom.Sg.Fem	#whynotsue-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
keine	PRO.Indef.Attr.Acc.Sg.Fem	keine-p
rechtliche	ADJA.Pos.Acc.Sg.Fem	rechtlich-j
Handhabe	N.Reg.Acc.Sg.Fem	Handhabe-n
zur	APPRART.Dat.Sg.Fem	zu-i
Klageerhebung	N.Reg.Dat.Sg.Fem	Klageerhebung-n
<g/>
,	SYM.Pun.Comma	,-x
aber	CONJ.Coord	aber-c
da	CONJ.SubFin	da-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
an	APPR	an-i
die	ART.Def.Acc.Sg.Fem	die-x
Redefreiheit	N.Reg.Acc.Sg.Fem	Redefreiheit-n
glauben	VFIN.Full.1.Pl.Pres.Ind	glauben-v
<g/>
,	SYM.Pun.Comma	,-x
würden	VFIN.Aux.1.Pl.Past.Subj	werden-v
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
auch	ADV	auch-a
gar	ADV	gar-a
nicht	PART.Neg	nicht-x
wollen	VFIN.Mod.1.Pl.Pres.Ind	wollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
darum	PROADV.Dem	darum-x
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
genau	ADJD.Pos	genau-j
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Richtige	N.Reg.Nom.Sg.Neut	Richtige-n
<g/>
,	SYM.Pun.Comma	,-x
das	PRO.Rel.Subst.Nom.Sg.Neut	die-p
zu	PART.Zu	zu-x
tun	VINF.Full	tun-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
nicht	PART.Neg	nicht-x
etwas	ADV	etwas-a
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
GNU	N.Name.Acc.Sg.Fem	GNU-n
GPL	N.Name.*.*.*	GPL-n
aufgenommen	VPP.Full.Psp	aufnehmen-v
werden	VINF.Aux	werden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
zu	PART.Zu	zu-x
verlangen	VINF.Full	verlangen-v
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#require	N.Reg.Nom.Sg.Fem	#require-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Zweck	N.Reg.Nom.Sg.Masc	Zweck-n
der	ART.Def.Gen.Sg.Fem	die-x
GNU	N.Name.Gen.Sg.Fem	GNU-n
GPL	N.Name.Nom.Sg.Fem	GPL-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
die	ART.Def.Nom.Sg.Fem	die-x
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
der	ART.Def.Gen.Pl.Masc	die-x
Nutzer	N.Reg.Gen.Pl.Masc	Nutzer-n
vor	ADV	vor-a
diejenigen	PRO.Dem.Subst.Acc.Pl.*	diejenige-p
zu	PART.Zu	zu-x
schützen	VINF.Full	schützen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Pl.Fem	die-x
proprietäre	ADJA.Pos.Acc.Pl.Fem	proprietär-j
Versionen	N.Reg.Acc.Pl.Fem	Version-n
aus	APPR	aus-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
machen	VINF.Full	machen-v
würden	VFIN.Aux.3.Pl.Past.Subj	werden-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
stimmt	VFIN.Full.3.Sg.Pres.Ind	stimmen-v
zwar	ADV	zwar-a
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
diejenigen	PRO.Dem.Subst.Nom.Pl.Masc	diejenige-p
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Masc	die-p
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
oftmals	ADV	oftmals-a
Sachen	N.Reg.Acc.Pl.Fem	Sache-n
machen	VINF.Full	machen-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
die	ART.Def.Acc.Sg.Fem	die-x
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
des	ART.Def.Gen.Sg.Masc	die-x
Nutzers	N.Reg.Gen.Sg.Masc	Nutzer-n
einschränken	VINF.Full	einschränken-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
mit	APPR	mit-i
dem	ART.Def.Dat.Sg.Neut	die-x
GNU	N.Reg.Dat.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux-System	N.Reg.Dat.Sg.Neut	Linux-System-n
bündeln	VFIN.Full.3.Pl.Pres.Ind	bündeln-v
oder	CONJ.Coord	oder-c
sogar	ADV	sogar-a
dafür	PROADV.Dem	dafür-x
entwickeln	VFIN.Full.3.Pl.Pres.Ind	entwickeln-v
<g/>
,	SYM.Pun.Comma	,-x
der	ART.Def.Nom.Sg.Masc	die-x
bloße	ADJA.Pos.Nom.Sg.Masc	bloß-j
Akt	N.Reg.Nom.Sg.Masc	Akt-n
hingegen	ADV	hingegen-a
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
zu	PART.Zu	zu-x
nennen	VINF.Full	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
spricht	VFIN.Full.3.Sg.Pres.Ind	sprechen-v
den	ART.Def.Dat.Pl.Masc	die-x
Nutzern	N.Reg.Dat.Pl.Masc	Nutzer-n
an	APPR	an-i
sich	PRO.Refl.Subst.3.Dat.Sg.*	sie-p
nicht	PART.Neg	nicht-x
ihre	PRO.Poss.Attr.Acc.Sg.Fem	ihre-p
Freiheit	N.Reg.Acc.Sg.Fem	Freiheit-n
ab	PART.Verb	ab-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Welchen	PRO.Indef.Subst.Dat.Pl.*	welche-p
Namen	N.Reg.Acc.Pl.Masc	Name-n
man	PRO.Indef.Subst.Nom.Sg.*	man-p
für	APPR	für-i
das	ART.Def.Acc.Sg.Neut	die-x
System	N.Reg.Acc.Sg.Neut	System-n
verwenden	VINF.Full	verwenden-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
scheint	VFIN.Full.3.Sg.Pres.Ind	scheinen-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Beschränkung	N.Reg.Nom.Sg.Fem	Beschränkung-n
der	ART.Def.Gen.Sg.Fem	die-x
GPL	N.Name.Gen.Sg.Fem	GPL-n
unpassend	ADJD.Pos	unpassend-j
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Seit	APPR	seit-i
der	ART.Def.Dat.Sg.Fem	die-x
ablehnenden	ADJA.Pos.Dat.Sg.Fem	ablehnend-j
Einwände	VFIN.Full.3.Sg.Past.Subj	einwinden-v
gegen	APPR	gegen-i
die	ART.Def.Acc.Sg.Fem	die-x
Werbeerfordernis	N.Reg.Acc.Sg.Fem	Werbeerfordernis-n
der	ART.Def.Gen.Sg.Fem	die-x
ursprünglichen	ADJA.Pos.Gen.Sg.Fem	ursprünglich-j
BSD-Lizenz	N.Reg.Gen.Sg.Fem	BSD-Lizenz-n
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
der	ART.Def.Gen.Sg.Fem	die-x
University	N.Name.Gen.Sg.Fem	University-n
of	N.Name.*.*.*	of-n
California	N.Name.*.*.*	California-n
anerkennend	ADJD.Pos	anerkennend-j
zu	PART.Zu	zu-x
benennen	VINF.Full	benennen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
heuchlerisch	ADJD.Pos	heuchlerisch-j
den	ART.Def.Acc.Sg.Masc	die-x
Verdienst	N.Reg.Acc.Sg.Masc	Verdienst-n
des	ART.Def.Gen.Sg.Neut	die-x
Projekts	N.Reg.Gen.Sg.Neut	Projekt-n
'	SYM.Quot.Right	'-x
<g/>
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
'	SYM.Quot.Right	'-x
einzufordern	VINF.Full.zu	einfordern-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#BSDlicense	N.Reg.Nom.Sg.Fem	#BSDlicense-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
heuchlerisch	ADJD.Pos	heuchlerisch-j
<g/>
,	SYM.Pun.Comma	,-x
den	ART.Def.Acc.Sg.Masc	die-x
Namen	N.Reg.Acc.Sg.Masc	Name-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
mittels	APPR	mittels-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Lizenz	N.Reg.Dat.Sg.Fem	Lizenz-n
vorzuschreiben	VINF.Full.zu	vorschreiben-v
-	SYM.Pun.Hyph	--x
und	CONJ.Coord	und-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
tun	VFIN.Full.1.Pl.Pres.Ind	tun-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
bitten	VFIN.Full.1.Pl.Pres.Ind	bitten-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
nur	ADV	nur-a
darum	PROADV.Dem	darum-x
<g/>
,	SYM.Pun.Comma	,-x
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
den	ART.Def.Acc.Sg.Masc	die-x
Verdienst	N.Reg.Acc.Sg.Masc	Verdienst-n
zuschreiben	VINF.Full	zuschreiben-v
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
verdienen	VFIN.Full.1.Pl.Pres.Ind	verdienen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bitte	ADV	bitte-a
beachten	VFIN.Full.3.Pl.Pres.Ind	beachten-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
mindestens	ADV	mindestens-a
zwei	CARD	zwei-m
verschiedene	ADJA.Pos.Acc.Pl.Fem	verschieden-j
BSD-Lizenzen	N.Reg.Acc.Pl.Fem	BSD-Lizenz-n
gibt	VFIN.Full.3.Sg.Pres.Ind	geben-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Aus	APPR	aus-i
Gründen	N.Reg.Dat.Pl.Masc	Grund-n
der	ART.Def.Gen.Sg.Fem	die-x
Klarheit	N.Reg.Gen.Sg.Fem	Klarheit-n
verwenden	VFIN.Full.3.Pl.Pres.Ind	verwenden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
bitte	ADV	bitte-a
nicht	PART.Neg	nicht-x
den	ART.Def.Acc.Sg.Masc	die-x
Begriff	N.Reg.Acc.Sg.Masc	Begriff-n
BSD-Lizenz	N.Reg.Nom.Sg.Fem	BSD-Lizenz-n
ohne	APPR	ohne-i
anzugeben	ADJD.Pos	anzugeben-j
<g/>
,	SYM.Pun.Comma	,-x
welche	PRO.Rel.Subst.Nom.Sg.Fem	welche-p
genau	ADJD.Pos	genau-j
gemeint	VPP.Full.Psp	meinen-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
ihr	PRO.Pers.Subst.2.Nom.Pl.*	sie-p
versäumt	VPP.Full.Psp	versäumen-v
habt	VFIN.Aux.2.Pl.Pres.Ind	haben-v
etwas	ADV	etwas-a
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
GNU	N.Name.Acc.Sg.Fem	GNU-n
GPL	N.Name.*.*.*	GPL-n
aufzunehmen	VINF.Full.zu	aufnehmen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
zu	PART.Zu	zu-x
verlangen	VINF.Full	verlangen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
GNU	N.Name.Nom.Sg.*	GNU-n
genannt	VPP.Full.Psp	nennen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
<g/>
,	SYM.Pun.Comma	,-x
verdient	VFIN.Full.3.Sg.Pres.Ind	verdienen-v
ihr	PRO.Pers.Subst.3.Dat.Sg.Fem	sie-p
was	PROADV.Inter	was-x
geschah	VFIN.Full.3.Sg.Past.Ind	geschehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
beklagt	ADJD.Pos	beklagt-j
ihr	PRO.Pers.Subst.2.Nom.Pl.*	sie-p
euch	PRO.Refl.Subst.2.Acc.Pl.*	sie-p
jetzt	ADV	jetzt-a
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#deserve	N.Reg.Nom.Sg.Fem	#deserve-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Die	ART.Def.Nom.Sg.Fem	die-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
setzt	VFIN.Full.3.Sg.Pres.Ind	setzen-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
eher	ADV	eher-a
umstrittene	ADJA.Pos.Acc.Sg.Fem	umstritten-j
allgemeine	ADJA.Pos.Acc.Sg.Fem	allgemein-j
ethische	ADJA.Pos.Acc.Sg.Fem	ethisch-j
Prämisse	N.Reg.Acc.Sg.Fem	Prämisse-n
voraus	PART.Verb	voraus-x
<g/>
:	SYM.Pun.Colon	:-x
dass	CONJ.SubFin	dass-c
<g/>
,	SYM.Pun.Comma	,-x
wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
Sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
nicht	PART.Neg	nicht-x
dazu	PROADV.Dem	dazu-x
zwingt	VFIN.Full.3.Sg.Pres.Ind	zwingen-v
einen	ART.Indef.Acc.Sg.Masc	eine-x
anständig	ADJD.Pos	anständig-j
zu	PART.Zu	zu-x
behandeln	VINF.Full	behandeln-v
<g/>
,	SYM.Pun.Comma	,-x
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
berechtigt	ADJD.Pos	berechtigt-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
so	ADV	so-a
viel	PRO.Indef.Attr.*.*.*	viel-p
wie	CONJ.Comp	wie-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
mögen	VFIN.Full.3.Pl.Pres.Ind	mögen-v
auszunutzen	VINF.Full.zu	ausnutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
anderen	ADJA.Pos.Dat.Pl.Neut	ander-j
Worten	N.Reg.Dat.Pl.Neut	Wort-n
<g/>
,	SYM.Pun.Comma	,-x
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
davon	PROADV.Dem	davon-x
ausgegangen	VPP.Full.Psp	ausgehen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Macht	N.Reg.Nom.Sg.Fem	Macht-n
vor	APPR	vor-i
Recht	N.Reg.Dat.Sg.Neut	Recht-n
geht	VFIN.Full.3.Sg.Pres.Ind	gehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hoffen	VFIN.Full.1.Pl.Pres.Ind	hoffen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
mit	APPR	mit-i
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Prämisse	N.Reg.Dat.Sg.Fem	Prämisse-n
-	SYM.Pun.Hyph	--x
genauso	ADV	genauso-a
wie	CONJ.Comp	wie-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
-	SYM.Pun.Hyph	--x
nicht	PART.Neg	nicht-x
einverstanden	ADJD.Pos	einverstanden-j
sind	VFIN.Aux.1.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
besser	ADJD.Comp	gut-j
dem	PRO.Dem.Subst.Dat.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
zu	PART.Zu	zu-x
widersprechen	VINF.Full	widersprechen-v
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
so	ADV	so-a
viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
glauben	VFIN.Full.3.Pl.Pres.Ind	glauben-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#contradict	N.Reg.Nom.Sg.Fem	#contradict-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
denken	VFIN.Full.1.Pl.Pres.Ind	denken-v
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
uns	PRO.Refl.Subst.1.Acc.Pl.*	sie-p
einer	ART.Indef.Dat.Sg.Fem	eine-x
großen	ADJA.Pos.Dat.Sg.Fem	groß-j
Anzahl	N.Reg.Dat.Sg.Fem	Anzahl-n
von	APPR	von-i
Menschen	N.Reg.Dat.Pl.Masc	Mensch-n
anschließen	VINF.Full	anschließen-v
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
<g/>
,	SYM.Pun.Comma	,-x
denn	CONJ.Coord	denn-c
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
wurden	VFIN.Aux.3.Pl.Past.Ind	werden-v
in	APPR	in-i
die	ART.Def.Acc.Sg.Fem	die-x
Irre	N.Reg.Acc.Sg.Fem	Irre-n
geführt	VPP.Full.Psp	führen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hoffen	VFIN.Full.1.Pl.Pres.Ind	hoffen-v
<g/>
,	SYM.Pun.Comma	,-x
auch	ADV	auch-a
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
dafür	PROADV.Dem	dafür-x
entscheiden	VINF.Full	entscheiden-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Wahrheit	N.Reg.Nom.Sg.Fem	Wahrheit-n
wichtig	ADJD.Pos	wichtig-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hätten	VFIN.Aux.1.Pl.Past.Subj	haben-v
nie	ADV	nie-a
ein	ART.Indef.Acc.Sg.Neut	eine-x
freies	ADJA.Pos.Acc.Sg.Neut	frei-j
Betriebssystem	N.Reg.Acc.Sg.Neut	Betriebssystem-n
entwickeln	VINF.Full	entwickeln-v
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
ohne	CONJ.SubInf	ohne-c
zunächst	ADV	zunächst-a
die	ART.Def.Acc.Sg.Fem	die-x
Überzeugung	N.Reg.Acc.Sg.Fem	Überzeugung-n
der	ART.Def.Gen.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Gen.Pl.Masc	meiste-p
Menschen	N.Reg.Gen.Pl.Masc	Mensch-n
zu	PART.Zu	zu-x
verleugnen	VINF.Full	verleugnen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
legitim	ADJD.Pos	legitim-j
und	CONJ.Coord	und-c
hinnehmbar	ADJD.Pos	hinnehmbar-j
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
viele	PRO.Indef.Attr.Acc.Pl.Neut	viele-p
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
nennen	VFIN.Full.3.Pl.Pres.Ind	nennen-v
<g/>
,	SYM.Pun.Comma	,-x
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
das	PRO.Dem.Subst.Acc.Sg.Neut	die-p
nicht	PART.Neg	nicht-x
richtig	ADJD.Pos	richtig-j
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#somanyright	N.Reg.Nom.Sg.Fem	#somanyright-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
denken	VFIN.Full.1.Pl.Pres.Ind	denken-v
nicht	PART.Neg	nicht-x
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
die	ART.Def.Nom.Sg.Fem	die-x
Popularität	N.Reg.Nom.Sg.Fem	Popularität-n
eines	ART.Indef.Gen.Sg.Masc	eine-x
Fehlers	N.Reg.Gen.Sg.Masc	Fehler-n
diesen	PRO.Dem.Attr.Acc.Sg.Masc	diese-p
zur	APPRART.Dat.Sg.Fem	zu-i
Wahrheit	N.Reg.Dat.Sg.Fem	Wahrheit-n
führt	VFIN.Full.3.Sg.Pres.Ind	führen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
nicht	PART.Neg	nicht-x
besser	ADJD.Comp	gut-j
das	ART.Def.Nom.Sg.Neut	die-x
System	N.Reg.Nom.Sg.Neut	System-n
nach	APPR	nach-i
den	ART.Def.Dat.Pl.Masc	die-x
Namen	N.Reg.Dat.Pl.Masc	Name-n
zu	PART.Zu	zu-x
benennen	VINF.Full	benennen-v
<g/>
,	SYM.Pun.Comma	,-x
den	PRO.Rel.Subst.Acc.Sg.Masc	die-p
die	ART.Def.Nom.Pl.Masc	die-x
meisten	PRO.Indef.Attr.Nom.Pl.Masc	meiste-p
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
bereits	ADV	bereits-a
kennen	VFIN.Full.3.Pl.Pres.Ind	kennen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#knownname	N.Reg.Nom.Sg.Fem	#knownname-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Nutzer	N.Reg.Nom.Pl.Masc	Nutzer-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
durchaus	ADV	durchaus-a
dazulernen	VINF.Full	dazulernen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Da	CONJ.SubFin	da-c
GNU	N.Name.Nom.Sg.*	GNU-n
<g/>
/	SYM.Pun.Slash	/-x
<g/>
Linux	N.Reg.Nom.Sg.Neut	Linux-n
auch	ADV	auch-a
das	ART.Def.Acc.Sg.Neut	die-x
Wort	N.Reg.Acc.Sg.Neut	Wort-n
Linux	N.Reg.Nom.Sg.Neut	Linux-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
erkennbar	ADJD.Pos	erkennbar-j
worüber	PROADV.Inter	worüber-x
man	PRO.Indef.Subst.Nom.Sg.*	man-p
spricht	VFIN.Full.3.Sg.Pres.Ind	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wenn	CONJ.SubFin	wenn-c
man	PRO.Indef.Subst.Nom.Sg.*	man-p
einmal	ADV	einmal-a
eine	ART.Indef.Acc.Sg.Fem	eine-x
Weile	N.Reg.Acc.Sg.Fem	Weile-n
GNU	N.Name.Nom.Sg.Neut	GNU-n
(	SYM.Paren.Left	(-x
<g/>
oft	ADV	oft-a
fälschlicherweise	ADV	fälschlicherweise-a
als	APPR	als-i
"	SYM.Quot.Left	"-x
<g/>
Linux	N.Reg.Acc.Sg.Neut	Linux-n
<g/>
"	SYM.Quot.Left	"-x
bezeichnet	VFIN.Full.3.Sg.Pres.Ind	bezeichnen-v
<g/>
)	SYM.Paren.Right	)-x
voranstellt	VFIN.Full.3.Sg.Pres.Ind	voranstellen-v
<g/>
,	SYM.Pun.Comma	,-x
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
alle	PRO.Indef.Subst.Acc.Pl.*	alle-p
verstehen	VINF.Full	verstehen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Viele	PRO.Indef.Subst.Nom.Pl.*	viele-p
interessieren	VFIN.Full.3.Pl.Pres.Ind	interessieren-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
dafür	PROADV.Dem	dafür-x
was	PRO.Indef.Subst.*.*.Neut	was-p
praktisch	ADJD.Pos	praktisch-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
oder	CONJ.Coord	oder-c
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
gewinnt	VFIN.Full.3.Sg.Pres.Ind	gewinnen-v
<g/>
,	SYM.Pun.Comma	,-x
nicht	PART.Neg	nicht-x
ob	CONJ.SubFin	ob-c
Thesen	N.Reg.Nom.Pl.Fem	These-n
richtig	ADJD.Pos	richtig-j
oder	CONJ.Coord	oder-c
falsch	ADJD.Pos	falsch-j
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Könnte	VFIN.Mod.3.Sg.Past.Subj	können-v
man	PRO.Indef.Subst.Nom.Sg.*	man-p
nicht	PART.Neg	nicht-x
mehr	ADV	mehr-a
von	APPR	von-i
deren	PRO.Dem.Subst.Gen.Sg.Fem	die-p
Unterstützung	N.Reg.Dat.Sg.Fem	Unterstützung-n
durch	APPR	durch-i
einen	ART.Indef.Acc.Sg.Masc	eine-x
anderen	ADJA.Pos.Acc.Sg.Masc	ander-j
Weg	N.Reg.Acc.Sg.Masc	Weg-n
bekommen	VPP.Full.Psp	bekommen-v
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
(	SYM.Paren.Left	(-x
<g/>
#winning	N.Reg.Nom.Sg.Fem	#winning-n
<g/>
)	SYM.Paren.Right	)-x
</s>
</align>
<align>
<s>
Sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
nur	ADV	nur-a
dafür	PROADV.Dem	dafür-x
zu	PART.Zu	zu-x
interessieren	VINF.Full	interessieren-v
was	PRO.Indef.Subst.Nom.Sg.Neut	was-p
praktisch	ADJD.Pos	praktisch-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
oder	CONJ.Coord	oder-c
wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
gewinnt	VFIN.Full.3.Sg.Pres.Ind	gewinnen-v
<g/>
,	SYM.Pun.Comma	,-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
amoralische	ADJA.Pos.Nom.Sg.Fem	amoralisch-j
Einstellung	N.Reg.Nom.Sg.Fem	Einstellung-n
zum	APPRART.Dat.Sg.Neut	zu-i
Leben	N.Reg.Dat.Sg.Neut	Leben-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Unfreie	ADJA.Pos.Nom.Sg.Fem	unfrei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
ein	ART.Indef.Nom.Sg.Neut	eine-x
Beispiel	N.Reg.Nom.Sg.Neut	Beispiel-n
dieser	PRO.Dem.Attr.Gen.Sg.Fem	diese-p
amoralischen	ADJA.Pos.Gen.Sg.Fem	amoralisch-j
Anschauung	N.Reg.Gen.Sg.Fem	Anschauung-n
und	CONJ.Coord	und-c
zieht	VFIN.Full.3.Sg.Pres.Ind	ziehen-v
daraus	PROADV.Dem	daraus-x
einen	ART.Indef.Acc.Sg.Masc	eine-x
großen	ADJA.Pos.Acc.Sg.Masc	groß-j
Gewinn	N.Reg.Acc.Sg.Masc	Gewinn-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Deshalb	PROADV.Dem	deshalb-x
wäre	VFIN.Aux.3.Sg.Past.Subj	sein-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
langfristig	ADJD.Pos	langfristig-j
kontraproduktiv	ADJD.Pos	kontraproduktiv-j
<g/>
,	SYM.Pun.Comma	,-x
uns	PRO.Pers.Subst.1.Dat.Pl.*	sie-p
dieser	PRO.Dem.Attr.Dat.Sg.Fem	diese-p
Anschauung	N.Reg.Dat.Sg.Fem	Anschauung-n
zu	PART.Zu	zu-x
unterwerfen	VINF.Full	unterwerfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
werden	VFIN.Aux.1.Pl.Pres.Ind	werden-v
weiterhin	ADV	weiterhin-a
von	APPR	von-i
richtig	ADJD.Pos	richtig-j
und	CONJ.Coord	und-c
falsch	ADJD.Pos	falsch-j
sprechen	VINF.Full	sprechen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wir	PRO.Pers.Subst.1.Nom.Pl.*	sie-p
hoffen	VFIN.Full.1.Pl.Pres.Ind	hoffen-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
einer	PRO.Indef.Subst.Dat.Sg.Fem	eine-p
derjenigen	PRO.Dem.Subst.Gen.Pl.*	diejenige-p
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
richtig	ADJD.Pos	richtig-j
und	CONJ.Coord	und-c
falsch	ADJD.Pos	falsch-j
eine	ART.Indef.Acc.Sg.Fem	eine-x
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
spielen	VINF.Full	spielen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/education/education.html	N.Name	[url]-n
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
und	CONJ.Coord	und-c
Bildung	N.Reg.Nom.Sg.Fem	Bildung-n
Wie	PROADV.Inter	wie-x
bezieht	VFIN.Full.3.Sg.Pres.Ind	beziehen-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
auf	APPR	auf-i
Bildung	N.Reg.Acc.Sg.Fem	Bildung-n
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
Software-Freiheit	N.Reg.Nom.Sg.Fem	Software-Freiheit-n
spielt	VFIN.Full.3.Sg.Pres.Ind	spielen-v
im	APPRART.Dat.Sg.Masc	in-i
Bildungsbereich	N.Reg.Dat.Sg.Masc	Bildungsbereich-n
eine	ART.Indef.Acc.Sg.Fem	eine-x
grundlegende	ADJA.Pos.Acc.Sg.Fem	grundlegend-j
Rolle	N.Reg.Acc.Sg.Fem	Rolle-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Bildungseinrichtungen	N.Reg.Nom.Pl.Fem	Bildungseinrichtung-n
aller	PRO.Indef.Attr.Gen.Pl.Masc	alle-p
Bereiche	N.Reg.Gen.Pl.Masc	Bereich-n
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
nutzen	VINF.Full	nutzen-v
und	CONJ.Coord	und-c
lehren	VINF.Full	lehren-v
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
die	ART.Def.Nom.Sg.Fem	die-x
einzige	ADJA.Pos.Nom.Sg.Fem	einzig-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Sg.Fem	die-p
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
ihre	PRO.Poss.Attr.Acc.Pl.Fem	ihre-p
maßgeblichen	ADJA.Pos.Acc.Pl.Fem	maßgeblich-j
Aufgaben	N.Reg.Acc.Pl.Fem	Aufgabe-n
ermöglicht	VPP.Full.Psp	ermöglichen-v
zu	PART.Zu	zu-x
erledigen	VINF.Full	erledigen-v
<g/>
:	SYM.Pun.Colon	:-x
Menschliches	ADJA.Pos.Acc.Sg.Neut	menschlich-j
Wissen	N.Reg.Acc.Sg.Neut	Wissen-n
zu	PART.Zu	zu-x
vermitteln	VINF.Full	vermitteln-v
und	CONJ.Coord	und-c
Schülerinnen	N.Reg.Acc.Pl.Fem	Schülerin-n
und	CONJ.Coord	und-c
Schüler	N.Reg.Acc.Pl.Masc	Schüler-n
darauf	PROADV.Dem	darauf-x
vorbereiten	VINF.Full	vorbereiten-v
<g/>
,	SYM.Pun.Comma	,-x
gute	ADJA.Pos.Acc.Pl.Neut	gut-j
Mitglieder	N.Reg.Acc.Pl.Neut	Mitglied-n
ihrer	PRO.Poss.Attr.Gen.Sg.Fem	ihre-p
Gesellschaft	N.Reg.Gen.Sg.Fem	Gesellschaft-n
zu	PART.Zu	zu-x
sein	VINF.Aux	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Der	ART.Def.Nom.Sg.Masc	die-x
Quellcode	N.Reg.Nom.Sg.Masc	Quellcode-n
und	CONJ.Coord	und-c
die	ART.Def.Nom.Pl.Fem	die-x
Methoden	N.Reg.Nom.Pl.Fem	Methode-n
für	APPR	für-i
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Teil	N.Reg.Nom.Sg.Masc	Teil-n
menschlichen	ADJA.Pos.Gen.Sg.Neut	menschlich-j
Wissens	N.Reg.Gen.Sg.Neut	Wissen-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Im	APPRART.Dat.Sg.Masc	in-i
Gegensatz	N.Reg.Dat.Sg.Masc	Gegensatz-n
dazu	PROADV.Dem	dazu-x
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
geheimes	ADJA.Pos.Nom.Sg.Neut	geheim-j
<g/>
,	SYM.Pun.Comma	,-x
beschränktes	ADJA.Pos.Nom.Sg.Neut	beschränkt-j
Wissen	N.Reg.Nom.Sg.Neut	Wissen-n
<g/>
,	SYM.Pun.Comma	,-x
was	PRO.Rel.Subst.Nom.Sg.Neut	was-p
das	ART.Def.Acc.Sg.Neut	die-x
Gegenteil	N.Reg.Acc.Sg.Neut	Gegenteil-n
der	ART.Def.Gen.Sg.Fem	die-x
Aufgabe	N.Reg.Gen.Sg.Fem	Aufgabe-n
von	APPR	von-i
Bildungseinrichtungen	N.Reg.Dat.Pl.Fem	Bildungseinrichtung-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
fördert	VFIN.Full.3.Sg.Pres.Ind	fördern-v
Bildung	N.Reg.Acc.Sg.Fem	Bildung-n
<g/>
,	SYM.Pun.Comma	,-x
proprietäre	ADJA.Pos.Nom.Sg.Fem	proprietär-j
Software	N.Reg.Nom.Sg.Fem	Software-n
verbietet	VFIN.Full.3.Sg.Pres.Ind	verbieten-v
Bildung	N.Reg.Acc.Sg.Fem	Bildung-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freie	ADJA.Pos.Nom.Sg.Fem	frei-j
Software	N.Reg.Nom.Sg.Fem	Software-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
nicht	PART.Neg	nicht-x
nur	ADV	nur-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
technische	ADJA.Pos.Nom.Sg.Fem	technisch-j
<g/>
,	SYM.Pun.Comma	,-x
sondern	CONJ.Coord	sondern-c
eine	ART.Indef.Nom.Sg.Fem	eine-x
ethische	ADJA.Pos.Nom.Sg.Fem	ethisch-j
<g/>
,	SYM.Pun.Comma	,-x
soziale	ADJA.Pos.Nom.Sg.Fem	sozial-j
und	CONJ.Coord	und-c
politische	ADJA.Pos.Nom.Sg.Fem	politisch-j
Frage	N.Reg.Nom.Sg.Fem	Frage-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
Frage	N.Reg.Nom.Sg.Fem	Frage-n
der	ART.Def.Gen.Pl.Neut	die-x
Menschenrechte	N.Reg.Gen.Pl.Neut	Menschenrecht-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
Softwarenutzer	N.Reg.Acc.Pl.Masc	Softwarenutzer-n
haben	VINF.Aux	haben-v
sollten	VFIN.Mod.3.Pl.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Freiheit	N.Reg.Nom.Sg.Fem	Freiheit-n
und	CONJ.Coord	und-c
Zusammenarbeit	N.Reg.Nom.Sg.Fem	Zusammenarbeit-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
unerlässliche	ADJA.Pos.Nom.Pl.Masc	unerlässlich-j
Werte	N.Reg.Nom.Pl.Masc	Wert-n
von	APPR	von-i
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
GNU-System	N.Reg.Nom.Sg.Neut	GNU-System-n
realisiert	VFIN.Full.3.Sg.Pres.Ind	realisieren-v
diese	PRO.Dem.Attr.Acc.Pl.Masc	diese-p
Werte	N.Reg.Acc.Pl.Masc	Wert-n
und	CONJ.Coord	und-c
das	ART.Def.Acc.Sg.Neut	die-x
Prinzip	N.Reg.Acc.Sg.Neut	Prinzip-n
des	ART.Def.Gen.Sg.Neut	die-x
Teilens	N.Reg.Gen.Sg.Neut	Teilen-n
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
gemeinsame	ADJA.Pos.Acc.Sg.Fem	gemeinsam-j
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
gut	ADJD.Pos	gut-j
und	CONJ.Coord	und-c
nützlich	ADJD.Pos	nützlich-j
für	APPR	für-i
den	ART.Def.Acc.Sg.Masc	die-x
menschlichen	ADJA.Pos.Acc.Sg.Masc	menschlich-j
Fortschritt	N.Reg.Acc.Sg.Masc	Fortschritt-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Weitere	ADJA.Comp.Nom.Pl.Fem	weit-j
Informationen	N.Reg.Nom.Pl.Fem	Information-n
unter	APPR	unter-i
Freie	ADJA.Pos.Acc.Pl.Fem	frei-j
Software	N.Reg.Acc.Pl.Fem	Software-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Was	PRO.Inter.Subst.Nom.Sg.Neut	was-p
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	PRO.Dem.Subst.Nom.Sg.Neut	die-p
<g/>
?	SYM.Pun.Sent	?-x
</s>
</align>
<align>
<s>
und	CONJ.Coord	und-c
Warum	PROADV.Inter	warum-x
Software	N.Reg.Nom.Sg.Fem	Software-n
frei	ADJD.Pos	frei-j
sein	VINF.Aux	sein-v
sollte	VFIN.Mod.3.Sg.Past.Ind	sollen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
https://www.gnu.org/education/edu-software-gcompris.html	N.Name	[url]-n
GCompris	N.Name.Gen.Sg.*	GCompris-n
Beschreibung	N.Reg.Nom.Sg.Fem	Beschreibung-n
GCompris-Oberfläche	N.Reg.Nom.Sg.Fem	GCompris-Oberfläche-n
mit	APPR	mit-i
verschiedenen	ADJA.Pos.Dat.Pl.Fem	verschieden-j
Aktivitäten	N.Reg.Dat.Pl.Fem	Aktivität-n
</s>
</align>
<align>
<s>
GCompris	N.Name.Nom.Sg.*	GCompris-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
eine	ART.Indef.Nom.Sg.Fem	eine-x
betriebssystemunabhängige	ADJA.Pos.Nom.Sg.Fem	betriebssystemunabhängig-j
und	CONJ.Coord	und-c
komplette	ADJA.Pos.Nom.Sg.Fem	komplett-j
Lernsoftware	N.Reg.Nom.Sg.Fem	Lernsoftware-n
für	APPR	für-i
Kinder	N.Reg.Acc.Pl.Neut	Kind-n
im	APPRART.Dat.Sg.Neut	in-i
Alter	N.Reg.Dat.Sg.Neut	Alter-n
von	APPR	von-i
2	CARD	2-m
bis	CONJ.Coord	bis-c
10	CARD	10-m
Jahren	N.Reg.Dat.Pl.Neut	Jahr-n
und	CONJ.Coord	und-c
Teil	N.Reg.Dat.Sg.Masc	Teil-n
des	ART.Def.Gen.Sg.Neut	die-x
GNU-Projekts	N.Reg.Gen.Sg.Neut	GNU-Projekt-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
umfasst	VFIN.Full.3.Sg.Pres.Ind	umfassen-v
auf	APPR	auf-i
unterhaltsame	ADJA.Pos.Acc.Sg.Fem	unterhaltsam-j
Weise	N.Reg.Acc.Sg.Fem	Weise-n
mehr	PRO.Indef.Attr.*.*.*	mehr-p
als	CONJ.Comp	als-c
140	CARD	[number]-m
Leistungsspektren	N.Reg.Acc.Pl.Neut	Leistungsspektrum-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Neut	die-p
jüngeren	ADJA.Comp.Dat.Pl.Neut	jung-j
Kindern	N.Reg.Dat.Pl.Neut	Kind-n
helfen	VFIN.Full.3.Pl.Pres.Ind	helfen-v
<g/>
,	SYM.Pun.Comma	,-x
Fertigkeiten	N.Reg.Acc.Pl.Fem	Fertigkeit-n
wie	CONJ.Comp	wie-c
die	ART.Def.Nom.Sg.Fem	die-x
Erkennung	N.Reg.Nom.Sg.Fem	Erkennung-n
von	APPR	von-i
Zeichen	N.Reg.Dat.Pl.Neut	Zeichen-n
und	CONJ.Coord	und-c
Zahlen	N.Reg.Dat.Pl.Fem	Zahl-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Bedienung	N.Reg.Nom.Sg.Fem	Bedienung-n
von	APPR	von-i
Maus	N.Reg.Dat.Sg.Fem	Maus-n
und	CONJ.Coord	und-c
Tastatur	N.Reg.Dat.Sg.Fem	Tastatur-n
<g/>
,	SYM.Pun.Comma	,-x
einfache	ADJA.Pos.Nom.Sg.Fem	einfach-j
Algebra	N.Reg.Nom.Sg.Fem	Algebra-n
<g/>
,	SYM.Pun.Comma	,-x
das	ART.Def.Nom.Sg.Neut	die-x
Lesen	N.Reg.Dat.Sg.Neut	Lese-n
der	ART.Def.Gen.Sg.Fem	die-x
Uhrzeit	N.Reg.Gen.Sg.Fem	Uhrzeit-n
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
analogen	ADJA.Pos.Dat.Sg.Fem	analog-j
Uhr	N.Reg.Dat.Sg.Fem	Uhr-n
<g/>
,	SYM.Pun.Comma	,-x
Vektorzeichnungen	N.Reg.Nom.Pl.Fem	Vektorzeichnung-n
<g/>
,	SYM.Pun.Comma	,-x
spielerisches	ADJA.Pos.Nom.Sg.Neut	spielerisch-j
Sprachenlernen	N.Reg.Nom.Sg.Neut	Sprachenlernen-n
und	CONJ.Coord	und-c
vieles	PRO.Indef.Subst.Nom.Sg.Neut	viele-p
mehr	ADV	mehr-a
zu	PART.Zu	zu-x
erlernen	VINF.Full	erlernen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
enthält	VFIN.Full.3.Sg.Pres.Ind	enthalten-v
eine	ART.Indef.Acc.Sg.Fem	eine-x
einfache	ADJA.Pos.Acc.Sg.Fem	einfach-j
Textverarbeitung	N.Reg.Acc.Sg.Fem	Textverarbeitung-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
Dokumente	N.Reg.Acc.Pl.Neut	Dokument-n
mit	APPR	mit-i
einfachen	ADJA.Pos.Dat.Pl.Fem	einfach-j
Formatierungen	N.Reg.Dat.Pl.Fem	Formatierung-n
zu	PART.Zu	zu-x
erstellen	VINF.Full	erstellen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
weiteres	ADJA.Comp.Nom.Sg.Neut	weit-j
Merkmal	N.Reg.Nom.Sg.Neut	Merkmal-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
Animationen	N.Reg.Nom.Pl.Fem	Animation-n
<g/>
,	SYM.Pun.Comma	,-x
die	PRO.Rel.Subst.Nom.Pl.Fem	die-p
als	APPR	als-i
einfache	ADJA.Pos.Nom.Sg.Fem	einfach-j
und	CONJ.Coord	und-c
wirkungsvolle	ADJA.Pos.Nom.Sg.Fem	wirkungsvoll-j
Methode	N.Reg.Nom.Sg.Fem	Methode-n
eingesetzt	VPP.Full.Psp	einsetzen-v
werden	VINF.Aux	werden-v
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
unterstützend	ADJD.Pos	unterstützend-j
Geschichten	N.Reg.Acc.Pl.Fem	Geschichte-n
zu	PART.Zu	zu-x
erzählen	VINF.Full	erzählen-v
<g/>
,	SYM.Pun.Comma	,-x
damit	CONJ.SubFin	damit-c
die	ART.Def.Nom.Sg.Fem	die-x
Kommunikation	N.Reg.Nom.Sg.Fem	Kommunikation-n
der	ART.Def.Gen.Pl.Neut	die-x
Kinder	N.Reg.Gen.Pl.Neut	Kind-n
untereinander	ADV	untereinander-a
verbessert	VPP.Full.Psp	verbessern-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
und	CONJ.Coord	und-c
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
hilft	VFIN.Full.3.Sg.Pres.Ind	helfen-v
<g/>
,	SYM.Pun.Comma	,-x
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
auszudrücken	VINF.Full.zu	ausdrücken-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GCompris	N.Name.Nom.Sg.*	GCompris-n
umfasst	VFIN.Full.3.Sg.Pres.Ind	umfassen-v
mehrere	PRO.Indef.Attr.Acc.Pl.Fem	mehrere-p
Aktivitäten	N.Reg.Acc.Pl.Fem	Aktivität-n
<g/>
,	SYM.Pun.Comma	,-x
gruppiert	VFIN.Full.3.Sg.Pres.Ind	gruppieren-v
auf	APPR	auf-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
gelben	ADJA.Pos.Dat.Sg.Fem	gelb-j
Symbolleiste	N.Reg.Dat.Sg.Fem	Symbolleiste-n
an	APPR	an-i
der	ART.Def.Dat.Sg.Fem	die-x
linken	ADJA.Pos.Dat.Sg.Fem	link|links-j
Bildschirmseite	N.Reg.Dat.Sg.Fem	Bildschirmseite-n
<g/>
,	SYM.Pun.Comma	,-x
aus	APPR	aus-i
der	PRO.Rel.Subst.Dat.Sg.Fem	die-p
das	ART.Def.Nom.Sg.Neut	die-x
Kind	N.Reg.Nom.Sg.Neut	Kind-n
wählen	VINF.Full	wählen-v
kann	VFIN.Mod.3.Sg.Pres.Ind	können-v
<g/>
,	SYM.Pun.Comma	,-x
sobald	CONJ.SubFin	sobald-c
das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
gestartet	VPP.Full.Psp	starten-v
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Eine	ART.Indef.Nom.Sg.Fem	eine-x
solche	PRO.Indef.Attr.Acc.Sg.Fem	solche-p
Gestaltung	N.Reg.Acc.Sg.Fem	Gestaltung-n
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
leicht	ADJD.Pos	leicht-j
<g/>
,	SYM.Pun.Comma	,-x
neue	ADJA.Pos.Acc.Pl.Fem	neu-j
Aktivitäten	N.Reg.Acc.Pl.Fem	Aktivität-n
hinzuzufügen	VINF.Full.zu	hinzufügen-v
oder	CONJ.Coord	oder-c
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
benutzerdefiniert	ADJD.Pos	benutzerdefiniert-j
anzupassen	VINF.Full.zu	anpassen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
selbst	ADV	selbst-a
und	CONJ.Coord	und-c
alle	PRO.Indef.Attr.Nom.Pl.Fem	alle-p
Aktivitäten	N.Reg.Nom.Pl.Fem	Aktivität-n
sind	VFIN.Aux.3.Pl.Pres.Ind	sein-v
in	APPR	in-i
vielen	PRO.Indef.Attr.Dat.Pl.Fem	viele-p
verschiedenen	ADJA.Pos.Dat.Pl.Fem	verschieden-j
Sprachen	N.Reg.Dat.Pl.Fem	Sprache-n
verfügbar	ADJD.Pos	verfügbar-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Weitere	ADJA.Comp.Acc.Pl.Fem	weit-j
Informationen	N.Reg.Acc.Pl.Fem	Information-n
finden	VFIN.Full.3.Pl.Pres.Ind	finden-v
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
im	APPRART.Dat.Sg.Neut	in-i
Freie-Software-Verzeichnis	N.Reg.Dat.Sg.Neut	Freie-Software-Verzeichnis-n
der	ART.Def.Gen.Sg.Fem	die-x
FSF	N.Name.Gen.Sg.Fem	FSF-n
und	CONJ.Coord	und-c
dem	ART.Def.Dat.Sg.Masc	die-x
offiziellen	ADJA.Pos.Dat.Sg.Masc	offiziell-j
Webauftritt	N.Reg.Dat.Sg.Masc	Webauftritt-n
von	APPR	von-i
GCompris	N.Name.Dat.Sg.Neut	GCompris-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Wer	PRO.Inter.Subst.Nom.Sg.Masc	wer-p
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
GCompris	N.Reg.Acc.Pl.Masc	GCompris-n
und	CONJ.Coord	und-c
wie	PROADV.Inter	wie-x
</s>
</align>
<align>
<s>
GCompris	N.Name.Gen.Sg.*	GCompris-n
<g/>
'	SYM.Quot.Right	'-x
aktivitätsbasierte	ADJA.Pos.Nom.Sg.Fem	aktivitätsbasiert-j
Gestaltung	N.Reg.Nom.Sg.Fem	Gestaltung-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
sehr	ADV	sehr-a
einfach	ADV	einfach-a
an	APPR	an-i
besondere	ADJA.Pos.Acc.Pl.Fem	besonder-j
Umgebungen	N.Reg.Acc.Pl.Fem	Umgebung-n
anpassbar	ADJD.Pos	anpassbar-j
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
Beispiel	N.Reg.Nom.Sg.Neut	Beispiel-n
für	APPR	für-i
die	ART.Def.Acc.Sg.Fem	die-x
innovative	ADJA.Pos.Acc.Sg.Fem	innovativ-j
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
des	ART.Def.Gen.Sg.Neut	die-x
Programms	N.Reg.Gen.Sg.Neut	Programm-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
das	ART.Def.Nom.Sg.Neut	die-x
Insight-Projekt	N.Reg.Nom.Sg.Neut	Insight-Projekt-n
von	APPR	von-i
Kerala	N.Name.Dat.Sg.Neut	Kerala-n
<g/>
,	SYM.Pun.Comma	,-x
Indien	N.Name.Dat.Sg.Neut	Indien-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
soll	VFIN.Mod.3.Sg.Pres.Ind	sollen-v
die	ART.Def.Acc.Pl.Masc	die-x
Vorteile	N.Reg.Acc.Pl.Masc	Vorteil-n
von	APPR	von-i
freier	ADJA.Pos.Dat.Sg.Fem	frei-j
Software	N.Reg.Dat.Sg.Fem	Software-n
unterschiedlich	ADJD.Pos	unterschiedlich-j
behinderter	ADJA.Pos.Gen.Pl.Masc	behindert-j
Menschen	N.Reg.Gen.Pl.Masc	Mensch-n
im	APPRART.Dat.Sg.Neut	in-i
Land	N.Reg.Dat.Sg.Neut	Land-n
näher	ADJD.Comp	nah-j
bringen	VINF.Full	bringen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Sie	PRO.Pers.Subst.3.Nom.Pl.*	sie-p
fanden	VFIN.Full.3.Pl.Past.Ind	finden-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
GCompris	N.Name.Nom.Sg.*	GCompris-n
ein	ART.Indef.Nom.Sg.Neut	eine-x
mächtiges	ADJA.Pos.Nom.Sg.Neut	mächtig-j
Hilfsmittel	N.Reg.Nom.Sg.Neut	Hilfsmittel-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Pl.Fem	die-x
kommunikativen	ADJA.Pos.Acc.Pl.Fem	kommunikativ-j
und	CONJ.Coord	und-c
motorischen	ADJA.Pos.Acc.Pl.Fem	motorisch-j
Fähigkeiten	N.Reg.Acc.Pl.Fem	Fähigkeit-n
der	ART.Def.Gen.Pl.Masc	die-x
geistig	ADJD.Pos	geistig-j
behinderten	ADJA.Pos.Gen.Pl.Masc	behindert-j
Menschen	N.Reg.Gen.Pl.Masc	Mensch-n
wie	CONJ.Comp	wie-c
Kinder	N.Reg.Gen.Pl.Neut	Kind-n
mit	APPR	mit-i
Autismus	N.Reg.Dat.Sg.Masc	Autismus-n
zu	PART.Zu	zu-x
verbessern	VINF.Full	verbessern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Projekt	N.Reg.Nom.Sg.Neut	Projekt-n
nutzt	VFIN.Full.3.Sg.Pres.Ind	nutzen-v
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
und	CONJ.Coord	und-c
passte	VFIN.Full.3.Sg.Past.Ind	passen-v
es	PRO.Pers.Subst.3.Acc.Sg.Neut	sie-p
den	ART.Def.Dat.Pl.Neut	die-x
besonderen	ADJA.Pos.Dat.Pl.Neut	besonder-j
Bedürfnissen	N.Reg.Dat.Pl.Neut	Bedürfnis-n
seiner	PRO.Poss.Attr.Gen.Sg.Fem	seine-p
Zielgruppe	N.Reg.Gen.Sg.Fem	Zielgruppe-n
an	PART.Verb	an-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Insight-Team	N.Reg.Nom.Sg.Neut	Insight-Team-n
implementierte	VFIN.Full.3.Sg.Past.Ind	implementieren-v
für	APPR	für-i
Lehrer	N.Reg.Acc.Sg.Masc	Lehrer-n
ein	ART.Indef.Acc.Sg.Neut	eine-x
Ausbildungsmodul	N.Reg.Acc.Sg.Neut	Ausbildungsmodul-n
mit	APPR	mit-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
Anleitung	N.Reg.Dat.Sg.Fem	Anleitung-n
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
verschiedene	ADJA.Pos.Nom.Pl.Fem	verschieden-j
Aktivitäten	N.Reg.Nom.Pl.Fem	Aktivität-n
von	APPR	von-i
GCompris	N.Name.Dat.Sg.Neut	GCompris-n
beim	APPRART.Dat.Sg.Neut	bei-i
Arbeiten	N.Reg.Dat.Sg.Neut	Arbeit-n
mit	APPR	mit-i
Kindern	N.Reg.Dat.Pl.Neut	Kind-n
mit	APPR	mit-i
besonderen	ADJA.Pos.Dat.Pl.Neut	besonder-j
Bedürfnissen	N.Reg.Dat.Pl.Neut	Bedürfnis-n
helfen	VINF.Full	helfen-v
können	VINF.Mod	können-v
<g/>
,	SYM.Pun.Comma	,-x
Fähigkeiten	N.Reg.Acc.Pl.Fem	Fähigkeit-n
wie	CONJ.Comp	wie-c
Auge-Hand-Koordination	N.Reg.Acc.Sg.Fem	Auge-Hand-Koordination-n
<g/>
,	SYM.Pun.Comma	,-x
Gedächtnis	N.Reg.Acc.Sg.Neut	Gedächtnis-n
<g/>
,	SYM.Pun.Comma	,-x
Hören	N.Reg.Acc.Sg.Neut	Hören-n
und	CONJ.Coord	und-c
die	ART.Def.Acc.Sg.Fem	die-x
Verbesserung	N.Reg.Acc.Sg.Fem	Verbesserung-n
der	ART.Def.Gen.Sg.Fem	die-x
kindlichen	ADJA.Pos.Gen.Sg.Fem	kindlich-j
Aufmerksamkeitsspanne	N.Reg.Gen.Sg.Fem	Aufmerksamkeitsspanne-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Modul	N.Reg.Nom.Sg.Neut	Modul-n
spricht	VFIN.Full.3.Sg.Pres.Ind	sprechen-v
verschiedene	ADJA.Pos.Acc.Pl.Neut	verschieden-j
Bildungsniveaus	N.Reg.Acc.Pl.Neut	Bildungsniveau-n
von	APPR	von-i
Vorschule	N.Reg.Dat.Sg.Fem	Vorschule-n
bis	APPR	bis-i
zur	APPRART.Dat.Sg.Fem	zu-i
Grundschule	N.Reg.Dat.Sg.Fem	Grundschule-n
an	PART.Verb	an-x
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ein	ART.Indef.Nom.Sg.Neut	eine-x
kleines	ADJA.Pos.Nom.Sg.Neut	klein-j
Handbuch	N.Reg.Nom.Sg.Neut	Handbuch-n
richtet	VFIN.Full.3.Sg.Pres.Ind	richten-v
sich	PRO.Refl.Subst.3.Acc.Sg.*	sie-p
an	APPR	an-i
Eltern	N.Reg.Acc.Pl.*	Eltern-n
und	CONJ.Coord	und-c
Sonderschullehrkräfte	N.Reg.Acc.Pl.Neut	Sonderschullehrkräfte-n
bzw.	CONJ.Coord	bzw.-c
ErzieherInnen	N.Reg.Acc.Pl.Fem	Erzieherin-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
ihnen	PRO.Pers.Subst.3.Dat.Pl.*	sie-p
die	ART.Def.Acc.Sg.Fem	die-x
Nutzung	N.Reg.Acc.Sg.Fem	Nutzung-n
der	ART.Def.Gen.Sg.Fem	die-x
Software	N.Reg.Gen.Sg.Fem	Software-n
zu	PART.Zu	zu-x
erklären	VINF.Full	erklären-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
die	ART.Def.Acc.Pl.Fem	die-x
Fertigkeiten	N.Reg.Acc.Pl.Fem	Fertigkeit-n
der	ART.Def.Gen.Pl.Neut	die-x
Kinder	N.Reg.Gen.Pl.Neut	Kind-n
zu	PART.Zu	zu-x
verbessern	VINF.Full	verbessern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GCompris	N.Name.Nom.Sg.*	GCompris-n
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
auch	ADV	auch-a
verwendet	VPP.Full.Psp	verwenden-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
älteren	ADJA.Comp.Acc.Pl.Neut	alt-j
Kinder	N.Reg.Acc.Pl.Neut	Kind-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Acc.Sg.Fem	die-x
Beziehung	N.Reg.Acc.Sg.Fem	Beziehung-n
zwischen	APPR	zwischen-i
Zahlen	N.Reg.Dat.Pl.Fem	Zahl-n
zu	PART.Zu	zu-x
verstehen	VINF.Full	verstehen-v
<g/>
,	SYM.Pun.Comma	,-x
Grundrechenarten	N.Reg.Acc.Pl.Fem	Grundrechenart-n
zu	PART.Zu	zu-x
erlernen	VINF.Full	erlernen-v
<g/>
,	SYM.Pun.Comma	,-x
analytisches	ADJA.Pos.Acc.Sg.Neut	analytisch-j
Denken	N.Reg.Acc.Sg.Neut	Denken-n
zu	PART.Zu	zu-x
trainieren	VINF.Full	trainieren-v
und	CONJ.Coord	und-c
kommunikative	ADJA.Pos.Acc.Pl.Fem	kommunikativ-j
Fähigkeiten	N.Reg.Acc.Pl.Fem	Fähigkeit-n
wie	CONJ.Comp	wie-c
Rechtschreibung	N.Reg.Acc.Sg.Fem	Rechtschreibung-n
<g/>
,	SYM.Pun.Comma	,-x
Lesen	N.Reg.Acc.Pl.Fem	Lese-n
und	CONJ.Coord	und-c
Schreiben	N.Reg.Acc.Sg.Neut	Schreiben-n
zu	PART.Zu	zu-x
verbessern	VINF.Full	verbessern-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Warum	PROADV.Inter	warum-x
</s>
</align>
<align>
<s>
Lehrer	N.Reg.Nom.Pl.Masc	Lehrer-n
berichten	VFIN.Full.3.Pl.Pres.Ind	berichten-v
<g/>
,	SYM.Pun.Comma	,-x
dass	CONJ.SubFin	dass-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
für	APPR	für-i
sie	PRO.Pers.Subst.3.Acc.Pl.*	sie-p
äußerst	ADV	äußerst-a
leicht	ADJD.Pos	leicht-j
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
,	SYM.Pun.Comma	,-x
GCompris	N.Reg.Acc.Pl.Masc	GCompris-n
in	APPR	in-i
ihrem	PRO.Poss.Attr.Dat.Sg.Masc	ihre-p
Lehrplan	N.Reg.Dat.Sg.Masc	Lehrplan-n
einzusetzen	VINF.Full.zu	einsetzen-v
<g/>
,	SYM.Pun.Comma	,-x
da	CONJ.SubFin	da-c
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
intuitiv	ADJD.Pos	intuitiv-j
bedienbar	ADJD.Pos	bedienbar-j
und	CONJ.Coord	und-c
Kindern	N.Reg.Dat.Pl.Neut	Kind-n
Spaß	N.Reg.Acc.Sg.Masc	Spaß-n
macht	VFIN.Full.3.Sg.Pres.Ind	machen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
auch	ADV	auch-a
eine	ART.Indef.Nom.Sg.Fem	eine-x
hervorragende	ADJA.Pos.Nom.Sg.Fem	hervorragend-j
Quelle	N.Reg.Nom.Sg.Fem	Quelle-n
für	APPR	für-i
geistig	ADJD.Pos	geistig-j
behinderte	ADJA.Pos.Acc.Pl.Neut	behindert-j
Kinder	N.Reg.Acc.Pl.Neut	Kind-n
und	CONJ.Coord	und-c
Erwachsene	N.Reg.Acc.Pl.*	Erwachsene-n
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GCompris	N.Name.Nom.Sg.*	GCompris-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
zu	APPR	zu-i
einer	ART.Indef.Dat.Sg.Fem	eine-x
wichtigen	ADJA.Pos.Dat.Sg.Fem	wichtig-j
Ressource	N.Reg.Dat.Sg.Fem	Ressource-n
zur	APPRART.Dat.Sg.Fem	zu-i
Beschleunigung	N.Reg.Dat.Sg.Fem	Beschleunigung-n
des	ART.Def.Gen.Sg.Masc	die-x
kindlichen	ADJA.Pos.Gen.Sg.Masc	kindlich-j
Lernprozesses	N.Reg.Gen.Sg.Masc	Lernprozess-n
im	APPRART.Dat.Sg.Masc	in-i
Zusammenhang	N.Reg.Dat.Sg.Masc	Zusammenhang-n
mit	APPR	mit-i
Entwicklungsländern	N.Reg.Dat.Pl.Neut	Entwicklungsland-n
wie	CONJ.Comp	wie-c
Indien	N.Name.Dat.Sg.Neut	Indien-n
geworden	VPP.Aux.Psp	werden-v
<g/>
,	SYM.Pun.Comma	,-x
wo	PROADV.Inter	wo-x
die	ART.Def.Nom.Sg.Fem	die-x
einzige	ADJA.Pos.Nom.Sg.Fem	einzig-j
Möglichkeit	N.Reg.Nom.Sg.Fem	Möglichkeit-n
<g/>
,	SYM.Pun.Comma	,-x
Kinder	N.Reg.Nom.Pl.Neut	Kind-n
an	APPR	an-i
den	ART.Def.Acc.Sg.Masc	die-x
Umgang	N.Reg.Acc.Sg.Masc	Umgang-n
mit	APPR	mit-i
Rechnern	N.Reg.Dat.Pl.Masc	Rechner-n
zu	PART.Zu	zu-x
gewöhnen	VINF.Full	gewöhnen-v
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Schulzeit	N.Reg.Nom.Sg.Fem	Schulzeit-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
In	APPR	in-i
der	ART.Def.Dat.Sg.Fem	die-x
Schule	N.Reg.Dat.Sg.Fem	Schule-n
werden	VFIN.Aux.3.Pl.Pres.Ind	werden-v
die	ART.Def.Nom.Pl.Masc	die-x
Rechner	N.Reg.Nom.Pl.Masc	Rechner-n
oft	ADV	oft-a
gemeinsam	ADJD.Pos	gemeinsam-j
genutzt	VPP.Full.Psp	nutzen-v
und	CONJ.Coord	und-c
Kinder	N.Reg.Nom.Pl.Neut	Kind-n
können	VFIN.Mod.3.Pl.Pres.Ind	können-v
nur	ADV	nur-a
für	APPR	für-i
eine	ART.Indef.Acc.Sg.Fem	eine-x
begrenzte	ADJA.Pos.Acc.Sg.Fem	begrenzt-j
Zeit	N.Reg.Acc.Sg.Fem	Zeit-n
einzeln	ADJD.Pos	einzeln-j
darauf	PROADV.Dem	darauf-x
zugreifen	VINF.Full	zugreifen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
GCompris	N.Name.Nom.Sg.*	GCompris-n
ist	VFIN.Aux.3.Sg.Pres.Ind	sein-v
einfach	ADJD.Pos	einfach-j
und	CONJ.Coord	und-c
intuitiv	ADJD.Pos	intuitiv-j
zu	PART.Zu	zu-x
bedienen	VINF.Full	bedienen-v
und	CONJ.Coord	und-c
in	APPR	in-i
diesem	PRO.Dem.Attr.Dat.Sg.Neut	diese-p
Umfeld	N.Reg.Dat.Sg.Neut	Umfeld-n
besonders	ADV	besonders-a
nützlich	ADJD.Pos	nützlich-j
<g/>
,	SYM.Pun.Comma	,-x
weil	CONJ.SubFin	weil-c
praktisch	ADJD.Pos	praktisch-j
keine	PRO.Indef.Attr.Nom.Sg.Fem	keine-p
Zeit	N.Reg.Nom.Sg.Fem	Zeit-n
damit	PROADV.Dem	damit-x
verbracht	VPP.Full.Psp	verbrachen|verbringen-v
wird	VFIN.Aux.3.Sg.Pres.Ind	werden-v
zu	ADV	zu-a
verstehen	VINF.Full	verstehen-v
<g/>
,	SYM.Pun.Comma	,-x
wie	PROADV.Inter	wie-x
das	ART.Def.Nom.Sg.Neut	die-x
Programm	N.Reg.Nom.Sg.Neut	Programm-n
funktioniert	VFIN.Full.3.Sg.Pres.Ind	funktionieren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Mit	APPR	mit-i
GCompris	N.Reg.Dat.Pl.Masc	GCompris-n
entwickeln	VFIN.Full.3.Pl.Pres.Ind	entwickeln-v
Kinder	N.Reg.Nom.Pl.Neut	Kind-n
schnell	ADJD.Pos	schnell-j
die	ART.Def.Nom.Pl.Fem	die-x
benötigten	ADJA.Pos.Nom.Pl.Fem	benötigt-j
motorischen	ADJA.Pos.Nom.Pl.Fem	motorisch-j
Fähigkeiten	N.Reg.Nom.Pl.Fem	Fähigkeit-n
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
einen	ART.Indef.Acc.Sg.Masc	eine-x
Rechner	N.Reg.Acc.Sg.Masc	Rechner-n
zu	PART.Zu	zu-x
benutzen	VINF.Full	benutzen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Ergebnisse	N.Reg.Nom.Pl.Neut	Ergebnis-n
</s>
</align>
<align>
<s>
GCompris	N.Name.Nom.Sg.*	GCompris-n
respektiert	VFIN.Full.3.Sg.Pres.Ind	respektieren-v
die	ART.Def.Acc.Pl.Fem	die-x
grundlegenden	ADJA.Pos.Acc.Pl.Fem	grundlegend-j
Freiheiten	N.Reg.Acc.Pl.Fem	Freiheit-n
der	ART.Def.Gen.Pl.Masc	die-x
Nutzer	N.Reg.Gen.Pl.Masc	Nutzer-n
<g/>
;	SYM.Pun.Sent	;-x
dies	PRO.Dem.Subst.Acc.Sg.Neut	dies-p
ermöglichte	VFIN.Full.3.Sg.Past.Ind	ermöglichen-v
es	PRO.Pers.Subst.3.Nom.Sg.Neut	sie-p
den	ART.Def.Dat.Pl.*	die-x
Insight-Entwicklern	N.Reg.Dat.Pl.Masc	Insight-Entwickler-n
und	CONJ.Coord	und-c
Fachleuten	N.Reg.Dat.Pl.*	Fachleute-n
<g/>
,	SYM.Pun.Comma	,-x
die	ART.Def.Nom.Sg.Fem	die-x
Software	N.Reg.Nom.Sg.Fem	Software-n
an	APPR	an-i
die	ART.Def.Acc.Pl.Neut	die-x
Bedürfnisse	N.Reg.Acc.Pl.Neut	Bedürfnis-n
der	ART.Def.Gen.Pl.Neut	die-x
Kinder	N.Reg.Gen.Pl.Neut	Kind-n
anzupassen	VINF.Full.zu	anpassen-v
<g/>
,	SYM.Pun.Comma	,-x
neue	ADJA.Pos.Acc.Pl.Fem	neu-j
Aktivitäten	N.Reg.Acc.Pl.Fem	Aktivität-n
zu	PART.Zu	zu-x
erstellen	VINF.Full	erstellen-v
und	CONJ.Coord	und-c
eine	ART.Indef.Acc.Sg.Fem	eine-x
innovative	ADJA.Pos.Acc.Sg.Fem	innovativ-j
Programmnutzung	N.Reg.Acc.Sg.Fem	Programmnutzung-n
vorzuschlagen	VINF.Full.zu	vorschlagen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
autistischen	ADJA.Pos.Dat.Pl.Neut	autistisch-j
Kindern	N.Reg.Dat.Pl.Neut	Kind-n
und	CONJ.Coord	und-c
deren	PRO.Dem.Subst.Gen.Pl.Neut	die-p
Eltern	N.Reg.Dat.Pl.*	Eltern-n
zu	PART.Zu	zu-x
helfen	VINF.Full	helfen-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Dem	ART.Def.Dat.Sg.Neut	die-x
Insight-Team	N.Reg.Dat.Sg.Neut	Insight-Team-n
steht	VFIN.Full.3.Sg.Pres.Ind	stehen-v
auch	ADV	auch-a
frei	PART.Verb	frei-x
<g/>
,	SYM.Pun.Comma	,-x
modifizierte	ADJA.Pos.Acc.Pl.Fem	modifiziert-j
Kopien	N.Reg.Acc.Pl.Fem	Kopie-n
an	APPR	an-i
LehrerInnen	N.Reg.Dat.Pl.Fem	Lehrerin-n
und	CONJ.Coord	und-c
Eltern	N.Reg.Dat.Pl.*	Eltern-n
zu	PART.Zu	zu-x
verteilen	VINF.Full	verteilen-v
<g/>
,	SYM.Pun.Comma	,-x
um	CONJ.SubInf	um-c
das	ART.Def.Acc.Sg.Neut	die-x
Programm	N.Reg.Acc.Sg.Neut	Programm-n
zu	APPR	zu-i
Hause	N.Reg.Dat.Sg.Neut	Haus-n
ohne	APPR	ohne-i
Einschränkungen	N.Reg.Acc.Pl.Fem	Einschränkung-n
nutzen	VINF.Full	nutzen-v
zu	PART.Zu	zu-x
können	VINF.Mod	können-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
<align>
<s>
Modifizierte	ADJA.Pos.Nom.Pl.Fem	modifiziert-j
Versionen	N.Reg.Nom.Pl.Fem	Version-n
haben	VFIN.Aux.3.Pl.Pres.Ind	haben-v
sich	PRO.Refl.Subst.3.Acc.Pl.*	sie-p
bereits	ADV	bereits-a
bei	APPR	bei-i
der	ART.Def.Dat.Sg.Fem	die-x
Verbesserung	N.Reg.Dat.Sg.Fem	Verbesserung-n
des	ART.Def.Gen.Sg.Neut	die-x
akademischen	ADJA.Pos.Gen.Sg.Neut	akademisch-j
und	CONJ.Coord	und-c
funktionellen	ADJA.Pos.Gen.Sg.Neut	funktionell-j
Talents	N.Reg.Gen.Sg.Neut	Talent-n
geistig	ADJD.Pos	geistig-j
behinderter	ADJD.Comp	behindert-j
Kinder	N.Reg.Nom.Pl.Neut	Kind-n
bewährt	VPP.Full.Psp	bewähren-v
<g/>
.	SYM.Pun.Sent	.-x
</s>
</align>
